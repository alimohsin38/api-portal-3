import MaskedInput from '../input'
import {countryCodeLookup} from '../../utils/address'
import castArray from 'lodash/castArray'

/* TODO: Handle multiple patterns in the array */
const countryPhoneMasks = {
    AD: '+376-111-111',
    AE: ['+97\\1-1-111-1111', '+97\\1-51-111-1111'],
    AF: '+93-11-111-1111',
    AG: '+\\1(268)111-1111',
    AI: '+\\1(264)111-1111',
    AL: '+355(111)111-111',
    AM: '+374-11-111-111',
    CW: ['+599-111-1111', '+599-9111-1111'],
    AO: '+244(111)111-111',
    AQ: '+672-\\111-111',
    AR: '+54(111)111-1111',
    AS: '+\\1(684)111-1111',
    AT: '+43(111)111-1111',
    AU: '+6\\1-1-1111-1111',
    AW: '+297-111-1111',
    AZ: '+994-11-111-11-11',
    BA: ['+387-11-1111', '+387-11-11111'],
    BB: '+\\1(246)111-1111',
    BD: '+880-11-111-111',
    BE: '+32(111)111-111',
    BF: '+226-11-11-1111',
    BG: '+359(111)111-111',
    BH: '+973-1111-1111',
    BI: '+257-11-11-1111',
    BJ: '+229-11-11-1111',
    BM: '+\\1(44\\1)111-1111',
    BN: '+673-111-1111',
    BO: '+59\\1-1-111-1111',
    BR: ['+55(11)1111-1111', '+55(11)91111-1111'],
    BS: '+\\1(242)111-1111',
    BT: ['+975-1-111-111', '+975-\\17-111-111'],
    BW: '+267-11-111-111',
    BY: '+375(11)111-11-11',
    BZ: '+50\\1-111-1111',
    CA: '+\\1(111)111-1111',
    CD: '+243(111)111-111',
    CF: '+236-11-11-1111',
    CG: '+242-11-111-1111',
    CH: '+4\\1-11-111-1111',
    CI: '+225-11-111-111',
    CK: '+682-11-111',
    CL: '+56-1-1111-1111',
    CM: '+237-1111-1111',
    CN: ['+86(111)1111-111', '+86(111)1111-1111', '+86-11-11111-11111'],
    CO: '+57(111)111-1111',
    CR: '+506-1111-1111',
    CU: '+53-1-111-1111',
    CV: '+238(111)11-11',
    CY: '+357-11-111-111',
    CZ: '+420(111)111-111',
    DE: ['+49-111-111', '+49(111)11-11', '+49(111)11-111', '+49(111)11-1111', '+49(111)111-1111', '+49(1111)111-1111'],
    DJ: '+253-11-11-11-11',
    DK: '+45-11-11-11-11',
    DM: '+\\1(767)111-1111',
    DO: ['+\\1(809)111-1111', '+\\1(829)111-1111', '+\\1(849)111-1111'],
    DZ: '+2\\13-11-111-1111',
    EC: ['+593-1-111-1111', '+593-11-111-1111'],
    EE: ['+372-111-1111', '+372-1111-1111'],
    EG: '+20(111)111-1111',
    ER: '+29\\1-1-111-111',
    ES: '+34(111)111-111',
    ET: '+25\\1-11-111-1111',
    FI: '+358(111)111-11-11',
    FJ: '+679-11-11111',
    FK: '+500-11111',
    FM: '+69\\1-111-1111',
    FO: '+298-111-111',
    FR: ['+262-11111-1111', '+33(111)111-111', '+508-11-1111', '+590(111)111-111'],
    GA: '+24\\1-1-11-11-11',
    GB: '+44-11-1111-1111',
    GD: '+\\1(473)111-1111',
    GE: '+995(111)111-111',
    GF: '+594-11111-1111',
    GH: '+233(111)111-111',
    GI: '+350-111-11111',
    GL: '+299-11-11-11',
    GM: '+220(111)11-11',
    GN: '+224-11-111-111',
    GQ: '+240-11-111-1111',
    GR: '+30(111)111-1111',
    GT: '+502-1-111-1111',
    GU: '+\\1(67\\1)111-1111',
    GW: '+245-1-111111',
    GY: '+592-111-1111',
    HK: '+852-1111-1111',
    HN: '+504-1111-1111',
    HR: '+385-11-111-111',
    HT: '+509-11-11-1111',
    HU: '+36(111)111-111',
    ID: ['+62-11-111-11', '+62-11-111-111', '+62-11-111-1111', '+62(811)111-111', '+62(811)111-1111', '+62(811)111-11-111'],
    IE: '+353(111)111-111',
    IL: ['+972-1-111-1111', '+972-51-111-1111'],
    IN: '+9\\1(1111)111-111',
    IO: '+246-111-1111',
    IQ: '+964(111)111-1111',
    IR: '+98(111)111-1111',
    IS: '+354-111-1111',
    IT: '+39(111)1111-111',
    JM: '+\\1(876)111-1111',
    JO: '+962-1-1111-1111',
    JP: ['+8\\1(111)111-111', '+8\\1-11-1111-1111'],
    KE: '+254-111-111111',
    KG: '+996(111)111-111',
    KH: '+855-11-111-111',
    KI: '+686-11-111',
    KM: '+269-11-11111',
    KN: '+\\1(869)111-1111',
    KP: ['+850-111-111', '+850-11-111-111', '+850-1111-1111', '+850-\\19\\1-111-1111', '+850-111-1111-111', '+850-1111-1111111111111'],
    KR: '+82-11-111-1111',
    KW: '+965-1111-1111',
    KY: '+\\1(345)111-1111',
    KZ: ['+7(611)111-11-11', '+7(711)111-11-11'],
    LA: ['+856-11-111-111', '+856(2011)111-111'],
    LB: ['+96\\1-1-111-111', '+96\\1-11-111-111'],
    LC: '+\\1(758)111-1111',
    LI: '+423(111)111-1111',
    LK: '+94-11-111-1111',
    LR: '+23\\1-11-111-111',
    LS: '+266-1-111-1111',
    LT: '+370(111)11-111',
    LU: '+352(111)111-111',
    LV: '+37\\1-11-111-111',
    LY: ['+2\\18-11-111-111', '+2\\18-2\\1-111-1111'],
    MA: '+2\\12-11-1111-111',
    MC: ['+377-11-111-111', '+377(111)111-111'],
    MD: '+373-1111-1111',
    ME: '+382-11-111-111',
    MG: '+26\\1-11-11-11111',
    MH: '+692-111-1111',
    MK: '+389-11-111-111',
    ML: '+223-11-11-1111',
    MM: ['+95-111-111', '+95-1-111-111', '+95-11-111-111'],
    MN: '+976-11-11-1111',
    MO: '+853-1111-1111',
    MP: '+\\1(670)111-1111',
    MQ: '+596(111)11-11-11',
    MR: '+222-11-11-1111',
    MS: '+\\1(664)111-1111',
    MT: '+356-1111-1111',
    MU: '+230-111-1111',
    MV: '+960-111-1111',
    MW: ['+265-\\1-111-111', '+265-1-1111-1111'],
    MX: ['+52-11-11-1111', '+52(111)111-1111'],
    MY: ['+60-1-111-111', '+60-11-111-111', '+60-11-111-1111', '+60(111)111-111'],
    MZ: '+258-11-111-111',
    NA: '+264-11-111-1111',
    NC: '+687-11-1111',
    NE: '+227-11-11-1111',
    NF: '+672-311-111',
    NG: ['+234-11-111-11', '+234-11-111-111', '+234(111)111-1111'],
    NI: '+505-1111-1111',
    NL: '+3\\1-11-111-1111',
    NO: '+47(111)11-111',
    NP: '+977-11-111-111',
    NR: '+674-111-1111',
    NU: '+683-1111',
    NZ: ['+64-11-111-111', '+64(111)111-111', '+64(111)111-1111'],
    OM: '+968-11-111-111',
    PA: '+507-111-1111',
    PE: '+5\\1(111)111-111',
    PF: '+689-11-11-11',
    PG: '+675(111)11-111',
    PH: '+63(111)111-1111',
    PK: '+92(111)111-1111',
    PL: '+48(111)111-111',
    PS: '+970-11-111-1111',
    PT: '+35\\1-11-111-1111',
    PW: '+680-111-1111',
    PY: '+595(111)111-111',
    QA: '+974-1111-1111',
    RE: '+262-11111-1111',
    RO: '+40-11-111-1111',
    RS: '+38\\1-11-111-1111',
    RU: '+7(111)111-11-11',
    RW: '+250(111)111-111',
    SA: ['+966-1-111-1111', '+966-5-1111-1111'],
    SB: ['+677-11111', '+677-111-1111'],
    SC: '+248-1-111-111',
    SD: '+249-11-111-1111',
    SE: '+46-11-111-1111',
    SG: '+65-1111-1111',
    SH: ['+290-1111', '+247-1111'],
    SI: '+386-11-111-111',
    SK: '+42\\1(111)111-111',
    SL: '+232-11-111111',
    SM: '+378-1111-111111',
    SN: '+22\\1-11-111-1111',
    SO: ['+252-1-111-111', '+252-11-111-111'],
    SR: ['+597-111-111', '+597-111-1111'],
    SS: '+2\\1\\1-11-111-1111',
    ST: '+239-11-11111',
    SV: '+503-11-11-1111',
    SX: '+\\1(72\\1)111-1111',
    SY: '+963-11-1111-111',
    SZ: '+268-11-11-1111',
    TC: '+\\1(649)111-1111',
    TD: '+235-11-11-11-11',
    TG: '+228-11-111-111',
    TH: ['+66-11-111-111', '+66-11-111-1111'],
    TJ: '+992-11-111-1111',
    TK: '+690-1111',
    TL: ['+670-111-1111', '+670-771-11111', '+670-781-11111'],
    TM: '+993-1-111-1111',
    TN: '+2\\16-11-111-111',
    TO: '+676-11111',
    TR: '+90(111)111-1111',
    TT: '+\\1(868)111-1111',
    TV: ['+688-21111', '+688-901111'],
    TW: ['+886-1111-1111', '+886-1-1111-1111'],
    TZ: '+255-11-111-1111',
    UA: '+380(11)111-11-11',
    UG: '+256(111)111-111',
    US: '+\\1(111)111-1111',
    UY: '+598-1-111-11-11',
    UZ: '+998-11-111-1111',
    VA: '+39-6-698-11111',
    VC: '+\\1(784)111-1111',
    VE: '+58(111)111-1111',
    VG: '+\\1(284)111-1111',
    VI: '+\\1(340)111-1111',
    VN: ['+84-11-1111-111', '+84(111)1111-111'],
    VU: ['+678-11111', '+678-11-11111'],
    WF: '+68\\1-11-1111',
    WS: '+685-11-1111',
    YE: ['+967-1-111-111', '+967-11-111-111', '+967-111-111-111'],
    ZA: '+27-11-111-1111',
    ZM: '+260-11-111-1111',
    ZW: '+263-1-111111',
}

const phoneCountry = new WeakMap()

class MaskedPhoneInput extends MaskedInput {
    constructor(country) {
        super({
            pattern: '1111111111',
        })
        this.country = country || 'US'
    }

    set country(value) {
        const newCountry = countryCodeLookup(value)
        phoneCountry.set(this, newCountry)
        const masks = castArray(newCountry && countryPhoneMasks[newCountry])
        const oldValue = this.value
        this.mask.setPattern(masks[0] || '1111111111')
        this.value = oldValue
    }

    get country() {
        return phoneCountry.get(this)
    }
}

export default MaskedPhoneInput
