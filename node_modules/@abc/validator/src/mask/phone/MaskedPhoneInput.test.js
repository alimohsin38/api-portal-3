import MaskedPhoneInput from  './'
import {countryLookup} from '../../utils/address'

describe('MaskedPhoneInput', () => {
    describe('Test basic render', () => {
        let maskedPhone

        beforeEach(() => {
            maskedPhone = new MaskedPhoneInput()
        })

        it('should have default value for US phone numbers', () => {
            expect(maskedPhone.displayValue).toEqual('+1(___)___-____')
        })
    })

    describe('Test countries', () => {
        let maskedPhone

        beforeEach(() => {
            maskedPhone = new MaskedPhoneInput()
        })

        it('should have value for countries outide the US', () => {
            maskedPhone.country = 'GB'
            expect(maskedPhone.country).toEqual('GB')
            expect(maskedPhone.displayValue).toEqual('+44-__-____-____')
        })

        it('should automatically re-apply value after country changes', () => {
            maskedPhone.value = '5555555555'
            expect(maskedPhone.displayValue).toEqual('+1(555)555-5555')
            maskedPhone.country = 'GB'
            expect(maskedPhone.displayValue).toEqual('+44-55-5555-5555')
        })

        Object.keys(countryLookup).forEach((countryName) => {
            const country = countryLookup[countryName].twoLetter
            it(`should allow the setting of country to ${country}`, () => {
                maskedPhone.country = country
                expect(maskedPhone.country).toEqual(country)
            })
        })

        it('should have default value for non-existant countries', () => {
            maskedPhone.country = 'fake-country'
            expect(maskedPhone.displayValue).toEqual('__________')
        })
    })
})