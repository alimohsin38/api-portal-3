{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap b9054781450f1bf055ce","webpack:///./node_modules/libphonenumber-js/es6/parse.js","webpack:///./node_modules/core-js/library/modules/_global.js","webpack:///./node_modules/core-js/library/modules/_wks.js","webpack:///./node_modules/libphonenumber-js/es6/metadata.js","webpack:///./src/utils/address/index.js","webpack:///./node_modules/core-js/library/modules/_core.js","webpack:///./node_modules/core-js/library/modules/_hide.js","webpack:///./node_modules/core-js/library/modules/_descriptors.js","webpack:///./node_modules/core-js/library/modules/_iterators.js","webpack:///./node_modules/core-js/library/modules/_object-dp.js","webpack:///./node_modules/core-js/library/modules/_an-object.js","webpack:///./node_modules/core-js/library/modules/_has.js","webpack:///./node_modules/libphonenumber-js/es6/common.js","webpack:///./node_modules/libphonenumber-js/es6/format.js","webpack:///./node_modules/libphonenumber-js/es6/get number type.js","webpack:///./node_modules/babel-runtime/core-js/get-iterator.js","webpack:///./node_modules/core-js/library/modules/_to-iobject.js","webpack:///./node_modules/core-js/library/modules/_defined.js","webpack:///./node_modules/core-js/library/modules/_export.js","webpack:///./node_modules/core-js/library/modules/_is-object.js","webpack:///./node_modules/core-js/library/modules/_fails.js","webpack:///./node_modules/core-js/library/modules/_to-integer.js","webpack:///./node_modules/core-js/library/modules/_shared-key.js","webpack:///./node_modules/core-js/library/modules/_iobject.js","webpack:///./node_modules/core-js/library/modules/_cof.js","webpack:///./node_modules/core-js/library/modules/_iter-define.js","webpack:///./node_modules/core-js/library/modules/_dom-create.js","webpack:///./node_modules/core-js/library/modules/_property-desc.js","webpack:///./node_modules/core-js/library/modules/_object-keys.js","webpack:///./node_modules/core-js/library/modules/_shared.js","webpack:///./node_modules/core-js/library/modules/_uid.js","webpack:///./node_modules/core-js/library/modules/_enum-bug-keys.js","webpack:///./node_modules/core-js/library/modules/_set-to-string-tag.js","webpack:///./node_modules/core-js/library/modules/_to-object.js","webpack:///./node_modules/libphonenumber-js/es6/validate.js","webpack:///./node_modules/libphonenumber-js/es6/as you type.js","webpack:///./src/mask/input/index.js","webpack:///./src/export.js","webpack:///./src/validation/email/index.js","webpack:///./src/validation/phone/index.js","webpack:///./node_modules/libphonenumber-js/index.es6.js","webpack:///./node_modules/libphonenumber-js/metadata.min.json","webpack:///./node_modules/core-js/library/fn/get-iterator.js","webpack:///./node_modules/core-js/library/modules/web.dom.iterable.js","webpack:///./node_modules/core-js/library/modules/es6.array.iterator.js","webpack:///./node_modules/core-js/library/modules/_add-to-unscopables.js","webpack:///./node_modules/core-js/library/modules/_iter-step.js","webpack:///./node_modules/core-js/library/modules/_library.js","webpack:///./node_modules/core-js/library/modules/_ctx.js","webpack:///./node_modules/core-js/library/modules/_a-function.js","webpack:///./node_modules/core-js/library/modules/_ie8-dom-define.js","webpack:///./node_modules/core-js/library/modules/_to-primitive.js","webpack:///./node_modules/core-js/library/modules/_redefine.js","webpack:///./node_modules/core-js/library/modules/_iter-create.js","webpack:///./node_modules/core-js/library/modules/_object-create.js","webpack:///./node_modules/core-js/library/modules/_object-dps.js","webpack:///./node_modules/core-js/library/modules/_object-keys-internal.js","webpack:///./node_modules/core-js/library/modules/_array-includes.js","webpack:///./node_modules/core-js/library/modules/_to-length.js","webpack:///./node_modules/core-js/library/modules/_to-absolute-index.js","webpack:///./node_modules/core-js/library/modules/_html.js","webpack:///./node_modules/core-js/library/modules/_object-gpo.js","webpack:///./node_modules/core-js/library/modules/es6.string.iterator.js","webpack:///./node_modules/core-js/library/modules/_string-at.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator-method.js","webpack:///./node_modules/core-js/library/modules/_classof.js","webpack:///./node_modules/babel-runtime/helpers/extends.js","webpack:///./node_modules/babel-runtime/core-js/object/assign.js","webpack:///./node_modules/core-js/library/fn/object/assign.js","webpack:///./node_modules/core-js/library/modules/es6.object.assign.js","webpack:///./node_modules/core-js/library/modules/_object-assign.js","webpack:///./node_modules/core-js/library/modules/_object-gops.js","webpack:///./node_modules/core-js/library/modules/_object-pie.js","webpack:///./node_modules/babel-runtime/helpers/classCallCheck.js","webpack:///./node_modules/babel-runtime/helpers/createClass.js","webpack:///./node_modules/babel-runtime/core-js/object/define-property.js","webpack:///./node_modules/core-js/library/fn/object/define-property.js","webpack:///./node_modules/core-js/library/modules/es6.object.define-property.js","webpack:///./src/validation/postalCode/index.js","webpack:///./src/validation/required/index.js","webpack:///./src/validation/territory/index.js","webpack:///./src/validation/url/index.js","webpack:///./node_modules/inputmask-core/lib/index.js","webpack:///./src/utils/keyboard/index.js","webpack:///./src/mask/phone/index.js","webpack:///./node_modules/lodash/castArray.js","webpack:///./node_modules/lodash/isArray.js"],"names":["countryLookup","name","twoLetter","threeLetter","territoryLabels","territoryOptions","ACT","NSW","NT","QLD","SA","TAS","VIC","WA","AB","BC","MB","NB","NL","NS","NU","ON","PE","QC","SK","YT","JH","KH","KL","KN","LA","ME","PG","PH","PJ","PK","PL","SL","TE","AL","AK","AZ","AR","CA","CO","CT","DE","DC","FL","GA","HI","ID","IL","IN","IA","KS","KY","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WV","WI","WY","postalCodeRegExp","UK","JE","GG","IM","US","JP","FR","AU","IT","CH","AT","ES","BE","DK","SE","NO","BR","PT","FI","AX","KR","CN","TW","SG","DZ","AD","AM","BH","BD","BB","BY","BM","BA","IO","BN","BG","CV","CL","CR","HR","CY","CZ","DO","EC","EG","EE","FO","GE","GR","GL","GT","HT","HN","HU","IS","JO","KZ","KE","KW","LV","LB","LI","LT","LU","MK","MY","MV","MU","MX","MC","NP","NZ","NI","NG","OM","PY","PR","RO","RU","SM","SN","SI","ZA","LK","TJ","TH","TR","TM","UA","UY","UZ","VE","ZM","AS","CC","CK","RS","CS","YU","CX","ET","FK","NF","FM","GF","GN","GP","GS","GU","GW","HM","IQ","KG","LR","LS","MG","MH","MP","MQ","VI","PF","PM","PN","PW","RE","SH","SJ","SO","SZ","TC","WF","XK","INTL","countryNameLookup","country","normalizedCountry","replace","trim","toLowerCase","foundCountry","length","Object","keys","some","countryName","countryCodeLookup","type","countryCodes","undefined","countryHasTerritories","territoryLabelForCountry","territoryOptionsForCountry","inputMasks","WeakMap","getSelection","input","start","selectionStart","end","selectionEnd","setSelection","selection","focus","setSelectionRange","removePlaceholderCharacters","value","placeholderCharacters","split","reduce","accumulated","currentCharacter","currentIndex","includes","MaskedInput","options","inputMask","set","get","Promise","resolve","setTimeout","slice","i","l","pattern","isEditableIndex","charAt","placeholderChar","event","mask","updateMaskSelection","target","clipboardData","cutData","getInputSelection","backspace","preventDefault","setData","updateInputSelection","pasteData","types","getData","firstEditableIndex","paste","key","isUndo","undo","isRedo","redo","metaKey","altKey","ctrlKey","data","maskValue","displayValue","incomingValue","getValue","firstEmptyIndex","setValue","emptyValue","newValue","revealedValue","getRawValue","default","validateZipCode","validateState","VALID_EMAIL","validateEmail","test","validatePhone","phone","validatePostalCode","response","countryCode","validateRequired","toString","error","validateTerritory","territories","VALID_URL","RegExp","validateUrl","KEYCODE_V","KEYCODE_X","KEYCODE_Y","KEYCODE_Z","isCut","keyCode","isPaste","shiftKey","countryPhoneMasks","AE","AF","AG","AI","CW","AO","AQ","AW","BF","BI","BJ","BO","BS","BT","BW","BZ","CD","CF","CG","CI","CM","CU","DJ","DM","ER","FJ","GB","GD","GH","GI","GM","GQ","GY","HK","IE","IR","JM","KI","KM","KP","LC","LY","ML","MM","MR","MW","MZ","NA","NR","PS","QA","RW","SB","SR","SS","ST","SV","SX","SY","TD","TG","TK","TL","TO","TT","TV","TZ","UG","VC","VG","VN","VU","WS","YE","ZW","phoneCountry","MaskedPhoneInput","newCountry","masks","oldValue","setPattern"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;;AAE2B;;AAI3B;;AAEmC;;AAEnC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA,sCAAsC,GAAG;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,8DAA8D,2BAA2B;AACzF;AACA;AACA;AACA;AACA,+CAA+C,IAAI,2EAA2E,GAAG;;AAEjI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,kBAAkB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAW,gBAAgB,EAAE;AAC7D,gCAAgC,WAAW,gBAAgB,EAAE;AAC7D;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA,oFAAuB;AACvB;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+GAAiD,gEAAgE;AACjH;;AAEA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,6BAA6B;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+HAAiE,mEAAmE;AACpI;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAA6B,sDAAsD;AACnF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oFAAuB;;AAEvB;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA,iC;;;;;;ACznBA;AACA;AACA;AACA;AACA;AACA,yCAAyC;;;;;;;ACLzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;;A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D;AACA;AACA;;;;;;;ACPA;AACA;AACA,iCAAiC,QAAQ,mBAAmB,UAAU,EAAE,EAAE;AAC1E,CAAC;;;;;;;ACHD;;;;;;;ACAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,YAAY;AACf;AACA;AACA;AACA;;;;;;;ACfA;AACA;AACA;AACA;AACA;;;;;;;ACJA,uBAAuB;AACvB;AACA;AACA;;;;;;;;ACHA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kC;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;;AAE2B;;AAE4C;;AAEmN;;AAE1R;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,qCAAqC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,4HAA8D,gEAAgE;AAC9H;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA,kC;;;;;;;;;;;;;AC9NwC;;AAEb;;AAE8M;;AAEzO;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+BAA+B;AAC/B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,SAAS;AACT;AACA,2C;;;;;;AC5KA,kBAAkB,wD;;;;;;ACAlB;AACA;AACA;AACA;AACA;AACA;;;;;;;ACLA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,cAAc;AACd,cAAc;AACd,cAAc;AACd,eAAe;AACf,eAAe;AACf,eAAe;AACf,gBAAgB;AAChB;;;;;;;AC5DA;AACA;AACA;;;;;;;ACFA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACLA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACLA,iBAAiB;;AAEjB;AACA;AACA;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;;AAEA,8BAA8B,aAAa;;AAE3C;AACA;AACA;AACA;AACA;AACA,yCAAyC,oCAAoC;AAC7E,6CAA6C,oCAAoC;AACjF,KAAK,4BAA4B,oCAAoC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA,kCAAkC,2BAA2B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACPA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACNA;AACA;AACA,kDAAkD;AAClD;AACA,uCAAuC;AACvC;;;;;;;ACLA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;;AAEA;AACA,oEAAoE,iCAAiC;AACrG;;;;;;;ACNA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJwC;AACM;;AAE1B;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,qCAAqC;AAClD,aAAa,qCAAqC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oC;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEwY;;AAEzM;;AAE9F;;AAEtE;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAAmC;AACnC;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iDAAiD,KAAK;AACtD;AACA;AACA;AACA,yCAAyC,KAAK;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0GAA0D,IAAI;;AAE9D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA,kIAAoE,gEAAgE;AACpI;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oIAAsE,mEAAmE;AACzI;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE,KAAK,IAAI,KAAK,EAAE;AAC7C;AACA;AACA;AACA,2CAA2C,EAAE,KAAK,IAAI,KAAK,EAAE;AAC7D;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAI;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA,qHAAuD,mEAAmE;AAC1H;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA,CAAC;;AAED;;;AAGA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mHAAqD,mEAAmE;AACxH;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uC;;;;;;;;;;;;;;;;;AC54BA;;;;AACA;;;;;;;;AAEA,IAAMkB,aAAa,IAAIC,OAAJ,EAAnB;;AAEA,IAAMC,eAAe,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC5B,WAAO;AACHC,eAAOD,MAAME,cADV;AAEHC,aAAKH,MAAMI;AAFR,KA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,IAAI,0HAA0H,EAAE,MAAM,EAAE,MAAM,IAAI,kFAAkF,IAAI,oEAAoE,EAAE,MAAM,IAAI,uCAAuC,EAAE,MAAM,IAAI,kDAAkD,EAAE,MAAM,EAAE,iCAAiC,EAAE,iDAAiD,EAAE,eAAe,EAAE,MAAM,EAAE,kB;;;;;;ACA7s0E;AACA;AACA;;;;;;;ACFA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe,yBAAyB;AACxC;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,cAAc;AACd,iBAAiB;AACjB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;;;;;;ACjCA,8BAA8B;;;;;;;ACA9B;AACA,UAAU;AACV;;;;;;;ACFA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA;AACA;AACA;AACA;;;;;;;ACHA;AACA,qEAAsE,mBAAmB,UAAU,EAAE,EAAE;AACvG,CAAC;;;;;;;ACFD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACXA;;;;;;;;ACAA;AACA;AACA;AACA;AACA;;AAEA;AACA,2FAAkF,aAAa,EAAE;;AAEjG;AACA,qDAAqD,4BAA4B;AACjF;AACA;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;ACxCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACZA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,YAAY,eAAe;AAChC;AACA,KAAK;AACL;AACA;;;;;;;ACtBA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACNA;AACA;;;;;;;ACDA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;ACZA;AACA;;AAEA;AACA;AACA,6BAA6B;AAC7B,cAAc;AACd;AACA,CAAC;AACD;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,UAAU;AACV,CAAC;;;;;;;AChBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACPA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB,EAAE;;AAE/C;AACA;AACA;AACA;AACA,GAAG,YAAY;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtBA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,E;;;;;;ACtBA,kBAAkB,wD;;;;;;ACAlB;AACA;;;;;;;ACDA;AACA;;AAEA,0CAA0C,kCAAsC;;;;;;;;ACHhF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU,EAAE;AAChD,mBAAmB,sCAAsC;AACzD,CAAC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ACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B;AAC9B,GAAG;AACH;AACA,8BAA8B;AAC9B,GAAG;AACH;AACA,8BAA8B;AAC9B,GAAG;AACH;AACA,8BAA8B,8BAA8B;AAC5D,+BAA+B;AAC/B,GAAG;AACH;AACA,8BAA8B,qCAAqC;AACnE,+BAA+B;AAC/B;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yCAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;AACA;AACA;AACA;;AAEA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qEAAqE;AAC7F;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qEAAqE;AAC7F;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+EAA+E,OAAO;AACtF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,qFAAqF;AAC/G;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA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","file":"validator.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"validator\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"validator\"] = factory();\n\telse\n\t\troot[\"validator\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 37);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b9054781450f1bf055ce","import _getIterator from 'babel-runtime/core-js/get-iterator';\nimport _extends from 'babel-runtime/helpers/extends';\n// This is a port of Google Android `libphonenumber`'s\n// `phonenumberutil.js` of 17th November, 2016.\n//\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\n\nimport { matches_entirely } from './common';\n\nimport { get_phone_code, get_national_number_pattern, get_national_prefix_for_parsing, get_national_prefix_transform_rule, get_leading_digits, get_metadata_by_country_phone_code, get_formats } from\n// get_format_national_prefix_is_mandatory_when_formatting\n'./metadata';\n\nimport { choose_format_for_number } from './format';\n\nimport get_number_type from './get number type';\n\nexport var PLUS_CHARS = '+\\uFF0B';\n\n// Digits accepted in phone numbers\n// (ascii, fullwidth, arabic-indic, and eastern arabic digits).\nexport var VALID_DIGITS = '0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9';\n\n// `DASHES` will be right after the opening square bracket of the \"character class\"\nvar DASHES = '-\\u2010-\\u2015\\u2212\\u30FC\\uFF0D';\nvar SLASHES = '\\uFF0F/';\nvar DOTS = '\\uFF0E.';\nvar WHITESPACE = ' \\xA0\\xAD\\u200B\\u2060\\u3000';\nvar BRACKETS = '()\\uFF08\\uFF09\\uFF3B\\uFF3D\\\\[\\\\]';\nvar TILDES = '~\\u2053\\u223C\\uFF5E';\n\n// Regular expression of acceptable punctuation found in phone numbers. This\n// excludes punctuation found as a leading character only. This consists of dash\n// characters, white space characters, full stops, slashes, square brackets,\n// parentheses and tildes. Full-width variants are also present.\nexport var VALID_PUNCTUATION = '' + DASHES + SLASHES + DOTS + WHITESPACE + BRACKETS + TILDES;\n\n//  Regular expression of viable phone numbers. This is location independent.\n//  Checks we have at least three leading digits, and only valid punctuation,\n//  alpha characters and digits in the phone number. Does not include extension\n//  data. The symbol 'x' is allowed here as valid punctuation since it is often\n//  used as a placeholder for carrier codes, for example in Brazilian phone\n//  numbers. We also allow multiple '+' characters at the start.\n//\n//  Corresponds to the following:\n//  [digits]{minLengthNsn}|\n//  plus_sign*\n//  (([punctuation]|[star])*[digits]){3,}([punctuation]|[star]|[digits]|[alpha])*\n//\n//  The first reg-ex is to allow short numbers (two digits long) to be parsed if\n//  they are entered as \"15\" etc, but only if there is no punctuation in them.\n//  The second expression restricts the number of digits to three or more, but\n//  then allows them to be in international form, and to have alpha-characters\n//  and punctuation. We split up the two reg-exes here and combine them when\n//  creating the reg-ex VALID_PHONE_NUMBER_PATTERN itself so we can prefix it\n//  with ^ and append $ to each branch.\n//\n//  \"Note VALID_PUNCTUATION starts with a -,\n//   so must be the first in the range\" (c) Google devs.\n//  (wtf did they mean by saying that; probably nothing)\n//\nvar MIN_LENGTH_PHONE_NUMBER_PATTERN = '[' + VALID_DIGITS + ']{' + MIN_LENGTH_FOR_NSN + '}';\n//\n// And this is the second reg-exp:\n// (see MIN_LENGTH_PHONE_NUMBER_PATTERN for a full description of this reg-exp)\n//\nvar VALID_PHONE_NUMBER = '[' + PLUS_CHARS + ']{0,1}' + '(?:' + '[' + VALID_PUNCTUATION + ']*' + '[' + VALID_DIGITS + ']' + '){3,}' + '[' + VALID_PUNCTUATION + VALID_DIGITS + ']*';\n\n// The combined regular expression for valid phone numbers:\n//\nvar VALID_PHONE_NUMBER_PATTERN = new RegExp(\n// Either a short two-digit-only phone number\n'^' + MIN_LENGTH_PHONE_NUMBER_PATTERN + '$' + '|' +\n// Or a longer fully parsed phone number (min 3 characters)\n'^' + VALID_PHONE_NUMBER +\n// screw phone number extensions\n// '(?:' + EXTN_PATTERNS_FOR_PARSING + ')?' +\n'$', 'i');\n\n// This consists of the plus symbol, digits, and arabic-indic digits.\nvar PHONE_NUMBER_START_PATTERN = new RegExp('[' + PLUS_CHARS + VALID_DIGITS + ']');\n\n// Regular expression of trailing characters that we want to remove.\nvar AFTER_PHONE_NUMBER_END_PATTERN = new RegExp('[^' + VALID_DIGITS + ']+$');\n\nvar LEADING_PLUS_CHARS_PATTERN = new RegExp('^[' + PLUS_CHARS + ']+');\n\n// These mappings map a character (key) to a specific digit that should\n// replace it for normalization purposes. Non-European digits that\n// may be used in phone numbers are mapped to a European equivalent.\n//\n// E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\n//\nexport var DIGIT_MAPPINGS = {\n\t'0': '0',\n\t'1': '1',\n\t'2': '2',\n\t'3': '3',\n\t'4': '4',\n\t'5': '5',\n\t'6': '6',\n\t'7': '7',\n\t'8': '8',\n\t'9': '9',\n\t'\\uFF10': '0', // Fullwidth digit 0\n\t'\\uFF11': '1', // Fullwidth digit 1\n\t'\\uFF12': '2', // Fullwidth digit 2\n\t'\\uFF13': '3', // Fullwidth digit 3\n\t'\\uFF14': '4', // Fullwidth digit 4\n\t'\\uFF15': '5', // Fullwidth digit 5\n\t'\\uFF16': '6', // Fullwidth digit 6\n\t'\\uFF17': '7', // Fullwidth digit 7\n\t'\\uFF18': '8', // Fullwidth digit 8\n\t'\\uFF19': '9', // Fullwidth digit 9\n\t'\\u0660': '0', // Arabic-indic digit 0\n\t'\\u0661': '1', // Arabic-indic digit 1\n\t'\\u0662': '2', // Arabic-indic digit 2\n\t'\\u0663': '3', // Arabic-indic digit 3\n\t'\\u0664': '4', // Arabic-indic digit 4\n\t'\\u0665': '5', // Arabic-indic digit 5\n\t'\\u0666': '6', // Arabic-indic digit 6\n\t'\\u0667': '7', // Arabic-indic digit 7\n\t'\\u0668': '8', // Arabic-indic digit 8\n\t'\\u0669': '9', // Arabic-indic digit 9\n\t'\\u06F0': '0', // Eastern-Arabic digit 0\n\t'\\u06F1': '1', // Eastern-Arabic digit 1\n\t'\\u06F2': '2', // Eastern-Arabic digit 2\n\t'\\u06F3': '3', // Eastern-Arabic digit 3\n\t'\\u06F4': '4', // Eastern-Arabic digit 4\n\t'\\u06F5': '5', // Eastern-Arabic digit 5\n\t'\\u06F6': '6', // Eastern-Arabic digit 6\n\t'\\u06F7': '7', // Eastern-Arabic digit 7\n\t'\\u06F8': '8', // Eastern-Arabic digit 8\n\t'\\u06F9': '9' // Eastern-Arabic digit 9\n\n\n\t// The maximum length of the country calling code.\n};var MAX_LENGTH_COUNTRY_CODE = 3;\n\n// The minimum length of the national significant number.\nvar MIN_LENGTH_FOR_NSN = 2;\n\n// The ITU says the maximum length should be 15,\n// but one can find longer numbers in Germany.\nvar MAX_LENGTH_FOR_NSN = 17;\n\n// We don't allow input strings for parsing to be longer than 250 chars.\n// This prevents malicious input from consuming CPU.\nvar MAX_INPUT_STRING_LENGTH = 250;\n\nvar default_options = {\n\tcountry: {}\n\n\t// `options`:\n\t//  {\n\t//    country:\n\t//    {\n\t//      restrict - (a two-letter country code)\n\t//                 the phone number must be in this country\n\t//\n\t//      default - (a two-letter country code)\n\t//                default country to use for phone number parsing and validation\n\t//                (if no country code could be derived from the phone number)\n\t//    }\n\t//  }\n\t//\n\t// Returns `{ country, number }`\n\t//\n\t// Example use cases:\n\t//\n\t// ```js\n\t// parse('8 (800) 555-35-35', 'RU')\n\t// parse('8 (800) 555-35-35', 'RU', metadata)\n\t// parse('8 (800) 555-35-35', { country: { default: 'RU' } })\n\t// parse('8 (800) 555-35-35', { country: { default: 'RU' } }, metadata)\n\t// parse('+7 800 555 35 35')\n\t// parse('+7 800 555 35 35', metadata)\n\t// ```\n\t//\n};export default function parse(first_argument, second_argument, third_argument) {\n\tvar _sort_out_arguments = sort_out_arguments(first_argument, second_argument, third_argument),\n\t    text = _sort_out_arguments.text,\n\t    options = _sort_out_arguments.options,\n\t    metadata = _sort_out_arguments.metadata;\n\n\tif (!options) {\n\t\toptions = _extends({}, default_options);\n\t}\n\n\t// Validate country codes\n\n\t// Validate `default` country\n\tif (options.country.default && !metadata.countries[options.country.default]) {\n\t\tthrow new Error('Unknown country code: ' + options.country.default);\n\t}\n\n\t// Validate `restrict` country\n\tif (options.country.restrict && !metadata.countries[options.country.restrict]) {\n\t\tthrow new Error('Unknown country code: ' + options.country.restrict);\n\t}\n\n\t// Parse the phone number\n\n\tvar formatted_phone_number = extract_formatted_phone_number(text);\n\n\t// If the phone number is not viable, then abort.\n\tif (!is_viable_phone_number(formatted_phone_number)) {\n\t\treturn {};\n\t}\n\n\tvar _parse_phone_number_a = parse_phone_number_and_country_phone_code(formatted_phone_number, metadata),\n\t    country_phone_code = _parse_phone_number_a.country_phone_code,\n\t    number = _parse_phone_number_a.number;\n\n\t// Maybe invalid country phone code encountered\n\n\n\tif (!number) {\n\t\treturn {};\n\t}\n\n\tvar country = void 0;\n\tvar country_metadata = void 0;\n\n\t// Whether the phone number is formatted as an international phone number\n\tvar is_international = false;\n\n\tif (country_phone_code) {\n\t\tis_international = true;\n\n\t\t// Check country restriction\n\t\tif (options.country.restrict && country_phone_code !== get_phone_code(metadata.countries[options.country.restrict])) {\n\t\t\treturn {};\n\t\t}\n\n\t\t// Formatting information for regions which share\n\t\t// a country calling code is contained by only one region\n\t\t// for performance reasons. For example, for NANPA region\n\t\t// (\"North American Numbering Plan Administration\",\n\t\t//  which includes USA, Canada, Cayman Islands, Bahamas, etc)\n\t\t// it will be contained in the metadata for `US`.\n\t\tcountry_metadata = get_metadata_by_country_phone_code(country_phone_code, metadata);\n\n\t\t// `country` will be set later,\n\t\t// because, for example, for NANPA countries\n\t\t// there are several countries corresponding\n\t\t// to the same `1` country phone code.\n\t\t// Therefore, to reliably determine the exact country,\n\t\t// national (significant) number should be parsed first.\n\t} else if (options.country.restrict || options.country.default) {\n\t\tcountry = options.country.restrict || options.country.default;\n\t\tcountry_metadata = metadata.countries[country];\n\n\t\tnumber = normalize(text);\n\t}\n\n\tif (!country_metadata) {\n\t\treturn {};\n\t}\n\n\tvar national_number = strip_national_prefix(number, country_metadata);\n\n\tvar did_have_national_prefix = national_number !== number;\n\n\t// https://github.com/catamphetamine/libphonenumber-js/issues/67\n\t// if (!is_international && !did_have_national_prefix &&\n\t// \t\tis_national_prefix_required(national_number, country_metadata))\n\t// {\n\t// \treturn {}\n\t// }\n\n\t// Sometimes there are several countries\n\t// corresponding to the same country phone code\n\t// (e.g. NANPA countries all having `1` country phone code).\n\t// Therefore, to reliably determine the exact country,\n\t// national (significant) number should have been parsed first.\n\t//\n\tif (!country) {\n\t\t// When `metadata.json` is generated, all \"ambiguous\" country phone codes\n\t\t// get their countries populated with the full set of\n\t\t// \"phone number type\" regular expressions.\n\t\tcountry = find_country_code(country_phone_code, national_number, metadata);\n\n\t\t// Just in case there appears to be a bug in Google's metadata\n\t\t// and the exact country could not be extracted from the phone number.\n\t\t/* istanbul ignore if */\n\t\tif (!country) {\n\t\t\treturn {};\n\t\t}\n\n\t\t// Update metadata to be for this specific country\n\t\tcountry_metadata = metadata.countries[country];\n\t}\n\n\t// Validate national (significant) number length.\n\t//\n\t// A sidenote:\n\t//\n\t// They say that sometimes national (significant) numbers\n\t// can be longer than `MAX_LENGTH_FOR_NSN` (e.g. in Germany).\n\t// https://github.com/googlei18n/libphonenumber/blob/7e1748645552da39c4e1ba731e47969d97bdb539/resources/phonenumber.proto#L36\n\t// Such numbers will just be discarded.\n\t//\n\tif (national_number.length > MAX_LENGTH_FOR_NSN) {\n\t\treturn {};\n\t}\n\n\t// National number pattern is different for each country,\n\t// even for those ones which are part of the \"NANPA\" group.\n\tvar national_number_rule = new RegExp(get_national_number_pattern(country_metadata));\n\n\t// Check if national phone number pattern matches the number\n\tif (!matches_entirely(national_number, national_number_rule)) {\n\t\treturn {};\n\t}\n\n\treturn { country: country, phone: national_number };\n}\n\n// Normalizes a string of characters representing a phone number.\n// This converts wide-ascii and arabic-indic numerals to European numerals,\n// and strips punctuation and alpha characters.\n//\n// E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\n//\nexport function normalize(number) {\n\treturn replace_characters(number, DIGIT_MAPPINGS);\n}\n\n// For any character not being part of `replacements`\n// it is removed from the phone number.\nexport function replace_characters(text, replacements) {\n\tvar replaced = '';\n\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = _getIterator(text), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar character = _step.value;\n\n\t\t\tvar replacement = replacements[character.toUpperCase()];\n\n\t\t\tif (replacement !== undefined) {\n\t\t\t\treplaced += replacement;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn replaced;\n}\n\n// Checks to see if the string of characters could possibly be a phone number at\n// all. At the moment, checks to see that the string begins with at least 2\n// digits, ignoring any punctuation commonly found in phone numbers. This method\n// does not require the number to be normalized in advance - but does assume\n// that leading non-number symbols have been removed, such as by the method\n// `extract_possible_number`.\n//\nexport function is_viable_phone_number(number) {\n\treturn number.length >= MIN_LENGTH_FOR_NSN && matches_entirely(number, VALID_PHONE_NUMBER_PATTERN);\n}\n\nexport function extract_formatted_phone_number(text) {\n\tif (!text || text.length > MAX_INPUT_STRING_LENGTH) {\n\t\treturn '';\n\t}\n\n\t// Attempt to extract a possible number from the string passed in\n\n\tvar starts_at = text.search(PHONE_NUMBER_START_PATTERN);\n\n\tif (starts_at < 0) {\n\t\treturn '';\n\t}\n\n\treturn text\n\t// Trim everything to the left of the phone number\n\t.slice(starts_at)\n\t// Remove trailing non-numerical characters\n\t.replace(AFTER_PHONE_NUMBER_END_PATTERN, '');\n}\n\n// Parses a formatted phone number.\nexport function parse_phone_number(number) {\n\tif (!number) {\n\t\treturn '';\n\t}\n\n\tvar is_international = LEADING_PLUS_CHARS_PATTERN.test(number);\n\n\t// Remove non-digits\n\t// (and strip the possible leading '+')\n\tnumber = normalize(number);\n\n\tif (is_international) {\n\t\treturn '+' + number;\n\t}\n\n\treturn number;\n}\n\n// Parses a formatted phone number\n// and returns `{ country_phone_code, number }`\n// where `number` is the national (significant) phone number.\n//\n// (aka `maybeExtractCountryPhoneCode`)\n//\nexport function parse_phone_number_and_country_phone_code(number, metadata) {\n\tnumber = parse_phone_number(number);\n\n\tif (!number) {\n\t\treturn {};\n\t}\n\n\t// If this is not an international phone number,\n\t// then don't extract country phone code.\n\tif (number[0] !== '+') {\n\t\treturn { number: number };\n\t}\n\n\t// Strip the leading '+' sign\n\tnumber = number.slice(1);\n\n\t// Fast abortion: country codes do not begin with a '0'\n\tif (number[0] === '0') {\n\t\treturn {};\n\t}\n\n\t// The thing with country phone codes\n\t// is that they are orthogonal to each other\n\t// i.e. there's no such country phone code A\n\t// for which country phone code B exists\n\t// where B starts with A.\n\t// Therefore, while scanning digits,\n\t// if a valid country code is found,\n\t// that means that it is the country code.\n\t//\n\tvar i = 1;\n\twhile (i <= MAX_LENGTH_COUNTRY_CODE && i <= number.length) {\n\t\tvar country_phone_code = number.slice(0, i);\n\n\t\tif (metadata.country_phone_code_to_countries[country_phone_code]) {\n\t\t\treturn { country_phone_code: country_phone_code, number: number.slice(i) };\n\t\t}\n\n\t\ti++;\n\t}\n\n\treturn {};\n}\n\n// Strips any national prefix (such as 0, 1) present in the number provided\nexport function strip_national_prefix(number, country_metadata) {\n\tvar national_prefix_for_parsing = get_national_prefix_for_parsing(country_metadata);\n\n\tif (!number || !national_prefix_for_parsing) {\n\t\treturn number;\n\t}\n\n\t// Attempt to parse the first digits as a national prefix\n\tvar national_prefix_pattern = new RegExp('^(?:' + national_prefix_for_parsing + ')');\n\tvar national_prefix_matcher = national_prefix_pattern.exec(number);\n\n\t// If no national prefix is present in the phone number,\n\t// but if the national prefix is optional for this country,\n\t// then consider this phone number valid.\n\t//\n\t// Google's reference `libphonenumber` implementation\n\t// wouldn't recognize such phone numbers as valid,\n\t// but I think it would perfectly make sense\n\t// to consider such phone numbers as valid\n\t// because if a national phone number was originally\n\t// formatted without the national prefix\n\t// then it must be parseable back into the original national number.\n\t// In other words, `parse(format(number))`\n\t// must always be equal to `number`.\n\t//\n\tif (!national_prefix_matcher) {\n\t\treturn number;\n\t}\n\n\tvar national_significant_number = void 0;\n\n\t// `national_prefix_for_parsing` capturing groups\n\t// (used only for really messy cases: Argentina, Brazil, Mexico, Somalia)\n\tvar any_groups_were_captured = national_prefix_matcher[national_prefix_matcher.length - 1];\n\tvar national_prefix_transform_rule = get_national_prefix_transform_rule(country_metadata);\n\n\t// If the national number tranformation is needed then do it\n\tif (national_prefix_transform_rule && any_groups_were_captured) {\n\t\tnational_significant_number = number.replace(national_prefix_pattern, national_prefix_transform_rule);\n\t}\n\t// Else, no transformation is necessary,\n\t// and just strip the national prefix.\n\telse {\n\t\t\tnational_significant_number = number.slice(national_prefix_matcher[0].length);\n\t\t}\n\n\t// Verify the parsed national (significant) number for this country\n\tvar national_number_rule = new RegExp(get_national_number_pattern(country_metadata));\n\n\t// If the original number (before stripping national prefix) was viable,\n\t// and the resultant number is not, then prefer the original phone number.\n\t// This is because for some countries (e.g. Russia) the same digit could be both\n\t// a national prefix and a leading digit of a valid national phone number,\n\t// like `8` is the national prefix for Russia and both\n\t// `8 800 555 35 35` and `800 555 35 35` are valid numbers.\n\tif (matches_entirely(number, national_number_rule) && !matches_entirely(national_significant_number, national_number_rule)) {\n\t\treturn number;\n\t}\n\n\t// Return the parsed national (significant) number\n\treturn national_significant_number;\n}\n\nexport function find_country_code(country_phone_code, national_phone_number, metadata) {\n\t// Is always non-empty, because `country_phone_code` is always valid\n\tvar possible_countries = metadata.country_phone_code_to_countries[country_phone_code];\n\n\t// If there's just one country corresponding to the country code,\n\t// then just return it, without further phone number digits validation.\n\tif (possible_countries.length === 1) {\n\t\treturn possible_countries[0];\n\t}\n\n\tvar _iteratorNormalCompletion2 = true;\n\tvar _didIteratorError2 = false;\n\tvar _iteratorError2 = undefined;\n\n\ttry {\n\t\tfor (var _iterator2 = _getIterator(possible_countries), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\tvar country_code = _step2.value;\n\n\t\t\tvar country = metadata.countries[country_code];\n\n\t\t\t// Leading digits check would be the simplest one\n\t\t\tif (get_leading_digits(country)) {\n\t\t\t\tif (national_phone_number && national_phone_number.search(get_leading_digits(country)) === 0) {\n\t\t\t\t\treturn country_code;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Else perform full validation with all of those bulky\n\t\t\t// fixed-line/mobile/etc regular expressions.\n\t\t\telse if (get_number_type({ phone: national_phone_number, country: country_code }, metadata)) {\n\t\t\t\t\treturn country_code;\n\t\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError2 = true;\n\t\t_iteratorError2 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t_iterator2.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError2) {\n\t\t\t\tthrow _iteratorError2;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// export function is_national_prefix_required(national_number, country_metadata)\n// {\n// \tconst format = choose_format_for_number(get_formats(country_metadata), national_number)\n//\n// \tif (format)\n// \t{\n// \t\treturn get_format_national_prefix_is_mandatory_when_formatting(format, country_metadata)\n// \t}\n// }\n\n// Sort out arguments\nfunction sort_out_arguments(first_argument, second_argument, third_argument) {\n\tvar text = void 0;\n\tvar options = void 0;\n\tvar metadata = void 0;\n\n\t// Normalize numerical `value`.\n\t// https://github.com/catamphetamine/libphonenumber-js/issues/142\n\tif (typeof first_argument === 'number') {\n\t\tfirst_argument = String(first_argument);\n\t}\n\n\tif (typeof first_argument === 'string') {\n\t\ttext = first_argument;\n\t}\n\n\t// Covert `resrict` country to an `options` object\n\tif (typeof second_argument === 'string') {\n\t\tvar restrict_to_country = second_argument;\n\n\t\toptions = _extends({}, default_options, {\n\n\t\t\tcountry: {\n\t\t\t\trestrict: restrict_to_country\n\t\t\t}\n\t\t});\n\n\t\tmetadata = third_argument;\n\t} else {\n\t\t// Differentiate `metadata` from `options`\n\t\tif (second_argument && second_argument.countries) {\n\t\t\tmetadata = second_argument;\n\t\t} else {\n\t\t\toptions = second_argument;\n\t\t\tmetadata = third_argument;\n\t\t}\n\t}\n\n\t// Sanity check\n\tif (!metadata) {\n\t\tthrow new Error('Metadata not passed');\n\t}\n\n\treturn { text: text, options: options, metadata: metadata };\n}\n//# sourceMappingURL=parse.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/libphonenumber-js/es6/parse.js\n// module id = 0\n// module chunks = 0","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_global.js\n// module id = 1\n// module chunks = 0","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_wks.js\n// module id = 2\n// module chunks = 0","export function get_phone_code(country_metadata) {\n\treturn country_metadata[0];\n}\n\nexport function get_national_number_pattern(country_metadata) {\n\treturn country_metadata[1];\n}\n\nexport function get_formats(country_metadata) {\n\treturn country_metadata[2] || [];\n}\n\nexport function get_national_prefix(country_metadata) {\n\treturn country_metadata[3];\n}\n\nexport function get_national_prefix_formatting_rule(country_metadata) {\n\treturn country_metadata[4];\n}\n\nexport function get_national_prefix_for_parsing(country_metadata) {\n\tvar national_prefix_for_parsing = country_metadata[5];\n\n\t// If `national_prefix_for_parsing` is not set explicitly,\n\t// then infer it from `national_prefix` (if any)\n\tif (!national_prefix_for_parsing) {\n\t\tnational_prefix_for_parsing = get_national_prefix(country_metadata);\n\t}\n\n\treturn national_prefix_for_parsing;\n}\n\nexport function get_national_prefix_transform_rule(country_metadata) {\n\treturn country_metadata[6];\n}\n\nexport function get_national_prefix_is_optional_when_formatting(country_metadata) {\n\treturn country_metadata[7];\n}\n\nexport function get_leading_digits(country_metadata) {\n\treturn country_metadata[8];\n}\n\nexport function get_format_pattern(format_array) {\n\treturn format_array[0];\n}\n\nexport function get_format_format(format_array) {\n\treturn format_array[1];\n}\n\nexport function get_format_leading_digits_patterns(format_array) {\n\treturn format_array[2] || [];\n}\n\nexport function get_format_national_prefix_formatting_rule(format_array, country_metadata) {\n\treturn format_array[3] || get_national_prefix_formatting_rule(country_metadata);\n}\n\nexport function get_format_national_prefix_is_optional_when_formatting(format_array, country_metadata) {\n\treturn format_array[4] || get_national_prefix_is_optional_when_formatting(country_metadata);\n}\n\nexport function get_format_national_prefix_is_mandatory_when_formatting(format_array, country_metadata) {\n\tvar national_prefix_formatting_rule = get_format_national_prefix_formatting_rule(format_array, country_metadata);\n\n\t// National prefix is omitted if there's no national prefix formatting rule\n\t// set for this country, or when the national prefix formatting rule\n\t// contains no national prefix itself, or when this rule is set but\n\t// national prefix is optional for this phone number format\n\t// (and it is not enforced explicitly)\n\treturn national_prefix_formatting_rule &&\n\t// Check that national prefix formatting rule is not a dummy one.\n\t// Check that national prefix formatting rule actually has national prefix digit(s).\n\tget_format_uses_national_prefix(national_prefix_formatting_rule) &&\n\t// Or maybe national prefix is optional for this format\n\t!get_format_national_prefix_is_optional_when_formatting(format_array, country_metadata);\n}\n\n// Checks whether national prefix formatting rule contains national prefix\nexport function get_format_uses_national_prefix(national_prefix_formatting_rule) {\n\t// Check that national prefix formatting rule is not a dummy one\n\treturn national_prefix_formatting_rule !== '$1' &&\n\t// Check that national prefix formatting rule actually has national prefix digit(s)\n\t/\\d/.test(national_prefix_formatting_rule.replace('$1', ''));\n}\n\nexport function get_format_international_format(format_array) {\n\treturn format_array[5] || get_format_format(format_array);\n}\n\n// Formatting information for regions which share\n// a country calling code is contained by only one region\n// for performance reasons. For example, for NANPA region\n// (\"North American Numbering Plan Administration\",\n//  which includes USA, Canada, Cayman Islands, Bahamas, etc)\n// it will be contained in the metadata for `US`.\nexport function get_metadata_by_country_phone_code(country_phone_code, metadata) {\n\tvar country_code = metadata.country_phone_code_to_countries[country_phone_code][0];\n\treturn metadata.countries[country_code];\n}\n\nexport function get_types(country_metadata) {\n\treturn country_metadata[9];\n}\n\nfunction get_type(country_metadata, index) {\n\treturn get_types(country_metadata) ? get_types(country_metadata)[index] : undefined;\n}\n\nexport function get_type_fixed_line(country_metadata) {\n\treturn get_type(country_metadata, 0);\n}\n\nexport function get_type_mobile(country_metadata) {\n\treturn get_type(country_metadata, 1);\n}\n\nexport function get_type_toll_free(country_metadata) {\n\treturn get_type(country_metadata, 2);\n}\n\nexport function get_type_premium_rate(country_metadata) {\n\treturn get_type(country_metadata, 3);\n}\n\nexport function get_type_personal_number(country_metadata) {\n\treturn get_type(country_metadata, 4);\n}\n\nexport function get_type_voice_mail(country_metadata) {\n\treturn get_type(country_metadata, 5);\n}\n\nexport function get_type_uan(country_metadata) {\n\treturn get_type(country_metadata, 6);\n}\n\nexport function get_type_pager(country_metadata) {\n\treturn get_type(country_metadata, 7);\n}\n\nexport function get_type_voip(country_metadata) {\n\treturn get_type(country_metadata, 8);\n}\n\nexport function get_type_shared_cost(country_metadata) {\n\treturn get_type(country_metadata, 9);\n}\n\nexport function get_country_phone_code(country, country_metadata) {\n\treturn get_phone_code(country_metadata[country]);\n}\n//# sourceMappingURL=metadata.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/libphonenumber-js/es6/metadata.js\n// module id = 3\n// module chunks = 0","/* eslint-disable quote-props */\n\nexport const countryLookup = {\n    'united states': {name: 'United States', twoLetter: 'US', threeLetter: 'USA'},\n    'canada': {name: 'Canada', twoLetter: 'CA', threeLetter: 'CAN'},\n    'afghanistan': {name: 'Afghanistan', twoLetter: 'AF', threeLetter: 'AFG'},\n    'albania': {name: 'Albania', twoLetter: 'AL', threeLetter: 'ALB'},\n    'algeria': {name: 'Algeria', twoLetter: 'DZ', threeLetter: 'DZA'},\n    'american samoa': {name: 'American Samoa', twoLetter: 'AS', threeLetter: 'ASM'},\n    'andorra': {name: 'Andorra', twoLetter: 'AD', threeLetter: 'AND'},\n    'angola': {name: 'Angola', twoLetter: 'AO', threeLetter: 'AGO'},\n    'anguilla': {name: 'Anguilla', twoLetter: 'AI', threeLetter: 'AIA'},\n    'antarctica': {name: 'Antarctica', twoLetter: 'AQ', threeLetter: 'ATA'},\n    'antigua and barbuda': {name: 'Antigua and Barbuda', twoLetter: 'AG', threeLetter: 'ATG'},\n    'argentina': {name: 'Argentina', twoLetter: 'AR', threeLetter: 'ARG'},\n    'armenia': {name: 'Armenia', twoLetter: 'AM', threeLetter: 'ARM'},\n    'aruba': {name: 'Aruba', twoLetter: 'AW', threeLetter: 'ABW'},\n    'australia': {name: 'Australia', twoLetter: 'AU', threeLetter: 'AUS'},\n    'austria': {name: 'Austria', twoLetter: 'AT', threeLetter: 'AUT'},\n    'azerbaijan': {name: 'Azerbaijan', twoLetter: 'AZ', threeLetter: 'AZE'},\n    'bahamas': {name: 'Bahamas', twoLetter: 'BS', threeLetter: 'BHS'},\n    'bahrain': {name: 'Bahrain', twoLetter: 'BH', threeLetter: 'BHR'},\n    'bangladesh': {name: 'Bangladesh', twoLetter: 'BD', threeLetter: 'BGD'},\n    'barbados': {name: 'Barbados', twoLetter: 'BB', threeLetter: 'BRB'},\n    'belarus': {name: 'Belarus', twoLetter: 'BY', threeLetter: 'BLR'},\n    'belgium': {name: 'Belgium', twoLetter: 'BE', threeLetter: 'BEL'},\n    'belize': {name: 'Belize', twoLetter: 'BZ', threeLetter: 'BLZ'},\n    'benin': {name: 'Benin', twoLetter: 'BJ', threeLetter: 'BEN'},\n    'bermuda': {name: 'Bermuda', twoLetter: 'BM', threeLetter: 'BMU'},\n    'bhutan': {name: 'Bhutan', twoLetter: 'BT', threeLetter: 'BTN'},\n    'bolivia': {name: 'Bolivia', twoLetter: 'BO', threeLetter: 'BOL'},\n    'bonaire': {name: 'Bonaire', twoLetter: 'BQ', threeLetter: 'BES'},\n    'bosnia and herzegovina': {name: 'Bosnia and Herzegovina', twoLetter: 'BA', threeLetter: 'BIH'},\n    'botswana': {name: 'Botswana', twoLetter: 'BW', threeLetter: 'BWA'},\n    'bouvet island': {name: 'Bouvet Island', twoLetter: 'BV', threeLetter: 'BVT'},\n    'brazil': {name: 'Brazil', twoLetter: 'BR', threeLetter: 'BRA'},\n    'british indian ocean territory': {name: 'British Indian Ocean Territory', twoLetter: 'IO', threeLetter: 'IOT'},\n    'brunei darussalam': {name: 'Brunei Darussalam', twoLetter: 'BN', threeLetter: 'BRN'},\n    'bulgaria': {name: 'Bulgaria', twoLetter: 'BG', threeLetter: 'BGR'},\n    'burkina faso': {name: 'Burkina Faso', twoLetter: 'BF', threeLetter: 'BFA'},\n    'burundi': {name: 'Burundi', twoLetter: 'BI', threeLetter: 'BDI'},\n    'cambodia': {name: 'Cambodia', twoLetter: 'KH', threeLetter: 'KHM'},\n    'cameroon': {name: 'Cameroon', twoLetter: 'CM', threeLetter: 'CMR'},\n    'cape verde': {name: 'Cape Verde', twoLetter: 'CV', threeLetter: 'CPV'},\n    'cayman islands': {name: 'Cayman Islands', twoLetter: 'KY', threeLetter: 'CYM'},\n    'central african republic': {name: 'Central African Republic', twoLetter: 'CF', threeLetter: 'CAF'},\n    'chad': {name: 'Chad', twoLetter: 'TD', threeLetter: 'TCD'},\n    'chile': {name: 'Chile', twoLetter: 'CL', threeLetter: 'CHL'},\n    'china': {name: 'China', twoLetter: 'CN', threeLetter: 'CHN'},\n    'christmas island': {name: 'Christmas Island', twoLetter: 'CX', threeLetter: 'CXR'},\n    'cocos (keeling) islands': {name: 'Cocos (Keeling) Islands', twoLetter: 'CC', threeLetter: 'CCK'},\n    'colombia': {name: 'Colombia', twoLetter: 'CO', threeLetter: 'COL'},\n    'comoros': {name: 'Comoros', twoLetter: 'KM', threeLetter: 'COM'},\n    'congo': {name: 'Congo', twoLetter: 'CG', threeLetter: 'COG'},\n    'democratic republic of the congo': {name: 'Democratic Republic of the Congo', twoLetter: 'CD', threeLetter: 'COD'},\n    'cook islands': {name: 'Cook Islands', twoLetter: 'CK', threeLetter: 'COK'},\n    'costa rica': {name: 'Costa Rica', twoLetter: 'CR', threeLetter: 'CRI'},\n    'croatia': {name: 'Croatia', twoLetter: 'HR', threeLetter: 'HRV'},\n    'cuba': {name: 'Cuba', twoLetter: 'CU', threeLetter: 'CUB'},\n    'curacao': {name: 'Curacao', twoLetter: 'CW', threeLetter: 'CUW'},\n    'cyprus': {name: 'Cyprus', twoLetter: 'CY', threeLetter: 'CYP'},\n    'czech republic': {name: 'Czech Republic', twoLetter: 'CZ', threeLetter: 'CZE'},\n    'cote d\\'ivoire': {name: 'Cote d\\'Ivoire', twoLetter: 'CI', threeLetter: 'CIV'},\n    'denmark': {name: 'Denmark', twoLetter: 'DK', threeLetter: 'DNK'},\n    'djibouti': {name: 'Djibouti', twoLetter: 'DJ', threeLetter: 'DJI'},\n    'dominica': {name: 'Dominica', twoLetter: 'DM', threeLetter: 'DMA'},\n    'dominican republic': {name: 'Dominican Republic', twoLetter: 'DO', threeLetter: 'DOM'},\n    'ecuador': {name: 'Ecuador', twoLetter: 'EC', threeLetter: 'ECU'},\n    'egypt': {name: 'Egypt', twoLetter: 'EG', threeLetter: 'EGY'},\n    'el salvador': {name: 'El Salvador', twoLetter: 'SV', threeLetter: 'SLV'},\n    'equatorial guinea': {name: 'Equatorial Guinea', twoLetter: 'GQ', threeLetter: 'GNQ'},\n    'eritrea': {name: 'Eritrea', twoLetter: 'ER', threeLetter: 'ERI'},\n    'estonia': {name: 'Estonia', twoLetter: 'EE', threeLetter: 'EST'},\n    'ethiopia': {name: 'Ethiopia', twoLetter: 'ET', threeLetter: 'ETH'},\n    'falkland islands (malvinas)': {name: 'Falkland Islands (Malvinas)', twoLetter: 'FK', threeLetter: 'FLK'},\n    'faroe islands': {name: 'Faroe Islands', twoLetter: 'FO', threeLetter: 'FRO'},\n    'fiji': {name: 'Fiji', twoLetter: 'FJ', threeLetter: 'FJI'},\n    'finland': {name: 'Finland', twoLetter: 'FI', threeLetter: 'FIN'},\n    'france': {name: 'France', twoLetter: 'FR', threeLetter: 'FRA'},\n    'french guiana': {name: 'French Guiana', twoLetter: 'GF', threeLetter: 'GUF'},\n    'french polynesia': {name: 'French Polynesia', twoLetter: 'PF', threeLetter: 'PYF'},\n    'french southern territories': {name: 'French Southern Territories', twoLetter: 'TF', threeLetter: 'ATF'},\n    'gabon': {name: 'Gabon', twoLetter: 'GA', threeLetter: 'GAB'},\n    'gambia': {name: 'Gambia', twoLetter: 'GM', threeLetter: 'GMB'},\n    'georgia': {name: 'Georgia', twoLetter: 'GE', threeLetter: 'GEO'},\n    'germany': {name: 'Germany', twoLetter: 'DE', threeLetter: 'DEU'},\n    'ghana': {name: 'Ghana', twoLetter: 'GH', threeLetter: 'GHA'},\n    'gibraltar': {name: 'Gibraltar', twoLetter: 'GI', threeLetter: 'GIB'},\n    'greece': {name: 'Greece', twoLetter: 'GR', threeLetter: 'GRC'},\n    'greenland': {name: 'Greenland', twoLetter: 'GL', threeLetter: 'GRL'},\n    'grenada': {name: 'Grenada', twoLetter: 'GD', threeLetter: 'GRD'},\n    'guadeloupe': {name: 'Guadeloupe', twoLetter: 'GP', threeLetter: 'GLP'},\n    'guam': {name: 'Guam', twoLetter: 'GU', threeLetter: 'GUM'},\n    'guatemala': {name: 'Guatemala', twoLetter: 'GT', threeLetter: 'GTM'},\n    'guernsey': {name: 'Guernsey', twoLetter: 'GG', threeLetter: 'GGY'},\n    'guinea': {name: 'Guinea', twoLetter: 'GN', threeLetter: 'GIN'},\n    'guinea-bissau': {name: 'Guinea-Bissau', twoLetter: 'GW', threeLetter: 'GNB'},\n    'guyana': {name: 'Guyana', twoLetter: 'GY', threeLetter: 'GUY'},\n    'haiti': {name: 'Haiti', twoLetter: 'HT', threeLetter: 'HTI'},\n    'heard island and mcdonald mcdonald islands': {name: 'Heard Island and McDonald Mcdonald Islands', twoLetter: 'HM', threeLetter: 'HMD'},\n    'holy see (vatican city state)': {name: 'Holy See (Vatican City State)', twoLetter: 'VA', threeLetter: 'VAT'},\n    'honduras': {name: 'Honduras', twoLetter: 'HN', threeLetter: 'HND'},\n    'hong kong': {name: 'Hong Kong', twoLetter: 'HK', threeLetter: 'HKG'},\n    'hungary': {name: 'Hungary', twoLetter: 'HU', threeLetter: 'HUN'},\n    'iceland': {name: 'Iceland', twoLetter: 'IS', threeLetter: 'ISL'},\n    'india': {name: 'India', twoLetter: 'IN', threeLetter: 'IND'},\n    'indonesia': {name: 'Indonesia', twoLetter: 'ID', threeLetter: 'IDN'},\n    'iran': {name: 'Iran', twoLetter: 'IR', threeLetter: 'IRN'},\n    'iraq': {name: 'Iraq', twoLetter: 'IQ', threeLetter: 'IRQ'},\n    'ireland': {name: 'Ireland', twoLetter: 'IE', threeLetter: 'IRL'},\n    'isle of man': {name: 'Isle of Man', twoLetter: 'IM', threeLetter: 'IMN'},\n    'israel': {name: 'Israel', twoLetter: 'IL', threeLetter: 'ISR'},\n    'italy': {name: 'Italy', twoLetter: 'IT', threeLetter: 'ITA'},\n    'jamaica': {name: 'Jamaica', twoLetter: 'JM', threeLetter: 'JAM'},\n    'japan': {name: 'Japan', twoLetter: 'JP', threeLetter: 'JPN'},\n    'jersey': {name: 'Jersey', twoLetter: 'JE', threeLetter: 'JEY'},\n    'jordan': {name: 'Jordan', twoLetter: 'JO', threeLetter: 'JOR'},\n    'kazakhstan': {name: 'Kazakhstan', twoLetter: 'KZ', threeLetter: 'KAZ'},\n    'kenya': {name: 'Kenya', twoLetter: 'KE', threeLetter: 'KEN'},\n    'kiribati': {name: 'Kiribati', twoLetter: 'KI', threeLetter: 'KIR'},\n    'democratic people\\'s republic of korea': {name: 'Democratic People\\'s Republic of Korea', twoLetter: 'KP', threeLetter: 'PRK'},\n    'korea': {name: 'Korea', twoLetter: 'KR', threeLetter: 'KOR'},\n    'kuwait': {name: 'Kuwait', twoLetter: 'KW', threeLetter: 'KWT'},\n    'kyrgyzstan': {name: 'Kyrgyzstan', twoLetter: 'KG', threeLetter: 'KGZ'},\n    'lao people\\'s democratic republic': {name: 'Lao People\\'s Democratic Republic', twoLetter: 'LA', threeLetter: 'LAO'},\n    'latvia': {name: 'Latvia', twoLetter: 'LV', threeLetter: 'LVA'},\n    'lebanon': {name: 'Lebanon', twoLetter: 'LB', threeLetter: 'LBN'},\n    'lesotho': {name: 'Lesotho', twoLetter: 'LS', threeLetter: 'LSO'},\n    'liberia': {name: 'Liberia', twoLetter: 'LR', threeLetter: 'LBR'},\n    'libya': {name: 'Libya', twoLetter: 'LY', threeLetter: 'LBY'},\n    'liechtenstein': {name: 'Liechtenstein', twoLetter: 'LI', threeLetter: 'LIE'},\n    'lithuania': {name: 'Lithuania', twoLetter: 'LT', threeLetter: 'LTU'},\n    'luxembourg': {name: 'Luxembourg', twoLetter: 'LU', threeLetter: 'LUX'},\n    'macao': {name: 'Macao', twoLetter: 'MO', threeLetter: 'MAC'},\n    'macedonia': {name: 'Macedonia', twoLetter: 'MK', threeLetter: 'MKD'},\n    'madagascar': {name: 'Madagascar', twoLetter: 'MG', threeLetter: 'MDG'},\n    'malawi': {name: 'Malawi', twoLetter: 'MW', threeLetter: 'MWI'},\n    'malaysia': {name: 'Malaysia', twoLetter: 'MY', threeLetter: 'MYS'},\n    'maldives': {name: 'Maldives', twoLetter: 'MV', threeLetter: 'MDV'},\n    'mali': {name: 'Mali', twoLetter: 'ML', threeLetter: 'MLI'},\n    'malta': {name: 'Malta', twoLetter: 'MT', threeLetter: 'MLT'},\n    'marshall islands': {name: 'Marshall Islands', twoLetter: 'MH', threeLetter: 'MHL'},\n    'martinique': {name: 'Martinique', twoLetter: 'MQ', threeLetter: 'MTQ'},\n    'mauritania': {name: 'Mauritania', twoLetter: 'MR', threeLetter: 'MRT'},\n    'mauritius': {name: 'Mauritius', twoLetter: 'MU', threeLetter: 'MUS'},\n    'mayotte': {name: 'Mayotte', twoLetter: 'YT', threeLetter: 'MYT'},\n    'mexico': {name: 'Mexico', twoLetter: 'MX', threeLetter: 'MEX'},\n    'micronesia': {name: 'Micronesia', twoLetter: 'FM', threeLetter: 'FSM'},\n    'moldova': {name: 'Moldova', twoLetter: 'MD', threeLetter: 'MDA'},\n    'monaco': {name: 'Monaco', twoLetter: 'MC', threeLetter: 'MCO'},\n    'mongolia': {name: 'Mongolia', twoLetter: 'MN', threeLetter: 'MNG'},\n    'montenegro': {name: 'Montenegro', twoLetter: 'ME', threeLetter: 'MNE'},\n    'montserrat': {name: 'Montserrat', twoLetter: 'MS', threeLetter: 'MSR'},\n    'morocco': {name: 'Morocco', twoLetter: 'MA', threeLetter: 'MAR'},\n    'mozambique': {name: 'Mozambique', twoLetter: 'MZ', threeLetter: 'MOZ'},\n    'myanmar': {name: 'Myanmar', twoLetter: 'MM', threeLetter: 'MMR'},\n    'namibia': {name: 'Namibia', twoLetter: 'NA', threeLetter: 'NAM'},\n    'nauru': {name: 'Nauru', twoLetter: 'NR', threeLetter: 'NRU'},\n    'nepal': {name: 'Nepal', twoLetter: 'NP', threeLetter: 'NPL'},\n    'netherlands': {name: 'Netherlands', twoLetter: 'NL', threeLetter: 'NLD'},\n    'new caledonia': {name: 'New Caledonia', twoLetter: 'NC', threeLetter: 'NCL'},\n    'new zealand': {name: 'New Zealand', twoLetter: 'NZ', threeLetter: 'NZL'},\n    'nicaragua': {name: 'Nicaragua', twoLetter: 'NI', threeLetter: 'NIC'},\n    'niger': {name: 'Niger', twoLetter: 'NE', threeLetter: 'NER'},\n    'nigeria': {name: 'Nigeria', twoLetter: 'NG', threeLetter: 'NGA'},\n    'niue': {name: 'Niue', twoLetter: 'NU', threeLetter: 'NIU'},\n    'norfolk island': {name: 'Norfolk Island', twoLetter: 'NF', threeLetter: 'NFK'},\n    'northern mariana islands': {name: 'Northern Mariana Islands', twoLetter: 'MP', threeLetter: 'MNP'},\n    'norway': {name: 'Norway', twoLetter: 'NO', threeLetter: 'NOR'},\n    'oman': {name: 'Oman', twoLetter: 'OM', threeLetter: 'OMN'},\n    'pakistan': {name: 'Pakistan', twoLetter: 'PK', threeLetter: 'PAK'},\n    'palau': {name: 'Palau', twoLetter: 'PW', threeLetter: 'PLW'},\n    'palestine': {name: 'Palestine', twoLetter: 'PS', threeLetter: 'PSE'},\n    'panama': {name: 'Panama', twoLetter: 'PA', threeLetter: 'PAN'},\n    'papua new guinea': {name: 'Papua New Guinea', twoLetter: 'PG', threeLetter: 'PNG'},\n    'paraguay': {name: 'Paraguay', twoLetter: 'PY', threeLetter: 'PRY'},\n    'peru': {name: 'Peru', twoLetter: 'PE', threeLetter: 'PER'},\n    'philippines': {name: 'Philippines', twoLetter: 'PH', threeLetter: 'PHL'},\n    'pitcairn': {name: 'Pitcairn', twoLetter: 'PN', threeLetter: 'PCN'},\n    'poland': {name: 'Poland', twoLetter: 'PL', threeLetter: 'POL'},\n    'portugal': {name: 'Portugal', twoLetter: 'PT', threeLetter: 'PRT'},\n    'puerto rico': {name: 'Puerto Rico', twoLetter: 'PR', threeLetter: 'PRI'},\n    'qatar': {name: 'Qatar', twoLetter: 'QA', threeLetter: 'QAT'},\n    'romania': {name: 'Romania', twoLetter: 'RO', threeLetter: 'ROU'},\n    'russia': {name: 'Russia', twoLetter: 'RU', threeLetter: 'RUS'},\n    'rwanda': {name: 'Rwanda', twoLetter: 'RW', threeLetter: 'RWA'},\n    'reunion': {name: 'Reunion', twoLetter: 'RE', threeLetter: 'REU'},\n    'saint barthelemy': {name: 'Saint Barthelemy', twoLetter: 'BL', threeLetter: 'BLM'},\n    'saint helena': {name: 'Saint Helena', twoLetter: 'SH', threeLetter: 'SHN'},\n    'saint kitts and nevis': {name: 'Saint Kitts and Nevis', twoLetter: 'KN', threeLetter: 'KNA'},\n    'saint lucia': {name: 'Saint Lucia', twoLetter: 'LC', threeLetter: 'LCA'},\n    'saint martin (french)': {name: 'Saint Martin (French)', twoLetter: 'MF', threeLetter: 'MAF'},\n    'saint pierre and miquelon': {name: 'Saint Pierre and Miquelon', twoLetter: 'PM', threeLetter: 'SPM'},\n    'saint vincent and the grenadines': {name: 'Saint Vincent and the Grenadines', twoLetter: 'VC', threeLetter: 'VCT'},\n    'samoa': {name: 'Samoa', twoLetter: 'WS', threeLetter: 'WSM'},\n    'san marino': {name: 'San Marino', twoLetter: 'SM', threeLetter: 'SMR'},\n    'sao tome and principe': {name: 'Sao Tome and Principe', twoLetter: 'ST', threeLetter: 'STP'},\n    'saudi arabia': {name: 'Saudi Arabia', twoLetter: 'SA', threeLetter: 'SAU'},\n    'senegal': {name: 'Senegal', twoLetter: 'SN', threeLetter: 'SEN'},\n    'serbia': {name: 'Serbia', twoLetter: 'RS', threeLetter: 'SRB'},\n    'seychelles': {name: 'Seychelles', twoLetter: 'SC', threeLetter: 'SYC'},\n    'sierra leone': {name: 'Sierra Leone', twoLetter: 'SL', threeLetter: 'SLE'},\n    'singapore': {name: 'Singapore', twoLetter: 'SG', threeLetter: 'SGP'},\n    'sint maarten (dutch)': {name: 'Sint Maarten (Dutch)', twoLetter: 'SX', threeLetter: 'SXM'},\n    'slovakia': {name: 'Slovakia', twoLetter: 'SK', threeLetter: 'SVK'},\n    'slovenia': {name: 'Slovenia', twoLetter: 'SI', threeLetter: 'SVN'},\n    'solomon islands': {name: 'Solomon Islands', twoLetter: 'SB', threeLetter: 'SLB'},\n    'somalia': {name: 'Somalia', twoLetter: 'SO', threeLetter: 'SOM'},\n    'south africa': {name: 'South Africa', twoLetter: 'ZA', threeLetter: 'ZAF'},\n    'south georgia and the south sandwich islands': {name: 'South Georgia and the South Sandwich Islands', twoLetter: 'GS', threeLetter: 'SGS'},\n    'south sudan': {name: 'South Sudan', twoLetter: 'SS', threeLetter: 'SSD'},\n    'spain': {name: 'Spain', twoLetter: 'ES', threeLetter: 'ESP'},\n    'sri lanka': {name: 'Sri Lanka', twoLetter: 'LK', threeLetter: 'LKA'},\n    'sudan': {name: 'Sudan', twoLetter: 'SD', threeLetter: 'SDN'},\n    'suriname': {name: 'Suriname', twoLetter: 'SR', threeLetter: 'SUR'},\n    'svalbard and jan mayen': {name: 'Svalbard and Jan Mayen', twoLetter: 'SJ', threeLetter: 'SJM'},\n    'swaziland': {name: 'Swaziland', twoLetter: 'SZ', threeLetter: 'SWZ'},\n    'sweden': {name: 'Sweden', twoLetter: 'SE', threeLetter: 'SWE'},\n    'switzerland': {name: 'Switzerland', twoLetter: 'CH', threeLetter: 'CHE'},\n    'syrian arab republic': {name: 'Syrian Arab Republic', twoLetter: 'SY', threeLetter: 'SYR'},\n    'taiwan': {name: 'Taiwan', twoLetter: 'TW', threeLetter: 'TWN'},\n    'tajikistan': {name: 'Tajikistan', twoLetter: 'TJ', threeLetter: 'TJK'},\n    'tanzania': {name: 'Tanzania', twoLetter: 'TZ', threeLetter: 'TZA'},\n    'thailand': {name: 'Thailand', twoLetter: 'TH', threeLetter: 'THA'},\n    'timor-leste': {name: 'Timor-Leste', twoLetter: 'TL', threeLetter: 'TLS'},\n    'togo': {name: 'Togo', twoLetter: 'TG', threeLetter: 'TGO'},\n    'tokelau': {name: 'Tokelau', twoLetter: 'TK', threeLetter: 'TKL'},\n    'tonga': {name: 'Tonga', twoLetter: 'TO', threeLetter: 'TON'},\n    'trinidad and tobago': {name: 'Trinidad and Tobago', twoLetter: 'TT', threeLetter: 'TTO'},\n    'tunisia': {name: 'Tunisia', twoLetter: 'TN', threeLetter: 'TUN'},\n    'turkey': {name: 'Turkey', twoLetter: 'TR', threeLetter: 'TUR'},\n    'turkmenistan': {name: 'Turkmenistan', twoLetter: 'TM', threeLetter: 'TKM'},\n    'turks and caicos islands': {name: 'Turks and Caicos Islands', twoLetter: 'TC', threeLetter: 'TCA'},\n    'tuvalu': {name: 'Tuvalu', twoLetter: 'TV', threeLetter: 'TUV'},\n    'uganda': {name: 'Uganda', twoLetter: 'UG', threeLetter: 'UGA'},\n    'ukraine': {name: 'Ukraine', twoLetter: 'UA', threeLetter: 'UKR'},\n    'united arab emirates': {name: 'United Arab Emirates', twoLetter: 'AE', threeLetter: 'ARE'},\n    'united kingdom': {name: 'United Kingdom', twoLetter: 'GB', threeLetter: 'GBR'},\n    'united states minor outlying islands': {name: 'United States Minor Outlying Islands', twoLetter: 'UM', threeLetter: 'UMI'},\n    'uruguay': {name: 'Uruguay', twoLetter: 'UY', threeLetter: 'URY'},\n    'uzbekistan': {name: 'Uzbekistan', twoLetter: 'UZ', threeLetter: 'UZB'},\n    'vanuatu': {name: 'Vanuatu', twoLetter: 'VU', threeLetter: 'VUT'},\n    'venezuela': {name: 'Venezuela', twoLetter: 'VE', threeLetter: 'VEN'},\n    'viet nam': {name: 'Viet Nam', twoLetter: 'VN', threeLetter: 'VNM'},\n    'virgin islands (british)': {name: 'Virgin Islands (British)', twoLetter: 'VG', threeLetter: 'VGB'},\n    'virgin islands (us)': {name: 'Virgin Islands (US)', twoLetter: 'VI', threeLetter: 'VIR'},\n    'wallis and futuna': {name: 'Wallis and Futuna', twoLetter: 'WF', threeLetter: 'WLF'},\n    'western sahara': {name: 'Western Sahara', twoLetter: 'EH', threeLetter: 'ESH'},\n    'yemen': {name: 'Yemen', twoLetter: 'YE', threeLetter: 'YEM'},\n    'zambia': {name: 'Zambia', twoLetter: 'ZM', threeLetter: 'ZMB'},\n    'zimbabwe': {name: 'Zimbabwe', twoLetter: 'ZW', threeLetter: 'ZWE'},\n}\n\nconst territoryLabels = {\n    'Australia': 'State/Territory',\n    'Canada': 'Province',\n    'Malaysia': 'State',\n    'Mexico': 'State',\n    'United States': 'State',\n}\n\nconst territoryOptions = {\n    'Australia': {\n        ACT : 'Australian Capital Territory',\n        NSW : 'New South Wales',\n        NT  : 'Northern Territory',\n        QLD : 'Queensland',\n        SA  : 'South Australia',\n        TAS : 'Tasmania',\n        VIC : 'Victoria',\n        WA  : 'Western Australia',\n    },\n    'Canada': {\n        AB: 'Alberta',\n        BC: 'British Columbia',\n        MB: 'Manitoba',\n        NB: 'New Brunswick',\n        NL: 'Newfoundland and Labrador',\n        NT: 'Northwest Territories',\n        NS: 'Nova Scotia',\n        NU: 'Nunavut',\n        ON: 'Ontario',\n        PE: 'Prince Edward Island',\n        QC: 'Québec',\n        SK: 'Saskatchewan',\n        YT: 'Yukon',\n    },\n    'Malaysia': {\n        JH: 'Johor',\n        KH: 'Kedah',\n        KL: 'Kuala Lumpur',\n        KN: 'Kelantan',\n        LA: 'Labuan',\n        ME: 'Melaka',\n        NS: 'Negeri Sembilan',\n        PG: 'Pulau Pinang',\n        PH: 'Pahang',\n        PJ: 'Putrajaya',\n        PK: 'Perak',\n        PL: 'Perlis',\n        SA: 'Sabah',\n        SK: 'Sarawak',\n        SL: 'Selangor',\n        TE: 'Terengganu',\n    },\n    'Mexico': {\n        'AGS'   : 'Aguascalientes',\n        'BC'    : 'Baja California',\n        'BCS'   : 'Baja California Sur',\n        'CAM'   : 'Campeche',\n        'CHIH'  : 'Chihuahua',\n        'CHIS'  : 'Chiapas',\n        'COAH'  : 'Coahuila',\n        'COL'   : 'Colima',\n        'DF'    : 'Distrito Federal',\n        'DGO'   : 'Durango',\n        'GRO'   : 'Guerrero',\n        'GTO'   : 'Guanajuato',\n        'HGO'   : 'Hidalgo',\n        'JAL'   : 'Jalisco',\n        'MEX'   : 'Mexico',\n        'MICH'  : 'Michoacan',\n        'MOR'   : 'Morelos',\n        'NAY'   : 'Nayarit',\n        'NL'    : 'Nuevo Leon',\n        'OAX'   : 'Oaxaca',\n        'PUE'   : 'Puebla',\n        'Q ROO' : 'Quintana Roo',\n        'QRO'   : 'Queretaro',\n        'SIN'   : 'Sinaloa',\n        'SLP'   : 'San Luis Potosi',\n        'SON'   : 'Sonora',\n        'TAB'   : 'Tabasco',\n        'TAMPS' : 'Tamaulipas',\n        'TLAX'  : 'Tlaxcala',\n        'VER'   : 'Veracruz',\n        'YUC'   : 'Yucatan',\n        'ZAC'   : 'Zacatecas',\n    },\n    'United States': {\n        AL: 'Alabama',\n        AK: 'Alaska',\n        AZ: 'Arizona',\n        AR: 'Arkansas',\n        CA: 'California',\n        CO: 'Colorado',\n        CT: 'Connecticut',\n        DE: 'Delaware',\n        DC: 'District of Columbia',\n        FL: 'Florida',\n        GA: 'Georgia',\n        HI: 'Hawaii',\n        ID: 'Idaho',\n        IL: 'Illinois',\n        IN: 'Indiana',\n        IA: 'Iowa',\n        KS: 'Kansas',\n        KY: 'Kentucky',\n        LA: 'Louisiana',\n        ME: 'Maine',\n        MD: 'Maryland',\n        MA: 'Massachusetts',\n        MI: 'Michigan',\n        MN: 'Minnesota',\n        MS: 'Mississippi',\n        MO: 'Missouri',\n        MT: 'Montana',\n        NE: 'Nebraska',\n        NV: 'Nevada',\n        NH: 'New Hampshire',\n        NJ: 'New Jersey',\n        NM: 'New Mexico',\n        NY: 'New York',\n        NC: 'North Carolina',\n        ND: 'North Dakota',\n        OH: 'Ohio',\n        OK: 'Oklahoma',\n        OR: 'Oregon',\n        PA: 'Pennsylvania',\n        RI: 'Rhode Island',\n        SC: 'South Carolina',\n        SD: 'South Dakota',\n        TN: 'Tennessee',\n        TX: 'Texas',\n        UT: 'Utah',\n        VT: 'Vermont',\n        VA: 'Virginia',\n        WA: 'Washington',\n        WV: 'West Virginia',\n        WI: 'Wisconsin',\n        WY: 'Wyoming',\n    },\n}\n\nexport const postalCodeRegExp = {\n    UK: /^([A-Z]){1}([0-9][0-9]|[0-9]|[A-Z][0-9][A-Z]|[A-Z][0-9][0-9]|[A-Z][0-9]|[0-9][A-Z]){1}([ ])?([0-9][A-z][A-z]){1}$/i,\n    JE: /^JE\\d[\\dA-Z]?[ ]?\\d[ABD-HJLN-UW-Z]{2}$/,\n    GG: /^GY\\d[\\dA-Z]?[ ]?\\d[ABD-HJLN-UW-Z]{2}$/,\n    IM: /^IM\\d[\\dA-Z]?[ ]?\\d[ABD-HJLN-UW-Z]{2}$/,\n    US: /^([0-9]{5})(?:[-\\s]*([0-9]{4}))?$/,\n    CA: /^([A-Z][0-9][A-Z])\\s*([0-9][A-Z][0-9])$/i,\n    DE: /^\\d{5}$/,\n    JP: /^\\d{3}-\\d{4}$/,\n    FR: /^\\d{2}[ ]?\\d{3}$/,\n    AU: /^\\d{4}$/,\n    IT: /^\\d{5}$/,\n    CH: /^\\d{4}$/,\n    AT: /^\\d{4}$/,\n    ES: /^\\d{5}$/,\n    NL: /^\\d{4}[ ]?[A-Z]{2}$/,\n    BE: /^\\d{4}$/,\n    DK: /^\\d{4}$/,\n    SE: /^\\d{3}[ ]?\\d{2}$/,\n    NO: /^\\d{4}$/,\n    BR: /^\\d{5}[-]?\\d{3}$/,\n    PT: /^\\d{4}([-]\\d{3})?$/,\n    FI: /^\\d{5}$/,\n    AX: /^22\\d{3}$/,\n    KR: /^\\d{3}[-]\\d{3}$/,\n    CN: /^\\d{6}$/,\n    TW: /^\\d{3}(\\d{2})?$/,\n    SG: /^\\d{6}$/,\n    DZ: /^\\d{5}$/,\n    AD: /^AD\\d{3}$/,\n    AR: /^([A-HJ-NP-Z])?\\d{4}([A-Z]{3})?$/,\n    AM: /^(37)?\\d{4}$/,\n    AZ: /^\\d{4}$/,\n    BH: /^((1[0-2]|[2-9])\\d{2})?$/,\n    BD: /^\\d{4}$/,\n    BB: /^(BB\\d{5})?$/,\n    BY: /^\\d{6}$/,\n    BM: /^[A-Z]{2}[ ]?[A-Z0-9]{2}$/,\n    BA: /^\\d{5}$/,\n    IO: /^BBND 1ZZ$/,\n    BN: /^[A-Z]{2}[ ]?\\d{4}$/,\n    BG: /^\\d{4}$/,\n    KH: /^\\d{5}$/,\n    CV: /^\\d{4}$/,\n    CL: /^\\d{7}$/,\n    CR: /^\\d{4,5}|\\d{3}-\\d{4}$/,\n    HR: /^\\d{5}$/,\n    CY: /^\\d{4}$/,\n    CZ: /^\\d{3}[ ]?\\d{2}$/,\n    DO: /^\\d{5}$/,\n    EC: /^([A-Z]\\d{4}[A-Z]|(?:[A-Z]{2})?\\d{6})?$/,\n    EG: /^\\d{5}$/,\n    EE: /^\\d{5}$/,\n    FO: /^\\d{3}$/,\n    GE: /^\\d{4}$/,\n    GR: /^\\d{3}[ ]?\\d{2}$/,\n    GL: /^39\\d{2}$/,\n    GT: /^\\d{5}$/,\n    HT: /^\\d{4}$/,\n    HN: /^(?:\\d{5})?$/,\n    HU: /^\\d{4}$/,\n    IS: /^\\d{3}$/,\n    IN: /^\\d{6}$/,\n    ID: /^\\d{5}$/,\n    IL: /^\\d{5}$/,\n    JO: /^\\d{5}$/,\n    KZ: /^\\d{6}$/,\n    KE: /^\\d{5}$/,\n    KW: /^\\d{5}$/,\n    LA: /^\\d{5}$/,\n    LV: /^\\d{4}$/,\n    LB: /^(\\d{4}([ ]?\\d{4})?)?$/,\n    LI: /^(948[5-9])|(949[0-7])$/,\n    LT: /^\\d{5}$/,\n    LU: /^\\d{4}$/,\n    MK: /^\\d{4}$/,\n    MY: /^\\d{5}$/,\n    MV: /^\\d{5}$/,\n    MT: /^[A-Z]{3}[ ]?\\d{2,4}$/,\n    MU: /^(\\d{3}[A-Z]{2}\\d{3})?$/,\n    MX: /^\\d{5}$/,\n    MD: /^\\d{4}$/,\n    MC: /^980\\d{2}$/,\n    MA: /^\\d{5}$/,\n    NP: /^\\d{5}$/,\n    NZ: /^\\d{4}$/,\n    NI: /^((\\d{4}-)?\\d{3}-\\d{3}(-\\d{1})?)?$/,\n    NG: /^(\\d{6})?$/,\n    OM: /^(PC )?\\d{3}$/,\n    PK: /^\\d{5}$/,\n    PY: /^\\d{4}$/,\n    PH: /^\\d{4}$/,\n    PL: /^\\d{2}-\\d{3}$/,\n    PR: /^00[679]\\d{2}([ -]\\d{4})?$/,\n    RO: /^\\d{6}$/,\n    RU: /^\\d{6}$/,\n    SM: /^4789\\d$/,\n    SA: /^\\d{5}$/,\n    SN: /^\\d{5}$/,\n    SK: /^\\d{3}[ ]?\\d{2}$/,\n    SI: /^\\d{4}$/,\n    ZA: /^\\d{4}$/,\n    LK: /^\\d{5}$/,\n    TJ: /^\\d{6}$/,\n    TH: /^\\d{5}$/,\n    TN: /^\\d{4}$/,\n    TR: /^\\d{5}$/,\n    TM: /^\\d{6}$/,\n    UA: /^\\d{5}$/,\n    UY: /^\\d{5}$/,\n    UZ: /^\\d{6}$/,\n    VA: /^00120$/,\n    VE: /^\\d{4}$/,\n    ZM: /^\\d{5}$/,\n    AS: /^96799$/,\n    CC: /^6799$/,\n    CK: /^\\d{4}$/,\n    RS: /^\\d{6}$/,\n    ME: /^8\\d{4}$/,\n    CS: /^\\d{5}$/,\n    YU: /^\\d{5}$/,\n    CX: /^6798$/,\n    ET: /^\\d{4}$/,\n    FK: /^FIQQ 1ZZ$/,\n    NF: /^2899$/,\n    FM: /^(9694[1-4])([ -]\\d{4})?$/,\n    GF: /^9[78]3\\d{2}$/,\n    GN: /^\\d{3}$/,\n    GP: /^9[78][01]\\d{2}$/,\n    GS: /^SIQQ 1ZZ$/,\n    GU: /^969[123]\\d([ -]\\d{4})?$/,\n    GW: /^\\d{4}$/,\n    HM: /^\\d{4}$/,\n    IQ: /^\\d{5}$/,\n    KG: /^\\d{6}$/,\n    LR: /^\\d{4}$/,\n    LS: /^\\d{3}$/,\n    MG: /^\\d{3}$/,\n    MH: /^969[67]\\d([ -]\\d{4})?$/,\n    MN: /^\\d{6}$/,\n    MP: /^9695[012]([ -]\\d{4})?$/,\n    MQ: /^9[78]2\\d{2}$/,\n    NC: /^988\\d{2}$/,\n    NE: /^\\d{4}$/,\n    VI: /^008(([0-4]\\d)|(5[01]))([ -]\\d{4})?$/,\n    PF: /^987\\d{2}$/,\n    PG: /^\\d{3}$/,\n    PM: /^9[78]5\\d{2}$/,\n    PN: /^PCRN 1ZZ$/,\n    PW: /^96940$/,\n    RE: /^9[78]4\\d{2}$/,\n    SH: /^(ASCN|STHL) 1ZZ$/,\n    SJ: /^\\d{4}$/,\n    SO: /^\\d{5}$/,\n    SZ: /^[HLMS]\\d{3}$/,\n    TC: /^TKCA 1ZZ$/,\n    WF: /^986\\d{2}$/,\n    XK: /^\\d{5}$/,\n    YT: /^976\\d{2}$/,\n    INTL: /^(?:[A-Z0-9]+([- ]?[A-Z0-9]+)*)?$/i,\n}\n\nexport const countryNameLookup = (country) => {\n    const normalizedCountry = (country || '')\n        .replace(/\\s\\s+/g, ' ')\n        .trim()\n        .toLowerCase()\n    let foundCountry\n\n    if (normalizedCountry.length === 2) {\n        Object.keys(countryLookup).some((countryName) => {\n            if (countryLookup[countryName].twoLetter.toLowerCase() === normalizedCountry) {\n                foundCountry = countryLookup[countryName].name\n                return true\n            }\n        })\n    } else if (normalizedCountry.length === 3) {\n        Object.keys(countryLookup).some((countryName) => {\n            if (countryLookup[countryName].threeLetter.toLowerCase() === normalizedCountry) {\n                foundCountry = countryLookup[countryName].name\n                return true\n            }\n        })\n    } else {\n        foundCountry = countryLookup[normalizedCountry] ? countryLookup[normalizedCountry].name : foundCountry\n    }\n\n    return foundCountry\n}\n\nexport const countryCodeLookup = (country, type = 'twoLetter') => {\n    const foundCountry = countryNameLookup(country)\n    const countryCodes = foundCountry ? countryLookup[foundCountry.toLowerCase()] : undefined\n    return countryCodes ? countryCodes[type] : undefined\n}\n\nexport const countryHasTerritories = country => !!territoryOptions[countryNameLookup(country)]\n\nexport const territoryLabelForCountry = country => territoryLabels[countryNameLookup(country)] || ''\n\nexport const territoryOptionsForCountry = country => territoryOptions[countryNameLookup(country)] || {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/address/index.js","var core = module.exports = { version: '2.5.1' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_core.js\n// module id = 5\n// module chunks = 0","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_hide.js\n// module id = 6\n// module chunks = 0","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_descriptors.js\n// module id = 7\n// module chunks = 0","module.exports = {};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iterators.js\n// module id = 8\n// module chunks = 0","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-dp.js\n// module id = 9\n// module chunks = 0","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_an-object.js\n// module id = 10\n// module chunks = 0","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_has.js\n// module id = 11\n// module chunks = 0","// Checks whether the entire input sequence can be matched\n// against the regular expression.\nexport function matches_entirely() {\n\tvar text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\tvar regular_expression = arguments[1];\n\n\tif (typeof regular_expression === 'string') {\n\t\tregular_expression = '^(?:' + regular_expression + ')$';\n\t}\n\n\tvar matched_groups = text.match(regular_expression);\n\treturn matched_groups && matched_groups[0].length === text.length;\n}\n//# sourceMappingURL=common.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/libphonenumber-js/es6/common.js\n// module id = 12\n// module chunks = 0","import _getIterator from 'babel-runtime/core-js/get-iterator';\n// This is a port of Google Android `libphonenumber`'s\n// `phonenumberutil.js` of 17th November, 2016.\n//\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\n\nimport { matches_entirely } from './common';\n\nimport { parse_phone_number_and_country_phone_code, VALID_PUNCTUATION } from './parse';\n\nimport { get_phone_code, get_formats, get_format_pattern, get_format_format, get_format_leading_digits_patterns, get_format_national_prefix_formatting_rule, get_format_national_prefix_is_optional_when_formatting, get_format_international_format, get_metadata_by_country_phone_code } from './metadata';\n\n// Formats a phone number\n//\n// Example use cases:\n//\n// ```js\n// format('8005553535', 'RU', 'International')\n// format('8005553535', 'RU', 'International', metadata)\n// format({ phone: '8005553535', country: 'RU' }, 'International')\n// format({ phone: '8005553535', country: 'RU' }, 'International', metadata)\n// format('+78005553535', 'National')\n// format('+78005553535', 'National', metadata)\n// ```\n//\nexport default function format(first_argument, second_argument, third_argument, fourth_argument) {\n\tvar _sort_out_arguments = sort_out_arguments(first_argument, second_argument, third_argument, fourth_argument),\n\t    input = _sort_out_arguments.input,\n\t    format_type = _sort_out_arguments.format_type,\n\t    metadata = _sort_out_arguments.metadata;\n\n\tvar country_metadata = void 0;\n\n\tif (input.country) {\n\t\tcountry_metadata = metadata.countries[input.country];\n\t}\n\n\tvar _parse_phone_number_a = parse_phone_number_and_country_phone_code(input.phone, metadata),\n\t    country_phone_code = _parse_phone_number_a.country_phone_code,\n\t    number = _parse_phone_number_a.number;\n\n\tif (country_phone_code) {\n\t\t// Check country restriction\n\t\tif (input.country && country_metadata && country_phone_code !== get_phone_code(country_metadata)) {\n\t\t\treturn input.phone;\n\t\t}\n\n\t\tcountry_metadata = get_metadata_by_country_phone_code(country_phone_code, metadata);\n\t}\n\n\tif (!country_metadata) {\n\t\treturn input.phone;\n\t}\n\n\tswitch (format_type) {\n\t\tcase 'International':\n\t\t\tif (!number) {\n\t\t\t\treturn '+' + get_phone_code(country_metadata);\n\t\t\t}\n\t\t\tvar national_number = format_national_number(number, 'International', false, country_metadata);\n\t\t\treturn '+' + get_phone_code(country_metadata) + ' ' + national_number;\n\n\t\tcase 'International_plaintext':\n\t\t\treturn '+' + get_phone_code(country_metadata) + input.phone;\n\n\t\tcase 'National':\n\t\t\tif (!number) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn format_national_number(number, 'National', false, country_metadata);\n\t}\n}\n\n// This was originally set to $1 but there are some countries for which the\n// first group is not used in the national pattern (e.g. Argentina) so the $1\n// group does not match correctly.  Therefore, we use \\d, so that the first\n// group actually used in the pattern will be matched.\nexport var FIRST_GROUP_PATTERN = /(\\$\\d)/;\n\nexport function format_national_number_using_format(number, format, international, enforce_national_prefix, country_metadata) {\n\tvar format_pattern_matcher = new RegExp(get_format_pattern(format));\n\n\tvar national_prefix_formatting_rule = get_format_national_prefix_formatting_rule(format, country_metadata);\n\n\t// National prefix is omitted if there's no national prefix formatting rule\n\t// set for this country, or when this rule is set but\n\t// national prefix is optional for this phone number format\n\t// (and it is not enforced explicitly)\n\tvar national_prefix_may_be_omitted = !national_prefix_formatting_rule || national_prefix_formatting_rule && get_format_national_prefix_is_optional_when_formatting(format, country_metadata) && !enforce_national_prefix;\n\n\tif (!international && !national_prefix_may_be_omitted) {\n\t\treturn number.replace(format_pattern_matcher, get_format_format(format).replace(FIRST_GROUP_PATTERN, national_prefix_formatting_rule));\n\t}\n\n\tvar formatted_number = number.replace(format_pattern_matcher, international ? get_format_international_format(format) : get_format_format(format));\n\n\tif (international) {\n\t\treturn local_to_international_style(formatted_number);\n\t}\n\n\treturn formatted_number;\n}\n\nexport function format_national_number(number, format_as, enforce_national_prefix, country_metadata) {\n\tvar format = choose_format_for_number(get_formats(country_metadata), number);\n\n\tif (!format) {\n\t\treturn number;\n\t}\n\n\treturn format_national_number_using_format(number, format, format_as === 'International', enforce_national_prefix, country_metadata);\n}\n\nexport function choose_format_for_number(available_formats, national_number) {\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = _getIterator(available_formats), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar _format = _step.value;\n\n\t\t\t// Validate leading digits\n\t\t\tif (get_format_leading_digits_patterns(_format).length > 0) {\n\t\t\t\t// The last leading_digits_pattern is used here, as it is the most detailed\n\t\t\t\tvar last_leading_digits_pattern = get_format_leading_digits_patterns(_format)[get_format_leading_digits_patterns(_format).length - 1];\n\n\t\t\t\t// If leading digits don't match then move on to the next phone number format\n\t\t\t\tif (national_number.search(last_leading_digits_pattern) !== 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check that the national number matches the phone number format regular expression\n\t\t\tif (matches_entirely(national_number, new RegExp(get_format_pattern(_format)))) {\n\t\t\t\treturn _format;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Removes brackets and replaces dashes with spaces.\n//\n// E.g. \"(999) 111-22-33\" -> \"999 111 22 33\"\n//\nexport function local_to_international_style(local) {\n\treturn local.replace(new RegExp('[' + VALID_PUNCTUATION + ']+', 'g'), ' ').trim();\n}\n\n// Sort out arguments\nfunction sort_out_arguments() {\n\tvar first_argument = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\tvar second_argument = arguments[1];\n\tvar third_argument = arguments[2];\n\tvar fourth_argument = arguments[3];\n\n\tvar input = void 0;\n\tvar format_type = void 0;\n\tvar metadata = void 0;\n\n\t// Sort out arguments\n\tif (typeof first_argument === 'string') {\n\t\t// If country code is supplied\n\t\tif (typeof third_argument === 'string') {\n\t\t\t// Will be `parse()`d later in code\n\t\t\tinput = {\n\t\t\t\tphone: first_argument,\n\t\t\t\tcountry: second_argument\n\t\t\t};\n\n\t\t\tformat_type = third_argument;\n\t\t\tmetadata = fourth_argument;\n\t\t}\n\t\t// Just an international phone number is supplied\n\t\telse {\n\t\t\t\t// Will be `parse()`d later in code\n\t\t\t\tinput = {\n\t\t\t\t\tphone: first_argument\n\t\t\t\t};\n\n\t\t\t\tif (typeof second_argument !== 'string') {\n\t\t\t\t\tthrow new Error('Format type argument not passed for `format()`');\n\t\t\t\t}\n\n\t\t\t\tformat_type = second_argument;\n\t\t\t\tmetadata = third_argument;\n\t\t\t}\n\t} else {\n\t\tinput = first_argument;\n\t\tformat_type = second_argument;\n\t\tmetadata = third_argument;\n\t}\n\n\t// Sanity check\n\tif (!metadata) {\n\t\tthrow new Error('Metadata not passed');\n\t}\n\n\tswitch (format_type) {\n\t\tcase 'International':\n\t\tcase 'International_plaintext':\n\t\tcase 'National':\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new Error('Unknown format type argument passed to \"format()\": \"' + format_type + '\"');\n\t}\n\n\treturn { input: input, format_type: format_type, metadata: metadata };\n}\n//# sourceMappingURL=format.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/libphonenumber-js/es6/format.js\n// module id = 13\n// module chunks = 0","import parse, { is_viable_phone_number } from './parse';\n\nimport { matches_entirely } from './common';\n\nimport { get_national_number_pattern, get_type_fixed_line, get_type_mobile, get_type_toll_free, get_type_premium_rate, get_type_personal_number, get_type_voice_mail, get_type_uan, get_type_pager, get_type_voip, get_type_shared_cost } from './metadata';\n\n// Finds out national phone number type (fixed line, mobile, etc)\nexport default function get_number_type(first_argument, second_argument, third_argument) {\n\tvar _sort_out_arguments = sort_out_arguments(first_argument, second_argument, third_argument),\n\t    input = _sort_out_arguments.input,\n\t    metadata = _sort_out_arguments.metadata;\n\n\t// Sanity check\n\n\n\tif (!metadata) {\n\t\tthrow new Error('Metadata not passed');\n\t}\n\n\t// When no input was passed\n\tif (!input) {\n\t\treturn;\n\t}\n\n\t// When `parse()` returned `{}`\n\t// meaning that the phone number is not a valid one.\n\tif (!input.country) {\n\t\treturn;\n\t}\n\n\tvar national_number = input.phone;\n\tvar country_metadata = metadata.countries[input.country];\n\n\t// The following is copy-pasted from the original function:\n\t// https://github.com/googlei18n/libphonenumber/blob/3ea547d4fbaa2d0b67588904dfa5d3f2557c27ff/javascript/i18n/phonenumbers/phonenumberutil.js#L2835\n\n\t// Is this national number even valid for this country\n\tif (!is_of_type(national_number, get_national_number_pattern(country_metadata))) {\n\t\treturn; // 'UNKNOWN'\n\t}\n\n\tif (is_of_type(national_number, get_type_premium_rate(country_metadata))) {\n\t\treturn 'PREMIUM_RATE';\n\t}\n\n\tif (is_of_type(national_number, get_type_toll_free(country_metadata))) {\n\t\treturn 'TOLL_FREE';\n\t}\n\n\t/* istanbul ignore if */\n\tif (is_of_type(national_number, get_type_shared_cost(country_metadata))) {\n\t\treturn 'SHARED_COST';\n\t}\n\n\t/* istanbul ignore if */\n\tif (is_of_type(national_number, get_type_voip(country_metadata))) {\n\t\treturn 'VOIP';\n\t}\n\n\tif (is_of_type(national_number, get_type_personal_number(country_metadata))) {\n\t\treturn 'PERSONAL_NUMBER';\n\t}\n\n\t/* istanbul ignore if */\n\tif (is_of_type(national_number, get_type_pager(country_metadata))) {\n\t\treturn 'PAGER';\n\t}\n\n\t/* istanbul ignore if */\n\tif (is_of_type(national_number, get_type_uan(country_metadata))) {\n\t\treturn 'UAN';\n\t}\n\n\t/* istanbul ignore if */\n\tif (is_of_type(national_number, get_type_voice_mail(country_metadata))) {\n\t\treturn 'VOICEMAIL';\n\t}\n\n\t// Is it fixed line number\n\tif (is_of_type(national_number, get_type_fixed_line(country_metadata))) {\n\t\t// Because duplicate regular expressions are removed\n\t\t// to reduce metadata size, if there's no \"mobile\" pattern\n\t\t// then it means it was removed due to being a duplicate of some other pattern.\n\t\t//\n\t\tif (!get_type_mobile(country_metadata)) {\n\t\t\treturn 'FIXED_LINE_OR_MOBILE';\n\t\t}\n\n\t\t// Check if the number happens to qualify as both fixed line and mobile.\n\t\t// (no such country in the minimal metadata set)\n\t\t/* istanbul ignore if */\n\t\tif (is_of_type(national_number, get_type_mobile(country_metadata))) {\n\t\t\treturn 'FIXED_LINE_OR_MOBILE';\n\t\t}\n\n\t\treturn 'FIXED_LINE';\n\t}\n\n\tif (is_of_type(national_number, get_type_mobile(country_metadata))) {\n\t\treturn 'MOBILE';\n\t}\n\n\t// return 'UNKNOWN'\n}\n\nexport function is_of_type(national_number, type) {\n\t// // Check if any possible number lengths are present;\n\t// // if so, we use them to avoid checking\n\t// // the validation pattern if they don't match.\n\t// // If they are absent, this means they match\n\t// // the general description, which we have\n\t// // already checked before a specific number type.\n\t// if (get_possible_lengths(type) &&\n\t// \tget_possible_lengths(type).indexOf(national_number.length) === -1)\n\t// {\n\t// \treturn false\n\t// }\n\n\t// get_type_pattern(type) === type\n\treturn matches_entirely(national_number, type);\n}\n\n// Sort out arguments\nexport function sort_out_arguments(first_argument, second_argument, third_argument) {\n\tvar input = void 0;\n\tvar metadata = void 0;\n\n\t// Normalize numerical `value`.\n\t// https://github.com/catamphetamine/libphonenumber-js/issues/142\n\tif (typeof first_argument === 'number') {\n\t\tfirst_argument = String(first_argument);\n\t}\n\n\tif (typeof first_argument === 'string') {\n\t\t// If country code is supplied\n\t\tif (typeof second_argument === 'string' || second_argument === undefined) {\n\t\t\tmetadata = third_argument;\n\n\t\t\t// `parse` extracts phone numbers from raw text,\n\t\t\t// therefore it will cut off all \"garbage\" characters,\n\t\t\t// while this `validate` function needs to verify\n\t\t\t// that the phone number contains no \"garbage\"\n\t\t\t// therefore the explicit `is_viable_phone_number` check.\n\t\t\tif (is_viable_phone_number(first_argument)) {\n\t\t\t\tinput = parse(first_argument, second_argument, metadata);\n\t\t\t}\n\t\t}\n\t\t// Just an international phone number is supplied\n\t\telse {\n\t\t\t\tmetadata = second_argument;\n\n\t\t\t\t// `parse` extracts phone numbers from raw text,\n\t\t\t\t// therefore it will cut off all \"garbage\" characters,\n\t\t\t\t// while this `validate` function needs to verify\n\t\t\t\t// that the phone number contains no \"garbage\"\n\t\t\t\t// therefore the explicit `is_viable_phone_number` check.\n\t\t\t\tif (is_viable_phone_number(first_argument)) {\n\t\t\t\t\tinput = parse(first_argument, metadata);\n\t\t\t\t}\n\t\t\t}\n\t} else {\n\t\t// The `first_argument` must be a valid phone number\n\t\t// as a whole, not just a part of it which gets parsed here.\n\t\tif (first_argument && first_argument.phone && is_viable_phone_number(first_argument.phone)) {\n\t\t\tinput = first_argument;\n\t\t}\n\n\t\tmetadata = second_argument;\n\t}\n\n\treturn { input: input, metadata: metadata };\n}\n//# sourceMappingURL=get number type.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/libphonenumber-js/es6/get number type.js\n// module id = 14\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/get-iterator.js\n// module id = 15\n// module chunks = 0","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-iobject.js\n// module id = 16\n// module chunks = 0","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_defined.js\n// module id = 17\n// module chunks = 0","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && key in exports) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_export.js\n// module id = 18\n// module chunks = 0","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_is-object.js\n// module id = 19\n// module chunks = 0","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_fails.js\n// module id = 20\n// module chunks = 0","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-integer.js\n// module id = 21\n// module chunks = 0","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_shared-key.js\n// module id = 22\n// module chunks = 0","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iobject.js\n// module id = 23\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_cof.js\n// module id = 24\n// module chunks = 0","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-define.js\n// module id = 25\n// module chunks = 0","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_dom-create.js\n// module id = 26\n// module chunks = 0","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_property-desc.js\n// module id = 27\n// module chunks = 0","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-keys.js\n// module id = 28\n// module chunks = 0","var global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_shared.js\n// module id = 29\n// module chunks = 0","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_uid.js\n// module id = 30\n// module chunks = 0","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_enum-bug-keys.js\n// module id = 31\n// module chunks = 0","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_set-to-string-tag.js\n// module id = 32\n// module chunks = 0","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-object.js\n// module id = 33\n// module chunks = 0","import parse, { is_viable_phone_number } from './parse';\nimport get_number_type, { sort_out_arguments } from './get number type';\n\nimport { get_types } from './metadata';\n\n// Checks if a given phone number is valid\n//\n// Example use cases:\n//\n// ```js\n// is_valid('8005553535', 'RU')\n// is_valid('8005553535', 'RU', metadata)\n// is_valid({ phone: '8005553535', country: 'RU' })\n// is_valid({ phone: '8005553535', country: 'RU' }, metadata)\n// is_valid('+78005553535')\n// is_valid('+78005553535', metadata)\n// ```\n//\nexport default function is_valid(first_argument, second_argument, third_argument) {\n\tvar _sort_out_arguments = sort_out_arguments(first_argument, second_argument, third_argument),\n\t    input = _sort_out_arguments.input,\n\t    metadata = _sort_out_arguments.metadata;\n\n\t// Sanity check\n\n\n\tif (!metadata) {\n\t\tthrow new Error('Metadata not passed');\n\t}\n\n\tif (!input) {\n\t\treturn false;\n\t}\n\n\tif (!input.country) {\n\t\treturn false;\n\t}\n\n\tvar country_metadata = metadata.countries[input.country];\n\n\tif (get_types(country_metadata)) {\n\t\tif (!get_number_type(input, metadata)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n//# sourceMappingURL=validate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/libphonenumber-js/es6/validate.js\n// module id = 34\n// module chunks = 0","import _getIterator from 'babel-runtime/core-js/get-iterator';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\n// This is an enhanced port of Google Android `libphonenumber`'s\n// `asyoutypeformatter.js` of 17th November, 2016.\n//\n// https://github.com/googlei18n/libphonenumber/blob/8d21a365061de2ba0675c878a710a7b24f74d2ae/javascript/i18n/phonenumbers/asyoutypeformatter.js\n\nimport { get_phone_code, get_national_prefix, get_national_prefix_for_parsing, get_formats, get_format_pattern, get_format_format as _get_format_format, get_format_international_format, get_format_national_prefix_formatting_rule, get_format_national_prefix_is_mandatory_when_formatting, get_format_leading_digits_patterns, get_format_uses_national_prefix, get_metadata_by_country_phone_code } from './metadata';\n\nimport { VALID_PUNCTUATION, PLUS_CHARS, VALID_DIGITS, extract_formatted_phone_number, parse_phone_number, parse_phone_number_and_country_phone_code, find_country_code, strip_national_prefix } from './parse';\n\nimport { FIRST_GROUP_PATTERN, format_national_number_using_format, local_to_international_style } from './format';\n\nimport { matches_entirely } from './common';\n\n// Used in phone number format template creation.\n// Could be any digit, I guess.\nvar DUMMY_DIGIT = '9';\nvar DUMMY_DIGIT_MATCHER = new RegExp(DUMMY_DIGIT, 'g');\n// I don't know why is it exactly `15`\nvar LONGEST_NATIONAL_PHONE_NUMBER_LENGTH = 15;\n// Create a phone number consisting only of the digit 9 that matches the\n// `number_pattern` by applying the pattern to the \"longest phone number\" string.\nvar LONGEST_DUMMY_PHONE_NUMBER = repeat(DUMMY_DIGIT, LONGEST_NATIONAL_PHONE_NUMBER_LENGTH);\n\n// The digits that have not been entered yet will be represented by a \\u2008,\n// the punctuation space.\nexport var DIGIT_PLACEHOLDER = 'x'; // '\\u2008' (punctuation space)\nvar DIGIT_PLACEHOLDER_MATCHER = new RegExp(DIGIT_PLACEHOLDER);\nvar DIGIT_PLACEHOLDER_MATCHER_GLOBAL = new RegExp(DIGIT_PLACEHOLDER, 'g');\n\n// A pattern that is used to match character classes in regular expressions.\n// An example of a character class is \"[1-4]\".\nvar CHARACTER_CLASS_PATTERN = /\\[([^\\[\\]])*\\]/g;\n\n// Any digit in a regular expression that actually denotes a digit. For\n// example, in the regular expression \"80[0-2]\\d{6,10}\", the first 2 digits\n// (8 and 0) are standalone digits, but the rest are not.\n// Two look-aheads are needed because the number following \\\\d could be a\n// two-digit number, since the phone number can be as long as 15 digits.\nvar STANDALONE_DIGIT_PATTERN = /\\d(?=[^,}][^,}])/g;\n\n// A pattern that is used to determine if a `format` is eligible\n// to be used by the \"as you type formatter\".\n// It is eligible when the `format` contains groups of the dollar sign\n// followed by a single digit, separated by valid phone number punctuation.\n// This prevents invalid punctuation (such as the star sign in Israeli star numbers)\n// getting into the output of the \"as you type formatter\".\nvar ELIGIBLE_FORMAT_PATTERN = new RegExp('^' + '[' + VALID_PUNCTUATION + ']*' + '(\\\\$\\\\d[' + VALID_PUNCTUATION + ']*)+' + '$');\n\n// This is the minimum length of the leading digits of a phone number\n// to guarantee the first \"leading digits pattern\" for a phone number format\n// to be preemptive.\nvar MIN_LEADING_DIGITS_LENGTH = 3;\n\nvar VALID_INCOMPLETE_PHONE_NUMBER = '[' + PLUS_CHARS + ']{0,1}' + '[' + VALID_PUNCTUATION + VALID_DIGITS + ']*';\n\nvar VALID_INCOMPLETE_PHONE_NUMBER_PATTERN = new RegExp('^' + VALID_INCOMPLETE_PHONE_NUMBER + '$', 'i');\n\nvar as_you_type = function () {\n\tfunction as_you_type(country_code, metadata) {\n\t\t_classCallCheck(this, as_you_type);\n\n\t\t// Sanity check\n\t\tif (!metadata) {\n\t\t\tthrow new Error('Metadata not passed');\n\t\t}\n\n\t\tif (country_code && metadata.countries[country_code]) {\n\t\t\tthis.default_country = country_code;\n\t\t}\n\n\t\tthis.metadata = metadata;\n\n\t\tthis.reset();\n\t}\n\n\t_createClass(as_you_type, [{\n\t\tkey: 'input',\n\t\tvalue: function input(text) {\n\t\t\t// Parse input\n\n\t\t\tvar extracted_number = extract_formatted_phone_number(text);\n\n\t\t\t// Special case for a lone '+' sign\n\t\t\t// since it's not considered a possible phone number.\n\t\t\tif (!extracted_number) {\n\t\t\t\tif (text && text.indexOf('+') >= 0) {\n\t\t\t\t\textracted_number = '+';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Validate possible first part of a phone number\n\t\t\tif (!matches_entirely(extracted_number, VALID_INCOMPLETE_PHONE_NUMBER_PATTERN)) {\n\t\t\t\treturn this.current_output;\n\t\t\t}\n\n\t\t\treturn this.process_input(parse_phone_number(extracted_number));\n\t\t}\n\t}, {\n\t\tkey: 'process_input',\n\t\tvalue: function process_input(input) {\n\t\t\t// If an out of position '+' sign detected\n\t\t\t// (or a second '+' sign),\n\t\t\t// then just drop it from the input.\n\t\t\tif (input[0] === '+') {\n\t\t\t\tif (!this.parsed_input) {\n\t\t\t\t\tthis.parsed_input += '+';\n\n\t\t\t\t\t// If a default country was set\n\t\t\t\t\t// then reset it because an explicitly international\n\t\t\t\t\t// phone number is being entered\n\t\t\t\t\tthis.reset_countriness();\n\t\t\t\t}\n\n\t\t\t\tinput = input.slice(1);\n\t\t\t}\n\n\t\t\t// Raw phone number\n\t\t\tthis.parsed_input += input;\n\n\t\t\t// // Reset phone number validation state\n\t\t\t// this.valid = false\n\n\t\t\t// Add digits to the national number\n\t\t\tthis.national_number += input;\n\n\t\t\t// Try to format the parsed input\n\n\t\t\tif (this.is_international()) {\n\t\t\t\tif (!this.country_phone_code) {\n\t\t\t\t\t// If one looks at country phone codes\n\t\t\t\t\t// then he can notice that no one country phone code\n\t\t\t\t\t// is ever a (leftmost) substring of another country phone code.\n\t\t\t\t\t// So if a valid country code is extracted so far\n\t\t\t\t\t// then it means that this is the country code.\n\n\t\t\t\t\t// If no country phone code could be extracted so far,\n\t\t\t\t\t// then just return the raw phone number,\n\t\t\t\t\t// because it has no way of knowing\n\t\t\t\t\t// how to format the phone number so far.\n\t\t\t\t\tif (!this.extract_country_phone_code()) {\n\t\t\t\t\t\t// Return raw phone number\n\t\t\t\t\t\treturn this.parsed_input;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Initialize country-specific data\n\t\t\t\t\tthis.initialize_phone_number_formats_for_this_country_phone_code();\n\t\t\t\t\tthis.reset_format();\n\t\t\t\t\tthis.determine_the_country();\n\t\t\t\t}\n\t\t\t\t// `this.country` could be `undefined`,\n\t\t\t\t// for instance, when there is ambiguity\n\t\t\t\t// in a form of several different countries\n\t\t\t\t// each corresponding to the same country phone code\n\t\t\t\t// (e.g. NANPA: USA, Canada, etc),\n\t\t\t\t// and there's not enough digits entered\n\t\t\t\t// to reliably determine the country\n\t\t\t\t// the phone number belongs to.\n\t\t\t\t// Therefore, in cases of such ambiguity,\n\t\t\t\t// each time something is input,\n\t\t\t\t// try to determine the country\n\t\t\t\t// (if it's not determined yet).\n\t\t\t\telse if (!this.country) {\n\t\t\t\t\t\tthis.determine_the_country();\n\t\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Some national prefixes are substrings of other national prefixes\n\t\t\t\t// (for the same country), therefore try to extract national prefix each time\n\t\t\t\t// because a longer national prefix might be available at some point in time.\n\n\t\t\t\tvar previous_national_prefix = this.national_prefix;\n\t\t\t\tthis.national_number = this.national_prefix + this.national_number;\n\n\t\t\t\t// Possibly extract a national prefix\n\t\t\t\tthis.extract_national_prefix();\n\n\t\t\t\tif (this.national_prefix !== previous_national_prefix) {\n\t\t\t\t\t// National number has changed\n\t\t\t\t\t// (due to another national prefix been extracted)\n\t\t\t\t\t// therefore national number has changed\n\t\t\t\t\t// therefore reset all previous formatting data.\n\t\t\t\t\t// (and leading digits matching state)\n\t\t\t\t\tthis.matching_formats = this.available_formats;\n\t\t\t\t\tthis.reset_format();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.should_format()) {\n\t\t\t\treturn this.format_as_non_formatted_number();\n\t\t\t}\n\n\t\t\t// Check the available phone number formats\n\t\t\t// based on the currently available leading digits.\n\t\t\tthis.match_formats_by_leading_digits();\n\n\t\t\t// Format the phone number (given the next digits)\n\t\t\tvar formatted_national_phone_number = this.format_national_phone_number(input);\n\n\t\t\t// If the phone number could be formatted,\n\t\t\t// then return it, possibly prepending with country phone code\n\t\t\t// (for international phone numbers only)\n\t\t\tif (formatted_national_phone_number) {\n\t\t\t\treturn this.full_phone_number(formatted_national_phone_number);\n\t\t\t}\n\n\t\t\t// If the phone number couldn't be formatted,\n\t\t\t// then just fall back to the raw phone number.\n\t\t\treturn this.parsed_input;\n\t\t}\n\t}, {\n\t\tkey: 'format_as_non_formatted_number',\n\t\tvalue: function format_as_non_formatted_number() {\n\t\t\tif (this.is_international() && this.country_phone_code) {\n\t\t\t\tif (this.national_number) {\n\t\t\t\t\t// For convenience, the public `.template` property\n\t\t\t\t\t// contains the whole international number\n\t\t\t\t\t// if the phone number being input is international:\n\t\t\t\t\t// 'x' for the '+' sign, 'x'es for the country phone code,\n\t\t\t\t\t// a spacebar and then the template for the national number digits.\n\t\t\t\t\tthis.template = DIGIT_PLACEHOLDER + repeat(DIGIT_PLACEHOLDER, this.country_phone_code.length) + ' ' + repeat(DIGIT_PLACEHOLDER, this.national_number.length);\n\n\t\t\t\t\treturn '+' + this.country_phone_code + ' ' + this.national_number;\n\t\t\t\t}\n\n\t\t\t\treturn '+' + this.country_phone_code;\n\t\t\t}\n\n\t\t\treturn this.parsed_input;\n\t\t}\n\t}, {\n\t\tkey: 'format_national_phone_number',\n\t\tvalue: function format_national_phone_number(next_digits) {\n\t\t\t// Format the next phone number digits\n\t\t\t// using the previously chosen phone number format.\n\t\t\t//\n\t\t\t// This is done here because if `attempt_to_format_complete_phone_number`\n\t\t\t// was placed before this call then the `template`\n\t\t\t// wouldn't reflect the situation correctly (and would therefore be inconsistent)\n\t\t\t//\n\t\t\tvar national_number_formatted_with_previous_format = void 0;\n\t\t\tif (this.chosen_format) {\n\t\t\t\tnational_number_formatted_with_previous_format = this.format_next_national_number_digits(next_digits);\n\t\t\t}\n\n\t\t\t// See if the input digits can be formatted properly already. If not,\n\t\t\t// use the results from format_next_national_number_digits(), which does formatting\n\t\t\t// based on the formatting pattern chosen.\n\n\t\t\tvar formatted_number = this.attempt_to_format_complete_phone_number();\n\n\t\t\t// Just because a phone number doesn't have a suitable format\n\t\t\t// that doesn't mean that the phone is invalid\n\t\t\t// because phone number formats only format phone numbers,\n\t\t\t// they don't validate them and some (rare) phone numbers\n\t\t\t// are meant to stay non-formatted.\n\t\t\tif (formatted_number) {\n\t\t\t\t// if (this.country)\n\t\t\t\t// {\n\t\t\t\t// \tthis.valid = true\n\t\t\t\t// }\n\n\t\t\t\treturn formatted_number;\n\t\t\t}\n\n\t\t\t// For some phone number formats national prefix\n\n\t\t\t// If the previously chosen phone number format\n\t\t\t// didn't match the next (current) digit being input\n\t\t\t// (leading digits pattern didn't match).\n\t\t\tif (this.choose_another_format()) {\n\t\t\t\t// And a more appropriate phone number format\n\t\t\t\t// has been chosen for these `leading digits`,\n\t\t\t\t// then format the national phone number (so far)\n\t\t\t\t// using the newly selected phone number pattern.\n\n\t\t\t\t// Will return `undefined` if it couldn't format\n\t\t\t\t// the supplied national number\n\t\t\t\t// using the selected phone number pattern.\n\n\t\t\t\treturn this.reformat_national_number();\n\t\t\t}\n\n\t\t\t// If could format the next (current) digit\n\t\t\t// using the previously chosen phone number format\n\t\t\t// then return the formatted number so far.\n\n\t\t\t// If no new phone number format could be chosen,\n\t\t\t// and couldn't format the supplied national number\n\t\t\t// using the selected phone number pattern,\n\t\t\t// then it will return `undefined`.\n\n\t\t\treturn national_number_formatted_with_previous_format;\n\t\t}\n\t}, {\n\t\tkey: 'reset',\n\t\tvalue: function reset() {\n\t\t\t// Input stripped of non-phone-number characters.\n\t\t\t// Can only contain a possible leading '+' sign and digits.\n\t\t\tthis.parsed_input = '';\n\n\t\t\tthis.current_output = '';\n\n\t\t\t// This contains the national prefix that has been extracted. It contains only\n\t\t\t// digits without formatting.\n\t\t\tthis.national_prefix = '';\n\n\t\t\tthis.national_number = '';\n\n\t\t\tthis.reset_countriness();\n\n\t\t\tthis.reset_format();\n\n\t\t\t// this.valid = false\n\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'reset_country',\n\t\tvalue: function reset_country() {\n\t\t\tif (this.default_country && !this.is_international()) {\n\t\t\t\tthis.country = this.default_country;\n\t\t\t} else {\n\t\t\t\tthis.country = undefined;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'reset_countriness',\n\t\tvalue: function reset_countriness() {\n\t\t\tthis.reset_country();\n\n\t\t\tif (this.default_country && !this.is_international()) {\n\t\t\t\tthis.country_metadata = this.metadata.countries[this.default_country];\n\t\t\t\tthis.country_phone_code = get_phone_code(this.country_metadata);\n\n\t\t\t\tthis.initialize_phone_number_formats_for_this_country_phone_code();\n\t\t\t} else {\n\t\t\t\tthis.country_metadata = undefined;\n\t\t\t\tthis.country_phone_code = undefined;\n\n\t\t\t\tthis.available_formats = [];\n\t\t\t\tthis.matching_formats = this.available_formats;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'reset_format',\n\t\tvalue: function reset_format() {\n\t\t\tthis.chosen_format = undefined;\n\t\t\tthis.template = undefined;\n\t\t\tthis.partially_populated_template = undefined;\n\t\t\tthis.last_match_position = -1;\n\t\t}\n\n\t\t// Format each digit of national phone number (so far)\n\t\t// using the newly selected phone number pattern.\n\n\t}, {\n\t\tkey: 'reformat_national_number',\n\t\tvalue: function reformat_national_number() {\n\t\t\t// Format each digit of national phone number (so far)\n\t\t\t// using the selected phone number pattern.\n\t\t\treturn this.format_next_national_number_digits(this.national_number);\n\t\t}\n\t}, {\n\t\tkey: 'initialize_phone_number_formats_for_this_country_phone_code',\n\t\tvalue: function initialize_phone_number_formats_for_this_country_phone_code() {\n\t\t\t// Get all \"eligible\" phone number formats for this country\n\t\t\tthis.available_formats = get_formats(this.country_metadata).filter(function (format) {\n\t\t\t\treturn ELIGIBLE_FORMAT_PATTERN.test(get_format_international_format(format));\n\t\t\t});\n\n\t\t\tthis.matching_formats = this.available_formats;\n\t\t}\n\t}, {\n\t\tkey: 'match_formats_by_leading_digits',\n\t\tvalue: function match_formats_by_leading_digits() {\n\t\t\tvar leading_digits = this.national_number;\n\n\t\t\t// \"leading digits\" patterns start with a maximum of 3 digits,\n\t\t\t// and then with each additional digit\n\t\t\t// a more precise \"leading digits\" pattern is specified.\n\n\t\t\tvar index_of_leading_digits_pattern = leading_digits.length - MIN_LEADING_DIGITS_LENGTH;\n\n\t\t\tif (index_of_leading_digits_pattern < 0) {\n\t\t\t\tindex_of_leading_digits_pattern = 0;\n\t\t\t}\n\n\t\t\tthis.matching_formats = this.matching_formats.filter(function (format) {\n\t\t\t\tvar leading_digits_pattern_count = get_format_leading_digits_patterns(format).length;\n\n\t\t\t\t// Keep everything that isn't restricted by leading digits.\n\t\t\t\tif (leading_digits_pattern_count === 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tvar leading_digits_pattern_index = Math.min(index_of_leading_digits_pattern, leading_digits_pattern_count - 1);\n\t\t\t\tvar leading_digits_pattern = get_format_leading_digits_patterns(format)[leading_digits_pattern_index];\n\n\t\t\t\t// Brackets are required for `^` to be applied to\n\t\t\t\t// all or-ed (`|`) parts, not just the first one.\n\t\t\t\treturn new RegExp('^(' + leading_digits_pattern + ')').test(leading_digits);\n\t\t\t});\n\n\t\t\t// If there was a phone number format chosen\n\t\t\t// and it no longer holds given the new leading digits then reset it\n\t\t\tif (this.chosen_format && this.matching_formats.indexOf(this.chosen_format) === -1) {\n\t\t\t\tthis.reset_format();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'should_format',\n\t\tvalue: function should_format() {\n\t\t\t// Start matching any formats at all when the national number\n\t\t\t// entered so far is at least 3 digits long,\n\t\t\t// otherwise format matching would give false negatives\n\t\t\t// like when the digits entered so far are `2`\n\t\t\t// and the leading digits pattern is `21` –\n\t\t\t// it's quite obvious in this case that the format could be the one\n\t\t\t// but due to the absence of further digits it would give false negative.\n\t\t\t//\n\t\t\t// Google could have provided leading digits patterns starting\n\t\t\t// with a single digit but they chose not to (for whatever reasons).\n\t\t\t//\n\t\t\treturn this.national_number >= MIN_LEADING_DIGITS_LENGTH;\n\t\t}\n\n\t\t// Check to see if there is an exact pattern match for these digits. If so, we\n\t\t// should use this instead of any other formatting template whose\n\t\t// leadingDigitsPattern also matches the input.\n\n\t}, {\n\t\tkey: 'attempt_to_format_complete_phone_number',\n\t\tvalue: function attempt_to_format_complete_phone_number() {\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = _getIterator(this.matching_formats), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar format = _step.value;\n\n\t\t\t\t\tvar matcher = new RegExp('^(?:' + get_format_pattern(format) + ')$');\n\n\t\t\t\t\tif (!matcher.test(this.national_number)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.validate_format(format)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// To leave the formatter in a consistent state\n\t\t\t\t\tthis.reset_format();\n\t\t\t\t\tthis.chosen_format = format;\n\n\t\t\t\t\tvar formatted_number = format_national_number_using_format(this.national_number, format, this.is_international(), this.national_prefix.length > 0, this.country_metadata);\n\n\t\t\t\t\t// Set `this.template` and `this.partially_populated_template`.\n\t\t\t\t\t//\n\t\t\t\t\t// `else` case doesn't ever happen\n\t\t\t\t\t// with the current metadata,\n\t\t\t\t\t// but just in case.\n\t\t\t\t\t//\n\t\t\t\t\t/* istanbul ignore else */\n\t\t\t\t\tif (this.create_formatting_template(format)) {\n\t\t\t\t\t\t// Populate `this.partially_populated_template`\n\t\t\t\t\t\tthis.reformat_national_number();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Prepend `+CountryCode` in case of an international phone number\n\t\t\t\t\t\tvar full_number = this.full_phone_number(formatted_number);\n\t\t\t\t\t\tthis.template = full_number.replace(/[\\d\\+]/g, DIGIT_PLACEHOLDER);\n\t\t\t\t\t\tthis.partially_populated_template = full_number;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn formatted_number;\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Prepends `+CountryCode` in case of an international phone number\n\n\t}, {\n\t\tkey: 'full_phone_number',\n\t\tvalue: function full_phone_number(formatted_national_number) {\n\t\t\tif (this.is_international()) {\n\t\t\t\treturn '+' + this.country_phone_code + ' ' + formatted_national_number;\n\t\t\t}\n\n\t\t\treturn formatted_national_number;\n\t\t}\n\n\t\t// Extracts the country calling code from the beginning\n\t\t// of the entered `national_number` (so far),\n\t\t// and places the remaining input into the `national_number`.\n\n\t}, {\n\t\tkey: 'extract_country_phone_code',\n\t\tvalue: function extract_country_phone_code() {\n\t\t\tif (!this.national_number) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar _parse_phone_number_a = parse_phone_number_and_country_phone_code(this.parsed_input, this.metadata),\n\t\t\t    country_phone_code = _parse_phone_number_a.country_phone_code,\n\t\t\t    number = _parse_phone_number_a.number;\n\n\t\t\tif (!country_phone_code) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.country_phone_code = country_phone_code;\n\t\t\tthis.national_number = number;\n\n\t\t\treturn this.country_metadata = get_metadata_by_country_phone_code(country_phone_code, this.metadata);\n\t\t}\n\t}, {\n\t\tkey: 'extract_national_prefix',\n\t\tvalue: function extract_national_prefix() {\n\t\t\tthis.national_prefix = '';\n\n\t\t\tif (!this.country_metadata) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar national_number = strip_national_prefix(this.national_number, this.country_metadata);\n\n\t\t\tif (national_number !== this.national_number) {\n\t\t\t\tthis.national_prefix = this.national_number.slice(0, this.national_number.length - national_number.length);\n\t\t\t\tthis.national_number = national_number;\n\t\t\t}\n\n\t\t\treturn this.national_prefix;\n\t\t}\n\t}, {\n\t\tkey: 'choose_another_format',\n\t\tvalue: function choose_another_format() {\n\t\t\t// When there are multiple available formats, the formatter uses the first\n\t\t\t// format where a formatting template could be created.\n\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\tvar _didIteratorError2 = false;\n\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator2 = _getIterator(this.matching_formats), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\tvar format = _step2.value;\n\n\t\t\t\t\t// If this format is currently being used\n\t\t\t\t\t// and is still possible, then stick to it.\n\t\t\t\t\tif (this.chosen_format === format) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// If this `format` is suitable for \"as you type\",\n\t\t\t\t\t// then extract the template from this format\n\t\t\t\t\t// and use it to format the phone number being input.\n\n\t\t\t\t\tif (!this.validate_format(format)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.create_formatting_template(format)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.chosen_format = format;\n\n\t\t\t\t\t// With a new formatting template, the matched position\n\t\t\t\t\t// using the old template needs to be reset.\n\t\t\t\t\tthis.last_match_position = -1;\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\t// No format matches the phone number,\n\t\t\t\t// therefore set `country` to `undefined`\n\t\t\t\t// (or to the default country).\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t_iteratorError2 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.reset_country();\n\n\t\t\t// No format matches the national phone number entered\n\t\t\tthis.reset_format();\n\t\t}\n\t}, {\n\t\tkey: 'validate_format',\n\t\tvalue: function validate_format(format) {\n\t\t\t// If national prefix is mandatory for this phone number format\n\t\t\t// and the user didn't input the national prefix,\n\t\t\t// then this phone number format isn't suitable.\n\t\t\tif (!this.is_international() && !this.national_prefix && get_format_national_prefix_is_mandatory_when_formatting(format, this.country_metadata)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t}, {\n\t\tkey: 'create_formatting_template',\n\t\tvalue: function create_formatting_template(format) {\n\t\t\t// The formatter doesn't format numbers when numberPattern contains '|', e.g.\n\t\t\t// (20|3)\\d{4}. In those cases we quickly return.\n\t\t\t// (Though there's no such format in current metadata)\n\t\t\t/* istanbul ignore if */\n\t\t\tif (get_format_pattern(format).indexOf('|') >= 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get formatting template for this phone number format\n\t\t\tvar template = this.get_template_for_phone_number_format_pattern(format);\n\n\t\t\t// If the national number entered is too long\n\t\t\t// for any phone number format, then abort.\n\t\t\tif (!template) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// This one is for national number only\n\t\t\tthis.partially_populated_template = template;\n\n\t\t\t// For convenience, the public `.template` property\n\t\t\t// contains the whole international number\n\t\t\t// if the phone number being input is international:\n\t\t\t// 'x' for the '+' sign, 'x'es for the country phone code,\n\t\t\t// a spacebar and then the template for the formatted national number.\n\t\t\tif (this.is_international()) {\n\t\t\t\tthis.template = DIGIT_PLACEHOLDER + repeat(DIGIT_PLACEHOLDER, this.country_phone_code.length) + ' ' + template;\n\t\t\t}\n\t\t\t// For local numbers, replace national prefix\n\t\t\t// with a digit placeholder.\n\t\t\telse {\n\t\t\t\t\tthis.template = template.replace(/\\d/g, DIGIT_PLACEHOLDER);\n\t\t\t\t}\n\n\t\t\t// This one is for the full phone number\n\t\t\treturn this.template;\n\t\t}\n\n\t\t// Generates formatting template for a phone number format\n\n\t}, {\n\t\tkey: 'get_template_for_phone_number_format_pattern',\n\t\tvalue: function get_template_for_phone_number_format_pattern(format) {\n\t\t\tvar national_prefix_formatting_rule = get_format_national_prefix_formatting_rule(format, this.country_metadata);\n\n\t\t\t// A very smart trick by the guys at Google\n\t\t\tvar number_pattern = get_format_pattern(format)\n\t\t\t// Replace anything in the form of [..] with \\d\n\t\t\t.replace(CHARACTER_CLASS_PATTERN, '\\\\d')\n\t\t\t// Replace any standalone digit (not the one in `{}`) with \\d\n\t\t\t.replace(STANDALONE_DIGIT_PATTERN, '\\\\d');\n\n\t\t\t// This match will always succeed,\n\t\t\t// because the \"longest dummy phone number\"\n\t\t\t// has enough length to accomodate any possible\n\t\t\t// national phone number format pattern.\n\t\t\tvar dummy_phone_number_matching_format_pattern = LONGEST_DUMMY_PHONE_NUMBER.match(number_pattern)[0];\n\n\t\t\t// If the national number entered is too long\n\t\t\t// for any phone number format, then abort.\n\t\t\tif (this.national_number.length > dummy_phone_number_matching_format_pattern.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Prepare the phone number format\n\t\t\tvar number_format = this.get_format_format(format, national_prefix_formatting_rule);\n\n\t\t\t// Get a formatting template which can be used to efficiently format\n\t\t\t// a partial number where digits are added one by one.\n\n\t\t\t// Below `strict_pattern` is used for the\n\t\t\t// regular expression (with `^` and `$`).\n\t\t\t// This wasn't originally in Google's `libphonenumber`\n\t\t\t// and I guess they don't really need it\n\t\t\t// because they're not using \"templates\" to format phone numbers\n\t\t\t// but I added `strict_pattern` after encountering\n\t\t\t// South Korean phone number formatting bug.\n\t\t\t//\n\t\t\t// Non-strict regular expression bug demonstration:\n\t\t\t//\n\t\t\t// this.national_number : `111111111` (9 digits)\n\t\t\t//\n\t\t\t// number_pattern : (\\d{2})(\\d{3,4})(\\d{4})\n\t\t\t// number_format : `$1 $2 $3`\n\t\t\t// dummy_phone_number_matching_format_pattern : `9999999999` (10 digits)\n\t\t\t//\n\t\t\t// '9999999999'.replace(new RegExp(/(\\d{2})(\\d{3,4})(\\d{4})/g), '$1 $2 $3') = \"99 9999 9999\"\n\t\t\t//\n\t\t\t// template : xx xxxx xxxx\n\t\t\t//\n\t\t\t// But the correct template in this case is `xx xxx xxxx`.\n\t\t\t// The template was generated incorrectly because of the\n\t\t\t// `{3,4}` variability in the `number_pattern`.\n\t\t\t//\n\t\t\t// The fix is, if `this.national_number` has already sufficient length\n\t\t\t// to satisfy the `number_pattern` completely then `this.national_number` is used\n\t\t\t// instead of `dummy_phone_number_matching_format_pattern`.\n\n\t\t\tvar strict_pattern = new RegExp('^' + number_pattern + '$');\n\t\t\tvar national_number_dummy_digits = this.national_number.replace(/\\d/g, DUMMY_DIGIT);\n\n\t\t\t// If `this.national_number` has already sufficient length\n\t\t\t// to satisfy the `number_pattern` completely then use it\n\t\t\t// instead of `dummy_phone_number_matching_format_pattern`.\n\t\t\tif (strict_pattern.test(national_number_dummy_digits)) {\n\t\t\t\tdummy_phone_number_matching_format_pattern = national_number_dummy_digits;\n\t\t\t}\n\n\t\t\t// Generate formatting template for this phone number format\n\t\t\treturn dummy_phone_number_matching_format_pattern\n\t\t\t// Format the dummy phone number according to the format\n\t\t\t.replace(new RegExp(number_pattern), number_format)\n\t\t\t// Replace each dummy digit with a DIGIT_PLACEHOLDER\n\t\t\t.replace(DUMMY_DIGIT_MATCHER, DIGIT_PLACEHOLDER);\n\t\t}\n\t}, {\n\t\tkey: 'format_next_national_number_digits',\n\t\tvalue: function format_next_national_number_digits(digits) {\n\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\tvar _didIteratorError3 = false;\n\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator3 = _getIterator(digits), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\tvar digit = _step3.value;\n\n\t\t\t\t\t// If there is room for more digits in current `template`,\n\t\t\t\t\t// then set the next digit in the `template`,\n\t\t\t\t\t// and return the formatted digits so far.\n\n\t\t\t\t\t// If more digits are entered than the current format could handle\n\t\t\t\t\tif (this.partially_populated_template.slice(this.last_match_position + 1).search(DIGIT_PLACEHOLDER_MATCHER) === -1) {\n\t\t\t\t\t\t// Reset the current format,\n\t\t\t\t\t\t// so that the new format will be chosen\n\t\t\t\t\t\t// in a subsequent `this.choose_another_format()` call\n\t\t\t\t\t\t// later in code.\n\t\t\t\t\t\tthis.chosen_format = undefined;\n\t\t\t\t\t\tthis.template = undefined;\n\t\t\t\t\t\tthis.partially_populated_template = undefined;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.last_match_position = this.partially_populated_template.search(DIGIT_PLACEHOLDER_MATCHER);\n\t\t\t\t\tthis.partially_populated_template = this.partially_populated_template.replace(DIGIT_PLACEHOLDER_MATCHER, digit);\n\t\t\t\t}\n\n\t\t\t\t// Return the formatted phone number so far\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t_iteratorError3 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn close_dangling_braces(this.partially_populated_template, this.last_match_position + 1).replace(DIGIT_PLACEHOLDER_MATCHER_GLOBAL, ' ');\n\t\t}\n\t}, {\n\t\tkey: 'is_international',\n\t\tvalue: function is_international() {\n\t\t\treturn this.parsed_input && this.parsed_input[0] === '+';\n\t\t}\n\t}, {\n\t\tkey: 'get_format_format',\n\t\tvalue: function get_format_format(format, national_prefix_formatting_rule) {\n\t\t\tvar number_format = this.is_international() ? get_format_international_format(format) : _get_format_format(format);\n\n\t\t\t// If national prefix formatting rule is set\n\t\t\t// for this phone number format\n\t\t\tif (national_prefix_formatting_rule) {\n\t\t\t\t// If the user did input the national prefix\n\t\t\t\t// (or if the national prefix formatting rule does not require national prefix)\n\t\t\t\t// then maybe make it part of the phone number template\n\t\t\t\tif (this.national_prefix || !get_format_uses_national_prefix(national_prefix_formatting_rule)) {\n\t\t\t\t\t// Make the national prefix part of the phone number template\n\t\t\t\t\tnumber_format = number_format.replace(FIRST_GROUP_PATTERN, national_prefix_formatting_rule);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.is_international()) {\n\t\t\t\treturn local_to_international_style(number_format);\n\t\t\t}\n\n\t\t\treturn number_format;\n\t\t}\n\n\t\t// Determines the country of the phone number\n\t\t// entered so far based on the country phone code\n\t\t// and the national phone number.\n\n\t}, {\n\t\tkey: 'determine_the_country',\n\t\tvalue: function determine_the_country() {\n\t\t\tthis.country = find_country_code(this.country_phone_code, this.national_number, this.metadata);\n\t\t}\n\t}]);\n\n\treturn as_you_type;\n}();\n\nexport default as_you_type;\n\n\nexport function close_dangling_braces(template, cut_before) {\n\tvar retained_template = template.slice(0, cut_before);\n\n\tvar opening_braces = count_occurences('(', retained_template);\n\tvar closing_braces = count_occurences(')', retained_template);\n\n\tvar dangling_braces = opening_braces - closing_braces;\n\n\twhile (dangling_braces > 0 && cut_before < template.length) {\n\t\tif (template[cut_before] === ')') {\n\t\t\tdangling_braces--;\n\t\t}\n\t\tcut_before++;\n\t}\n\n\treturn template.slice(0, cut_before);\n}\n\n// Counts all occurences of a symbol in a string\nexport function count_occurences(symbol, string) {\n\tvar count = 0;\n\n\tvar _iteratorNormalCompletion4 = true;\n\tvar _didIteratorError4 = false;\n\tvar _iteratorError4 = undefined;\n\n\ttry {\n\t\tfor (var _iterator4 = _getIterator(string), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\tvar character = _step4.value;\n\n\t\t\tif (character === symbol) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError4 = true;\n\t\t_iteratorError4 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t_iterator4.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError4) {\n\t\t\t\tthrow _iteratorError4;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn count;\n}\n\n// Repeats a string (or a symbol) N times.\n// http://stackoverflow.com/questions/202605/repeat-string-javascript\nexport function repeat(string, times) {\n\tif (times < 1) {\n\t\treturn '';\n\t}\n\n\tvar result = '';\n\n\twhile (times > 1) {\n\t\tif (times & 1) {\n\t\t\tresult += string;\n\t\t}\n\n\t\ttimes >>= 1;\n\t\tstring += string;\n\t}\n\n\treturn result + string;\n}\n//# sourceMappingURL=as you type.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/libphonenumber-js/es6/as you type.js\n// module id = 35\n// module chunks = 0","import InputMask from 'inputmask-core'\nimport keyboard from '../../utils/keyboard'\n\nconst inputMasks = new WeakMap()\n\nconst getSelection = (input) => {\n    return {\n        start: input.selectionStart,\n        end: input.selectionEnd,\n    }\n}\n\nconst setSelection = (input, selection) => {\n    input.focus()\n    input.setSelectionRange(selection.start, selection.end)\n}\n\nconst removePlaceholderCharacters = (value, placeholderCharacters) => value.split('')\n    .reduce((accumulated, currentCharacter, currentIndex) =>\n        (\n            accumulated.length === currentIndex && !placeholderCharacters.includes(currentCharacter) ?\n                `${accumulated}${currentCharacter}` : accumulated\n        ), ''\n    )\n\nclass MaskedInput {\n    constructor(options) {\n        const inputMask = new InputMask({\n            ...options,\n        })\n\n        inputMasks.set(this, inputMask)\n    }\n\n    updateMaskSelection(input) {\n        const inputMask = inputMasks.get(this)\n        inputMask.selection = getSelection(input)\n        return Promise.resolve(inputMask.selection)\n    }\n\n    updateInputSelection(input) {\n        const inputMask = inputMasks.get(this)\n        setSelection(input, inputMask.selection)\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                setSelection(input, inputMask.selection)\n                resolve(inputMask.selection)\n            }, 0)\n        })\n    }\n\n    getInputSelection(input) {\n        const inputMask = inputMasks.get(this)\n        const selection = getSelection(input)\n        let value = input.value.slice(0, selection.end)\n        for (let i = selection.end, l = selection.start; i >= l; i--) {\n            if (!inputMask.pattern.isEditableIndex(i) || value.charAt(i) === inputMask.placeholderChar) {\n                value = `${value.slice(0,i)}${value.slice(i + 1)}`\n            }\n        }\n        return value.slice(selection.start)\n    }\n\n    get mask() {\n        return inputMasks.get(this)\n    }\n\n    get firstEmptyIndex() {\n        const value = this.displayValue\n        let i = this.mask.pattern.firstEditableIndex\n        while (i <= value.length && (\n            !this.mask.pattern.isEditableIndex(i) || value.charAt(i) !== this.mask.placeholderChar\n        )) {\n            i++\n        }\n        return i\n    }\n\n    get selection() {\n        return this.mask.selection\n    }\n\n    set selection(selection) {\n        this.mask.selection = selection\n    }\n\n    get displayValue() {\n        return this.mask.getValue()\n    }\n\n    get revealedValue() {\n        return this.displayValue.slice(0,this.firstEmptyIndex)\n    }\n\n    set value(value) {\n        const inputMask = this.mask\n        inputMask.setValue(value === inputMask.emptyValue ? '' : value)\n        const newValue = this.revealedValue\n        inputMask.setValue(newValue)\n        this.selection = {\n            start: newValue.length,\n            end: newValue.length,\n        }\n    }\n\n    get value() {\n        const inputMask = this.mask\n        return removePlaceholderCharacters(inputMask.getRawValue(), [inputMask.placeholderChar])\n    }\n\n    get placeholder() {\n        return this.mask.emptyValue\n    }\n\n    handleCut(event) {\n        const inputMask = this && this.mask\n        if (event && inputMask) {\n            this.updateMaskSelection(event.target)\n            if (event.clipboardData) {\n                const cutData = this.getInputSelection(event.target)\n                if (inputMask.backspace()) {\n                    event.preventDefault()\n                    cutData !== '' && event.clipboardData.setData('Text', cutData)\n                    this.updateInputSelection(event.target)\n                }\n            }\n        }\n    }\n\n    handlePaste(event) {\n        const inputMask = this && this.mask\n        if (event && inputMask) {\n            this.updateMaskSelection(event.target)\n            if (event.clipboardData) {\n                let pasteData = event.clipboardData.types && event.clipboardData.types['text/plain'] ?\n                    event.clipboardData.getData('text/plain') :\n                    event.clipboardData.getData('Text')\n                if (inputMask.selection.start < inputMask.pattern.firstEditableIndex) {\n                    for (let i = inputMask.pattern.firstEditableIndex - 1, l = inputMask.selection.start; i >= l; i--) {\n                        if (pasteData.charAt(i) !== inputMask.pattern.pattern[i]) {\n                            pasteData = `${inputMask.pattern.pattern[i]}${pasteData}`\n                        }\n                    }\n                }\n                if (inputMask.paste(pasteData)) {\n                    event.preventDefault()\n                    this.updateInputSelection(event.target)\n                }\n            }\n        }\n    }\n\n    handleKeyDown(event) {\n        const inputMask = this && this.mask\n\n        if (event && inputMask) {\n            if (event.key === 'Backspace') {\n                event.preventDefault()\n                this.updateMaskSelection(event.target)\n                if (this.selection.end === this.selection.start) {\n                    let i = inputMask.selection.start - 1\n                    for (; i >= inputMask.pattern.firstEditableIndex; i--) {\n                        if (inputMask.pattern.isEditableIndex(i)) {\n                            break\n                        }\n                    }\n                    this.selection = {\n                        start: i,\n                        end: this.selection.end,\n                    }\n                }\n                inputMask.backspace()\n                this.updateInputSelection(event.target)\n            }\n            if (\n                (keyboard.isUndo(event) && inputMask.undo()) ||\n                (keyboard.isRedo(event) && inputMask.redo())\n            ) {\n                event.preventDefault()\n                this.updateInputSelection(event.target)\n            }\n        }\n    }\n\n    handleKeyPress(event) {\n        if (!event || event.metaKey || event.altKey || event.ctrlKey || event.key === 'Enter') {\n            return\n        }\n\n        if (this && this.mask) {\n            const inputMask = this.mask\n            this.updateMaskSelection(event.target)\n\n            if (inputMask.input((event.key || event.data))) {\n                event.preventDefault()\n                this.updateInputSelection(event.target)\n                return\n            }\n        }\n    }\n\n    handleInput(event) {\n        if (event && this && this.mask) {\n            const maskValue = this.displayValue\n            const incomingValue = event.target.value\n            if (incomingValue !== maskValue) {\n                this.updateMaskSelection(event.target)\n                this.value = incomingValue\n                event.target.value = this.displayValue\n                this.updateInputSelection(event.target)\n            }\n        }\n    }\n}\n\nexport default MaskedInput\n\n\n// WEBPACK FOOTER //\n// ./src/mask/input/index.js","/* Validations */\nexport {default as validateEmail} from 'validation/email'\nexport {default as validatePhone} from 'validation/phone'\nexport {default as validatePostalCode, validateZipCode} from 'validation/postalCode'\nexport {default as validateRequired} from 'validation/required'\nexport {default as validateTerritory, validateState} from 'validation/territory'\nexport {default as validateUrl} from 'validation/url'\n\n/* Masking */\nexport {default as MaskedInput} from  'mask/input'\nexport {default as MaskedPhoneInput} from  'mask/phone'\n\nexport {\n    countryNameLookup,\n    countryCodeLookup,\n    countryHasTerritories,\n    territoryLabelForCountry,\n    territoryOptionsForCountry,\n} from './utils/address'\n\n\n\n// WEBPACK FOOTER //\n// ./src/export.js","const VALID_EMAIL = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\nconst validateEmail = value => VALID_EMAIL.test(value)\n\nexport default validateEmail\n\n\n\n// WEBPACK FOOTER //\n// ./src/validation/email/index.js","import {countryCodeLookup} from '../../utils/address'\nimport {isValidNumber} from 'libphonenumber-js'\n\nconst validatePhone = (value, country = 'US') => isValidNumber({\n    phone: value,\n    country: countryCodeLookup(country),\n})\n\nexport default validatePhone\n\n\n\n// WEBPACK FOOTER //\n// ./src/validation/phone/index.js","import metadata from './metadata.min.json'\r\n\r\nimport parseCustom from './es6/parse'\r\nimport getNumberTypeCustom from './es6/get number type'\r\nimport formatCustom from './es6/format'\r\nimport isValidNumberCustom from './es6/validate'\r\nimport asYouTypeCustom from './es6/as you type'\r\n\r\nimport { get_phone_code } from './es6/metadata'\r\n\r\nexport function parse()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn parseCustom.apply(this, parameters)\r\n}\r\n\r\nexport function format()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn formatCustom.apply(this, parameters)\r\n}\r\n\r\nexport function get_number_type()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn getNumberTypeCustom.apply(this, parameters)\r\n}\r\n\r\n// camelCase alias\r\nexport function getNumberType()\r\n{\r\n\treturn get_number_type.apply(this, arguments)\r\n}\r\n\r\nexport function is_valid_number()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn isValidNumberCustom.apply(this, parameters)\r\n}\r\n\r\n// camelCase alias\r\nexport function isValidNumber()\r\n{\r\n\treturn is_valid_number.apply(this, arguments)\r\n}\r\n\r\nexport function as_you_type(country)\r\n{\r\n\tasYouTypeCustom.call(this, country, metadata)\r\n}\r\n\r\nas_you_type.prototype = Object.create(asYouTypeCustom.prototype, {})\r\nas_you_type.prototype.constructor = as_you_type\r\n\r\n// camelCase alias\r\n\r\nexport function asYouType(country)\r\n{\r\n\tasYouTypeCustom.call(this, country, metadata)\r\n}\r\n\r\nasYouType.prototype = Object.create(asYouTypeCustom.prototype, {})\r\nasYouType.prototype.constructor = asYouType\r\n\r\nexport\r\n{\r\n\tdefault as parseCustom,\r\n\tDIGIT_MAPPINGS as DIGITS\r\n}\r\nfrom './es6/parse'\r\n\r\nexport { default as formatCustom }        from './es6/format'\r\nexport { default as isValidNumberCustom } from './es6/validate'\r\nexport { default as getNumberTypeCustom } from './es6/get number type'\r\n\r\nexport\r\n{\r\n\tdefault as asYouTypeCustom,\r\n\tDIGIT_PLACEHOLDER\r\n}\r\nfrom './es6/as you type'\r\n\r\nexport function getPhoneCode(country)\r\n{\r\n\treturn getPhoneCodeCustom(country, metadata)\r\n}\r\n\r\nexport function getPhoneCodeCustom(country, metadata)\r\n{\r\n\tif (!metadata.countries[country])\r\n\t{\r\n\t\tthrow new Error('Unknown country: \"' + country + '\"')\r\n\t}\r\n\r\n\treturn get_phone_code(metadata.countries[country])\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/libphonenumber-js/index.es6.js\n// module id = 41\n// module chunks = 0","module.exports = {\"country_phone_code_to_countries\":{\"1\":[\"US\",\"AG\",\"AI\",\"AS\",\"BB\",\"BM\",\"BS\",\"CA\",\"DM\",\"DO\",\"GD\",\"GU\",\"JM\",\"KN\",\"KY\",\"LC\",\"MP\",\"MS\",\"PR\",\"SX\",\"TC\",\"TT\",\"VC\",\"VG\",\"VI\"],\"7\":[\"RU\",\"KZ\"],\"20\":[\"EG\"],\"27\":[\"ZA\"],\"30\":[\"GR\"],\"31\":[\"NL\"],\"32\":[\"BE\"],\"33\":[\"FR\"],\"34\":[\"ES\"],\"36\":[\"HU\"],\"39\":[\"IT\",\"VA\"],\"40\":[\"RO\"],\"41\":[\"CH\"],\"43\":[\"AT\"],\"44\":[\"GB\",\"GG\",\"IM\",\"JE\"],\"45\":[\"DK\"],\"46\":[\"SE\"],\"47\":[\"NO\",\"SJ\"],\"48\":[\"PL\"],\"49\":[\"DE\"],\"51\":[\"PE\"],\"52\":[\"MX\"],\"53\":[\"CU\"],\"54\":[\"AR\"],\"55\":[\"BR\"],\"56\":[\"CL\"],\"57\":[\"CO\"],\"58\":[\"VE\"],\"60\":[\"MY\"],\"61\":[\"AU\",\"CC\",\"CX\"],\"62\":[\"ID\"],\"63\":[\"PH\"],\"64\":[\"NZ\"],\"65\":[\"SG\"],\"66\":[\"TH\"],\"81\":[\"JP\"],\"82\":[\"KR\"],\"84\":[\"VN\"],\"86\":[\"CN\"],\"90\":[\"TR\"],\"91\":[\"IN\"],\"92\":[\"PK\"],\"93\":[\"AF\"],\"94\":[\"LK\"],\"95\":[\"MM\"],\"98\":[\"IR\"],\"211\":[\"SS\"],\"212\":[\"MA\",\"EH\"],\"213\":[\"DZ\"],\"216\":[\"TN\"],\"218\":[\"LY\"],\"220\":[\"GM\"],\"221\":[\"SN\"],\"222\":[\"MR\"],\"223\":[\"ML\"],\"224\":[\"GN\"],\"225\":[\"CI\"],\"226\":[\"BF\"],\"227\":[\"NE\"],\"228\":[\"TG\"],\"229\":[\"BJ\"],\"230\":[\"MU\"],\"231\":[\"LR\"],\"232\":[\"SL\"],\"233\":[\"GH\"],\"234\":[\"NG\"],\"235\":[\"TD\"],\"236\":[\"CF\"],\"237\":[\"CM\"],\"238\":[\"CV\"],\"239\":[\"ST\"],\"240\":[\"GQ\"],\"241\":[\"GA\"],\"242\":[\"CG\"],\"243\":[\"CD\"],\"244\":[\"AO\"],\"245\":[\"GW\"],\"246\":[\"IO\"],\"247\":[\"AC\"],\"248\":[\"SC\"],\"249\":[\"SD\"],\"250\":[\"RW\"],\"251\":[\"ET\"],\"252\":[\"SO\"],\"253\":[\"DJ\"],\"254\":[\"KE\"],\"255\":[\"TZ\"],\"256\":[\"UG\"],\"257\":[\"BI\"],\"258\":[\"MZ\"],\"260\":[\"ZM\"],\"261\":[\"MG\"],\"262\":[\"RE\",\"YT\"],\"263\":[\"ZW\"],\"264\":[\"NA\"],\"265\":[\"MW\"],\"266\":[\"LS\"],\"267\":[\"BW\"],\"268\":[\"SZ\"],\"269\":[\"KM\"],\"290\":[\"SH\",\"TA\"],\"291\":[\"ER\"],\"297\":[\"AW\"],\"298\":[\"FO\"],\"299\":[\"GL\"],\"350\":[\"GI\"],\"351\":[\"PT\"],\"352\":[\"LU\"],\"353\":[\"IE\"],\"354\":[\"IS\"],\"355\":[\"AL\"],\"356\":[\"MT\"],\"357\":[\"CY\"],\"358\":[\"FI\",\"AX\"],\"359\":[\"BG\"],\"370\":[\"LT\"],\"371\":[\"LV\"],\"372\":[\"EE\"],\"373\":[\"MD\"],\"374\":[\"AM\"],\"375\":[\"BY\"],\"376\":[\"AD\"],\"377\":[\"MC\"],\"378\":[\"SM\"],\"380\":[\"UA\"],\"381\":[\"RS\"],\"382\":[\"ME\"],\"385\":[\"HR\"],\"386\":[\"SI\"],\"387\":[\"BA\"],\"389\":[\"MK\"],\"420\":[\"CZ\"],\"421\":[\"SK\"],\"423\":[\"LI\"],\"500\":[\"FK\"],\"501\":[\"BZ\"],\"502\":[\"GT\"],\"503\":[\"SV\"],\"504\":[\"HN\"],\"505\":[\"NI\"],\"506\":[\"CR\"],\"507\":[\"PA\"],\"508\":[\"PM\"],\"509\":[\"HT\"],\"590\":[\"GP\",\"BL\",\"MF\"],\"591\":[\"BO\"],\"592\":[\"GY\"],\"593\":[\"EC\"],\"594\":[\"GF\"],\"595\":[\"PY\"],\"596\":[\"MQ\"],\"597\":[\"SR\"],\"598\":[\"UY\"],\"599\":[\"CW\",\"BQ\"],\"670\":[\"TL\"],\"672\":[\"NF\"],\"673\":[\"BN\"],\"674\":[\"NR\"],\"675\":[\"PG\"],\"676\":[\"TO\"],\"677\":[\"SB\"],\"678\":[\"VU\"],\"679\":[\"FJ\"],\"680\":[\"PW\"],\"681\":[\"WF\"],\"682\":[\"CK\"],\"683\":[\"NU\"],\"685\":[\"WS\"],\"686\":[\"KI\"],\"687\":[\"NC\"],\"688\":[\"TV\"],\"689\":[\"PF\"],\"690\":[\"TK\"],\"691\":[\"FM\"],\"692\":[\"MH\"],\"800\":[\"001\"],\"808\":[\"001\"],\"850\":[\"KP\"],\"852\":[\"HK\"],\"853\":[\"MO\"],\"855\":[\"KH\"],\"856\":[\"LA\"],\"870\":[\"001\"],\"878\":[\"001\"],\"880\":[\"BD\"],\"881\":[\"001\"],\"882\":[\"001\"],\"883\":[\"001\"],\"886\":[\"TW\"],\"888\":[\"001\"],\"960\":[\"MV\"],\"961\":[\"LB\"],\"962\":[\"JO\"],\"963\":[\"SY\"],\"964\":[\"IQ\"],\"965\":[\"KW\"],\"966\":[\"SA\"],\"967\":[\"YE\"],\"968\":[\"OM\"],\"970\":[\"PS\"],\"971\":[\"AE\"],\"972\":[\"IL\"],\"973\":[\"BH\"],\"974\":[\"QA\"],\"975\":[\"BT\"],\"976\":[\"MN\"],\"977\":[\"NP\"],\"979\":[\"001\"],\"992\":[\"TJ\"],\"993\":[\"TM\"],\"994\":[\"AZ\"],\"995\":[\"GE\"],\"996\":[\"KG\"],\"998\":[\"UZ\"]},\"countries\":{\"AC\":[\"247\",\"[46]\\\\d{4}|[01589]\\\\d{5}\"],\"AD\":[\"376\",\"[16]\\\\d{5,8}|[37-9]\\\\d{5}\",[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"[137-9]|6[0-8]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"180\",\"180[02]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"690\"]]]],\"AE\":[\"971\",\"[2-79]\\\\d{7,8}|800\\\\d{2,9}\",[[\"([2-4679])(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-4679][2-8]\"]],[\"(5\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"5\"]],[\"([479]00)(\\\\d)(\\\\d{5})\",\"$1 $2 $3\",[\"[479]00\"],\"$1\"],[\"([68]00)(\\\\d{2,9})\",\"$1 $2\",[\"[68]00\"],\"$1\"]],\"0\",\"0$1\"],\"AF\":[\"93\",\"[2-7]\\\\d{8}\",[[\"([2-7]\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-7]\"]]],\"0\",\"0$1\"],\"AG\":[\"1\",\"[2589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"268\"],\"AI\":[\"1\",\"[2589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"264\"],\"AL\":[\"355\",\"[2-57]\\\\d{7}|6\\\\d{8}|8\\\\d{5,7}|9\\\\d{5}\",[[\"(4)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"4[0-6]\"]],[\"(6\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"6\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2358][2-5]|4[7-9]\"]],[\"(\\\\d{3})(\\\\d{3,5})\",\"$1 $2\",[\"[235][16-9]|[79]|8[016-9]\"]]],\"0\",\"0$1\"],\"AM\":[\"374\",\"[1-9]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"1|47\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"4[1349]|[5-7]|88|9[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[23]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"8|90\"],\"0 $1\"]],\"0\",\"(0$1)\"],\"AO\":[\"244\",\"[29]\\\\d{8}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\"]]],\"AR\":[\"54\",\"11\\\\d{8}|[2368]\\\\d{9}|9\\\\d{10}\",[[\"([68]\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[68]\"]],[\"(9)(11)(\\\\d{4})(\\\\d{4})\",\"$2 15-$3-$4\",[\"911\"],null,null,\"$1 $2 $3-$4\"],[\"(9)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$2 15-$3-$4\",[\"9(?:2[2-4689]|3[3-8])\",\"9(?:2(?:2[013]|3[067]|49|6[01346]|8|9[147-9])|3(?:36|4[1-358]|5[138]|6|7[069]|8[013578]))\",\"9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[4-6]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))\",\"9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1-39])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))\"],null,null,\"$1 $2 $3-$4\"],[\"(9)(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$2 15-$3-$4\",[\"9[23]\"],null,null,\"$1 $2 $3-$4\"],[\"(11)(\\\\d{4})(\\\\d{4})\",\"$1 $2-$3\",[\"11\"],null,\"true\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2-$3\",[\"2(?:2[013]|3[067]|49|6[01346]|8|9[147-9])|3(?:36|4[1-358]|5[138]|6|7[069]|8[013578])\",\"2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[4-6]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))\",\"2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1-39])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))\"],null,\"true\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$1 $2-$3\",[\"[23]\"],null,\"true\"]],\"0\",\"0$1\",\"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))?15)?\",\"9$1\"],\"AS\":[\"1\",\"[5689]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"684\"],\"AT\":[\"43\",\"[1-9]\\\\d{3,12}\",[[\"(116\\\\d{3})\",\"$1\",[\"116\"],\"$1\"],[\"(1)(\\\\d{3,12})\",\"$1 $2\",[\"1\"]],[\"(5\\\\d)(\\\\d{3,5})\",\"$1 $2\",[\"5[079]\"]],[\"(5\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"5[079]\"]],[\"(5\\\\d)(\\\\d{4})(\\\\d{4,7})\",\"$1 $2 $3\",[\"5[079]\"]],[\"(\\\\d{3})(\\\\d{3,10})\",\"$1 $2\",[\"(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:[28]0|32)|[89]\"]],[\"(\\\\d{4})(\\\\d{3,9})\",\"$1 $2\",[\"2|3(?:1[1-578]|[3-8])|4[2378]|5[2-6]|6(?:[12]|4[1-9]|5[468])|7(?:[24][1-8]|35|[5-79])\"]]],\"0\",\"0$1\"],\"AU\":[\"61\",\"1\\\\d{4,9}|[2-578]\\\\d{8}\",[[\"([2378])(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[2378]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"14|[45]\"],\"0$1\"],[\"(16)(\\\\d{3,4})\",\"$1 $2\",[\"16\"],\"0$1\"],[\"(16)(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"16\"],\"0$1\"],[\"(1[389]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[389]0\",\"1(?:[38]0|9)0\"]],[\"(180)(2\\\\d{3})\",\"$1 $2\",[\"180\",\"1802\"]],[\"(19\\\\d)(\\\\d{3})\",\"$1 $2\",[\"19[13]\"]],[\"(19\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"19[679]\"]],[\"(13)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"13[1-9]\"]]],\"0\",null,null,null,null,null,[\"[237]\\\\d{8}|8(?:51(?:0(?:0[03-9]|[1247]\\\\d|3[2-9]|5[0-8]|6[1-9]|8[0-6])|1(?:1[69]|[23]\\\\d|4[0-4]))|[6-8]\\\\d{4}|9(?:[02-9]\\\\d{3}|1(?:[0-57-9]\\\\d{2}|6[0135-9]\\\\d)))\\\\d{3}\",\"14(?:5\\\\d|71)\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[12457-9]|9[017-9])\\\\d{6}\",\"180(?:0\\\\d{3}|2)\\\\d{3}\",\"19(?:0[0126]\\\\d|[679])\\\\d{5}\",\"500\\\\d{6}\",null,null,\"16\\\\d{3,7}\",\"550\\\\d{6}\",\"13(?:00\\\\d{3}|45[0-4]|\\\\d)\\\\d{3}\"]],\"AW\":[\"297\",\"[25-9]\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\"]]],\"AX\":[\"358\",\"[13]\\\\d{5,9}|2\\\\d{4,9}|4\\\\d{6,10}|5\\\\d{6,9}|[67]\\\\d{7,9}|8\\\\d{7,8}\",[[\"(\\\\d{3})(\\\\d{3,7})\",\"$1 $2\",[\"(?:[1-3]0|[6-8])0\"]],[\"(116\\\\d{3})\",\"$1\",[\"116\"],\"$1\"],[\"(\\\\d{2})(\\\\d{3,9})\",\"$1 $2\",[\"1(?:0[1-9]|[3-9])|2(?:0[1-9]|9)|30[1-9]|4|50|7(?:[13]|5[03-9])\"]],[\"(\\\\d)(\\\\d{4})\",\"$1 $2\",[\"9[1-8]\"]],[\"(\\\\d)(\\\\d{5,9})\",\"$1 $2\",[\"[235689][1-8]\"]],[\"(39\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"39\"]]],\"0\",null,null,null,null,null,[\"18[1-8]\\\\d{4,6}\",\"4(?:[0-8]\\\\d{5,8}|9\\\\d{9})|50\\\\d{6,8}\",\"800\\\\d{5,6}\",\"[67]00\\\\d{5,6}\",null,null,\"10(?:0\\\\d{4,6}|[1-37-9]\\\\d{5,7}|[46]\\\\d{3,7}|5\\\\d{4,7})|2(?:0(?:0\\\\d{4,6}|[1346-8]\\\\d{5,7}|2(?:[023]\\\\d{4,5}|[14-9]\\\\d{4,6})|5(?:\\\\d{3}|\\\\d{5,7})|9(?:[0-7]\\\\d{4,6}|[89]\\\\d{1,6}))|9\\\\d{5,8})|3(?:0(?:0\\\\d{3,7}|[1-57-9]\\\\d{5,7}|6(?:\\\\d{3}|\\\\d{5,7}))|44\\\\d{3}|93\\\\d{5,7})|60(?:[12]\\\\d{5,6}|6\\\\d{7})|7(?:1\\\\d{7}|3\\\\d{8}|5[03-9]\\\\d{5,6})\"]],\"AZ\":[\"994\",\"[1-9]\\\\d{8}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[28]|2(?:[0-36]|[45]2)|365\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[4-8]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"9\"],\"0$1\"]],\"0\",\"(0$1)\"],\"BA\":[\"387\",\"[3-9]\\\\d{7,8}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2-$3\",[\"[3-5]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6[1-356]|[7-9]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"6[047]\"]]],\"0\",\"0$1\"],\"BB\":[\"1\",\"[2589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"246\"],\"BD\":[\"880\",\"[2-79]\\\\d{5,9}|1\\\\d{9}|8[0-7]\\\\d{4,8}\",[[\"(2)(\\\\d{7,8})\",\"$1-$2\",[\"2\"]],[\"(\\\\d{2})(\\\\d{4,6})\",\"$1-$2\",[\"[3-79]1\"]],[\"(\\\\d{4})(\\\\d{3,6})\",\"$1-$2\",[\"1|3(?:0|[2-58]2)|4(?:0|[25]2|3[23]|[4689][25])|5(?:[02-578]2|6[25])|6(?:[0347-9]2|[26][25])|7[02-9]2|8(?:[023][23]|[4-7]2)|9(?:[02][23]|[458]2|6[016])\"]],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1-$2\",[\"[3-79][2-9]|8\"]]],\"0\",\"0$1\"],\"BE\":[\"32\",\"[1-9]\\\\d{7,8}\",[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"4[6-9]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[23]|4[23]|9[2-4]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[156]|7[018]|8(?:0[1-9]|[1-79])\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:80|9)0\"]]],\"0\",\"0$1\"],\"BF\":[\"226\",\"[25-7]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\"]]],\"BG\":[\"359\",\"[23567]\\\\d{5,7}|[489]\\\\d{6,8}\",[[\"(2)(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"2\"]],[\"(2)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"43[124-7]|70[1-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3\",[\"43[124-7]|70[1-9]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[78]00\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"99[69]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"48|8[7-9]|9[08]\"]]],\"0\",\"0$1\"],\"BH\":[\"973\",\"[136-9]\\\\d{7}\",[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\"]]],\"BI\":[\"257\",\"[267]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\"]]],\"BJ\":[\"229\",\"[2689]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2689]\"]]]],\"BL\":[\"590\",\"[56]\\\\d{8}\",[[\"([56]90)(\\\\d{2})(\\\\d{4})\",\"$1 $2-$3\",[\"[56]90\"]]],\"0\",null,null,null,null,null,[\"590(?:2[7-9]|5[12]|87)\\\\d{4}\",\"690(?:0[05-9]|[1-9]\\\\d)\\\\d{4}\"]],\"BM\":[\"1\",\"[4589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"441\"],\"BN\":[\"673\",\"[2-578]\\\\d{6}\",[[\"([2-578]\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"[2-578]\"]]]],\"BO\":[\"591\",\"[23467]\\\\d{7}|8\\\\d{8}\",[[\"([234])(\\\\d{7})\",\"$1 $2\",[\"[2-4]\"]],[\"([67]\\\\d{7})\",\"$1\",[\"[67]\"]],[\"(800)(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"800\"]]],\"0\",null,\"0(1\\\\d)?\"],\"BQ\":[\"599\",\"[347]\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[13-7]\"]],[\"(9)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"]]],null,null,null,null,null,null,[\"(?:318[023]|41(?:6[023]|70)|7(?:1[578]|50)\\\\d)\\\\d{3}\",\"(?:31(?:8[14-8]|9[14578])|416[145-9]|7(?:0[01]|7[07]|8\\\\d|9[056])\\\\d)\\\\d{3}\"]],\"BR\":[\"55\",\"[1-46-9]\\\\d{7,10}|5(?:[0-4]\\\\d{7,9}|5(?:[2-8]\\\\d{7}|9\\\\d{7,8}))\",[[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"300|40[02]\",\"300|40(?:0|20)\"]],[\"([3589]00)(\\\\d{2,3})(\\\\d{4})\",\"$1 $2 $3\",[\"[3589]00\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2-$3\",[\"[1-9][1-9]\"],\"($1)\"],[\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\",\"$1 $2-$3\",[\"[1-9][1-9]9\"],\"($1)\"]],\"0\",null,\"0(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\\\d{10,11}))?\",\"$2\"],\"BS\":[\"1\",\"[2589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"242\"],\"BT\":[\"975\",\"[1-8]\\\\d{6,7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1|77\"]],[\"([2-8])(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-68]|7[246]\"]]]],\"BW\":[\"267\",\"[2-79]\\\\d{6,7}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-6]\"]],[\"(7\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"]],[\"(90)(\\\\d{5})\",\"$1 $2\",[\"90\"]]]],\"BY\":[\"375\",\"[1-4]\\\\d{8}|8(?:0(?:0\\\\d{3,7}|[13]\\\\d{7})|(?:10|20\\\\d)\\\\d{7})|9\\\\d{9,10}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"17[0-3589]|2[4-9]|[34]\",\"17(?:[02358]|1[0-2]|9[0189])|2[4-9]|[34]\"],\"8 0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"1(?:5[24]|6[235]|7[467])|2(?:1[246]|2[25]|3[26])\",\"1(?:5[24]|6(?:2|3[04-9]|5[0346-9])|7(?:[46]|7[37-9]))|2(?:1[246]|2[25]|3[26])\"],\"8 0$1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{3})\",\"$1 $2-$3\",[\"1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])\",\"1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])\"],\"8 0$1\"],[\"([89]\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8[01]|9\"],\"8 $1\"],[\"(82\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"82\"],\"8 $1\"],[\"(800)(\\\\d{3})\",\"$1 $2\",[\"800\"],\"8 $1\"],[\"(800)(\\\\d{2})(\\\\d{2,4})\",\"$1 $2 $3\",[\"800\"],\"8 $1\"]],\"8\",null,\"8?0?\"],\"BZ\":[\"501\",\"[2-8]\\\\d{6}|0\\\\d{10}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[2-8]\"]],[\"(0)(800)(\\\\d{4})(\\\\d{3})\",\"$1-$2-$3-$4\",[\"080\",\"0800\"]]]],\"CA\":[\"1\",\"[2-9]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,null,[\"(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|65)|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:0[04]|13|22|39|47)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}\",null,\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",\"900[2-9]\\\\d{6}\",\"5(?:00|22|33|44|66|77|88)[2-9]\\\\d{6}\"]],\"CC\":[\"61\",\"[1458]\\\\d{5,9}\",[[\"([2378])(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[2378]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"14|[45]\"],\"0$1\"],[\"(16)(\\\\d{3,4})\",\"$1 $2\",[\"16\"],\"0$1\"],[\"(16)(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"16\"],\"0$1\"],[\"(1[389]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[389]0\",\"1(?:[38]0|9)0\"]],[\"(180)(2\\\\d{3})\",\"$1 $2\",[\"180\",\"1802\"]],[\"(19\\\\d)(\\\\d{3})\",\"$1 $2\",[\"19[13]\"]],[\"(19\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"19[679]\"]],[\"(13)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"13[1-9]\"]]],\"0\",null,null,null,null,null,[\"89162\\\\d{4}\",\"14(?:5\\\\d|71)\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[12547-9]|9[017-9])\\\\d{6}\",\"180(?:0\\\\d{3}|2)\\\\d{3}\",\"19(?:0[0126]\\\\d|[679])\\\\d{5}\",\"500\\\\d{6}\",null,null,null,\"550\\\\d{6}\",\"13(?:00\\\\d{2})?\\\\d{4}\"]],\"CD\":[\"243\",\"[2-6]\\\\d{6}|[18]\\\\d{6,8}|9\\\\d{8}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"12\"]],[\"([89]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8[0-2459]|9\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"88\"]],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[1-6]\"]]],\"0\",\"0$1\"],\"CF\":[\"236\",\"[278]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\"]]],\"CG\":[\"242\",\"[028]\\\\d{8}\",[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"801\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[02]\"]],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"800\"]]]],\"CH\":[\"41\",\"[2-9]\\\\d{8}|860\\\\d{9}\",[[\"([2-9]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-7]|[89]1\"]],[\"([89]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8[047]|90\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"860\"]]],\"0\",\"0$1\"],\"CI\":[\"225\",\"[02-8]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\"]]],\"CK\":[\"682\",\"[2-8]\\\\d{4}\",[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\"]]],\"CL\":[\"56\",\"1230\\\\d{7}|[2-46-9]\\\\d{8,10}|5[1-3578]\\\\d{7}\",[[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[23]\"],\"($1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[357]|4[1-35]|6[13-57]\"],\"($1)\"],[\"(9)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"]],[\"(44)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"44\"]],[\"([68]00)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[68]00\"],\"$1\"],[\"(600)(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"600\"],\"$1\"],[\"(1230)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"123\",\"1230\"],\"$1\"],[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"219\"],\"($1)\"]],\"0\",\"0$1\",\"0|(1(?:1[0-69]|2[0-57]|5[13-58]|69|7[0167]|8[018]))\"],\"CM\":[\"237\",\"[2368]\\\\d{7,8}\",[[\"([26])(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"[26]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[23]|88\"]]]],\"CN\":[\"86\",\"[1-7]\\\\d{6,11}|8[0-357-9]\\\\d{6,9}|9\\\\d{7,10}\",[[\"(80\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"80[26-8]\"],\"0$1\",\"true\"],[\"([48]00)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[48]00\"]],[\"(\\\\d{2})(\\\\d{5,6})\",\"$1 $2\",[\"(?:10|2\\\\d)[19]\",\"(?:10|2\\\\d)(?:10|9[56])\",\"(?:10|2\\\\d)(?:100|9[56])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"[3-9]\",\"[3-9]\\\\d\\\\d[19]\",\"[3-9]\\\\d\\\\d(?:10|9[56])\"],\"0$1\"],[\"(21)(\\\\d{4})(\\\\d{4,6})\",\"$1 $2 $3\",[\"21\"],\"0$1\",\"true\"],[\"([12]\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"10[1-9]|2[02-9]\",\"10[1-9]|2[02-9]\",\"10(?:[1-79]|8(?:0[1-9]|[1-9]))|2[02-9]\"],\"0$1\",\"true\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"3(?:1[02-9]|35|49|5|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|[35][2-9]|6[47-9]|7|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[04-9]|4[3-6]|6[2368])|8(?:1[236-8]|2[5-7]|3|5[1-9]|7[02-9]|8[36-8]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])\"],\"0$1\",\"true\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"3(?:11|7[179])|4(?:[15]1|3[1-35])|5(?:1|2[37]|3[12]|51|7[13-79]|9[15])|7(?:[39]1|5[457]|6[09])|8(?:[57]1|98)\"],\"0$1\",\"true\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"807\",\"8078\"],\"0$1\",\"true\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:[3-57-9]|66)\"]],[\"(10800)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"108\",\"1080\",\"10800\"]],[\"(\\\\d{3})(\\\\d{7,8})\",\"$1 $2\",[\"950\"]]],\"0\",null,\"(1(?:[129]\\\\d{3}|79\\\\d{2}))|0\"],\"CO\":[\"57\",\"(?:[13]\\\\d{0,3}|[24-8])\\\\d{7}\",[[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"1(?:[2-7]|8[2-9]|9[0-3])|[24-8]\",\"1(?:[2-7]|8[2-9]|9(?:09|[1-3]))|[24-8]\"],\"($1)\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"3\"]],[\"(1)(\\\\d{3})(\\\\d{7})\",\"$1-$2-$3\",[\"1(?:80|9[04])\",\"1(?:800|9(?:0[01]|4[78]))\"],\"0$1\",null,\"$1 $2 $3\"]],\"0\",null,\"0([3579]|4(?:44|56))?\"],\"CR\":[\"506\",\"[24-9]\\\\d{7,9}\",[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[24-7]|8[3-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[89]0\"]]],null,null,\"(19(?:0[012468]|1[09]|20|66|77|99))\"],\"CU\":[\"53\",\"[2-57]\\\\d{5,7}\",[[\"(\\\\d)(\\\\d{6,7})\",\"$1 $2\",[\"7\"]],[\"(\\\\d{2})(\\\\d{4,6})\",\"$1 $2\",[\"[2-4]\"]],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"5\"],\"0$1\"]],\"0\",\"(0$1)\"],\"CV\":[\"238\",\"[259]\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\"]]],\"CW\":[\"599\",\"[134679]\\\\d{6,7}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[13-7]\"]],[\"(9)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"]]],null,null,null,null,null,null,[\"9(?:[48]\\\\d{2}|50\\\\d|7(?:2[0-24]|[34]\\\\d|6[35-7]|77|8[7-9]))\\\\d{4}\",\"9(?:5(?:[12467]\\\\d|3[01])|6(?:[15-9]\\\\d|3[01]))\\\\d{4}\",null,null,null,null,null,\"955\\\\d{5}\",null,\"60[0-2]\\\\d{4}\"]],\"CX\":[\"61\",\"[1458]\\\\d{5,9}\",[[\"([2378])(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[2378]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"14|[45]\"],\"0$1\"],[\"(16)(\\\\d{3,4})\",\"$1 $2\",[\"16\"],\"0$1\"],[\"(16)(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"16\"],\"0$1\"],[\"(1[389]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[389]0\",\"1(?:[38]0|9)0\"]],[\"(180)(2\\\\d{3})\",\"$1 $2\",[\"180\",\"1802\"]],[\"(19\\\\d)(\\\\d{3})\",\"$1 $2\",[\"19[13]\"]],[\"(19\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"19[679]\"]],[\"(13)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"13[1-9]\"]]],\"0\",null,null,null,null,null,[\"89164\\\\d{4}\",\"14(?:5\\\\d|71)\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[12547-9]|9[017-9])\\\\d{6}\",\"180(?:0\\\\d{3}|2)\\\\d{3}\",\"19(?:0[0126]\\\\d|[679])\\\\d{5}\",\"500\\\\d{6}\",null,null,null,\"550\\\\d{6}\",\"13(?:00\\\\d{2})?\\\\d{4}\"]],\"CY\":[\"357\",\"[257-9]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\"]]],\"CZ\":[\"420\",\"[2-8]\\\\d{8}|9\\\\d{8,11}\",[[\"([2-9]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-8]|9[015-7]\"]],[\"(96\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"96\"]],[\"(9\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9[36]\"]]]],\"DE\":[\"49\",\"[1-35-9]\\\\d{3,14}|4(?:[0-8]\\\\d{3,12}|9(?:[0-37]\\\\d|4(?:[1-35-8]|4\\\\d?)|5\\\\d{1,2}|6[1-8]\\\\d?)\\\\d{2,8})\",[[\"(1\\\\d{2})(\\\\d{7,8})\",\"$1 $2\",[\"1[67]\"]],[\"(15\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"15[0568]\"]],[\"(1\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"15\"]],[\"(\\\\d{2})(\\\\d{3,11})\",\"$1 $2\",[\"3[02]|40|[68]9\"]],[\"(\\\\d{3})(\\\\d{3,11})\",\"$1 $2\",[\"2(?:0[1-389]|1[124]|2[18]|3[14]|[4-9]1)|3(?:[35-9][15]|4[015])|[4-8][1-9]1|9(?:06|[1-9]1)\"]],[\"(\\\\d{4})(\\\\d{2,11})\",\"$1 $2\",[\"[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|[7-9](?:0[1-9]|[1-9])\",\"[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|[46][1246]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|3[1357]|4[13578]|6[1246]|7[1356]|9[1346])|5(?:0[14]|2[1-3589]|3[1357]|[49][1246]|6[1-4]|7[1346]|8[13568])|6(?:0[356]|2[1-489]|3[124-6]|4[1347]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|3[1357]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|4[1347]|6[0135-9]|7[1467]|8[136])|9(?:0[12479]|2[1358]|3[1357]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|[7-9](?:0[1-9]|[1-9])\"]],[\"(3\\\\d{4})(\\\\d{1,10})\",\"$1 $2\",[\"3\"]],[\"(800)(\\\\d{7,12})\",\"$1 $2\",[\"800\"]],[\"(\\\\d{3})(\\\\d)(\\\\d{4,10})\",\"$1 $2 $3\",[\"1(?:37|80)|900\",\"1(?:37|80)|900[1359]\"]],[\"(1\\\\d{2})(\\\\d{5,11})\",\"$1 $2\",[\"181\"]],[\"(18\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"185\",\"1850\",\"18500\"]],[\"(18\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"18[68]\"]],[\"(18\\\\d)(\\\\d{8})\",\"$1 $2\",[\"18[2-579]\"]],[\"(700)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"700\"]],[\"(138)(\\\\d{4})\",\"$1 $2\",[\"138\"]],[\"(15[013-68])(\\\\d{2})(\\\\d{8})\",\"$1 $2 $3\",[\"15[013-68]\"]],[\"(15[279]\\\\d)(\\\\d{2})(\\\\d{7})\",\"$1 $2 $3\",[\"15[279]\"]],[\"(1[67]\\\\d)(\\\\d{2})(\\\\d{7,8})\",\"$1 $2 $3\",[\"1(?:6[023]|7)\"]]],\"0\",\"0$1\"],\"DJ\":[\"253\",\"[27]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\"]]],\"DK\":[\"45\",\"[2-9]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\"]]],\"DM\":[\"1\",\"[57-9]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"767\"],\"DO\":[\"1\",\"[589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"8[024]9\"],\"DZ\":[\"213\",\"(?:[1-4]|[5-9]\\\\d)\\\\d{7}\",[[\"([1-4]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[1-4]\"]],[\"([5-8]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-8]\"]],[\"(9\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"9\"]]],\"0\",\"0$1\"],\"EC\":[\"593\",\"1\\\\d{9,10}|[2-8]\\\\d{7}|9\\\\d{8}\",[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2-$3\",[\"[247]|[356][2-8]\"],null,null,\"$1-$2-$3\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(1800)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"180\",\"1800\"],\"$1\"]],\"0\",\"(0$1)\"],\"EE\":[\"372\",\"[3-9]\\\\d{6,7}|800\\\\d{6,7}\",[[\"([3-79]\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]\",\"[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]\"]],[\"(70)(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"70\"]],[\"(8000)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"800\",\"8000\"]],[\"([458]\\\\d{3})(\\\\d{3,4})\",\"$1 $2\",[\"40|5|8(?:00|[1-5])\",\"40|5|8(?:00[1-9]|[1-5])\"]]]],\"EG\":[\"20\",\"1\\\\d{4,9}|[24-6]\\\\d{8}|3\\\\d{7}|[89]\\\\d{8,9}\",[[\"(\\\\d)(\\\\d{7,8})\",\"$1 $2\",[\"[23]\"]],[\"(\\\\d{2})(\\\\d{6,7})\",\"$1 $2\",[\"1(?:3|5[239])|[4-6]|[89][2-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1[0-25]|[89]00\"]]],\"0\",\"0$1\"],\"EH\":[\"212\",\"[5-9]\\\\d{8}\",[[\"([5-7]\\\\d{2})(\\\\d{6})\",\"$1-$2\",[\"5(?:2[015-7]|3[0-4])|[67]\"]],[\"([58]\\\\d{3})(\\\\d{5})\",\"$1-$2\",[\"5(?:2[2-489]|3[5-9]|92)|892\",\"5(?:2(?:[2-48]|9[0-7])|3(?:[5-79]|8[0-7])|924)|892\"]],[\"(5\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"5(?:29|38)\",\"5(?:29|38)[89]\"]],[\"([5]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5(?:4[067]|5[03])\"]],[\"(8[09])(\\\\d{7})\",\"$1-$2\",[\"8(?:0|9[013-9])\"]]],\"0\",null,null,null,null,\"528[89]\"],\"ER\":[\"291\",\"[178]\\\\d{6}\",[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\"]],\"0\",\"0$1\"],\"ES\":[\"34\",\"[5-9]\\\\d{8}\",[[\"([89]00)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]00\"]],[\"([5-9]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[568]|[79][0-8]\"]]]],\"ET\":[\"251\",\"[1-59]\\\\d{8}\",[[\"([1-59]\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-59]\"]]],\"0\",\"0$1\"],\"FI\":[\"358\",\"1\\\\d{5,9}|2\\\\d{4,9}|[35]\\\\d{5,9}|4\\\\d{5,10}|6\\\\d{6,9}|7\\\\d{7,9}|8\\\\d{6,8}|9\\\\d{4,8}\",[[\"(\\\\d{3})(\\\\d{3,7})\",\"$1 $2\",[\"(?:[1-3]0|[6-8])0\"]],[\"(116\\\\d{3})\",\"$1\",[\"116\"],\"$1\"],[\"(\\\\d{2})(\\\\d{3,9})\",\"$1 $2\",[\"1(?:0[1-9]|[3-9])|2(?:0[1-9]|9)|30[1-9]|4|50|7(?:[13]|5[03-9])\"]],[\"(\\\\d)(\\\\d{4})\",\"$1 $2\",[\"9[1-8]\"]],[\"(\\\\d)(\\\\d{5,9})\",\"$1 $2\",[\"[235689][1-8]\"]],[\"(39\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"39\"]]],\"0\",\"0$1\",null,null,null,null,[\"1[3-79][1-8]\\\\d{4,6}|[23568][1-8]\\\\d{5,7}|9[1-8]\\\\d{3,7}\",\"4[0-8]\\\\d{5,8}|50\\\\d{4,8}\",\"800\\\\d{5,6}\",\"[67]00\\\\d{5,6}\",null,null,\"10(?:0\\\\d{4,6}|[1-37-9]\\\\d{5,7}|[46]\\\\d{3,7}|5\\\\d{4,7})|2(?:0(?:0\\\\d{4,6}|[1346-8]\\\\d{5,7}|2(?:[023]\\\\d{4,5}|[14-9]\\\\d{4,6})|5(?:\\\\d{3}|\\\\d{5,7})|9(?:[0-7]\\\\d{4,6}|[89]\\\\d{1,6}))|9\\\\d{5,8})|3(?:0(?:0\\\\d{3,7}|[1-57-9]\\\\d{5,7}|6(?:\\\\d{3}|\\\\d{5,7}))|44\\\\d{3}|93\\\\d{5,7})|60(?:[12]\\\\d{5,6}|6\\\\d{7})|7(?:1\\\\d{7}|3\\\\d{8}|5[03-9]\\\\d{5,6})\"]],\"FJ\":[\"679\",\"[2-9]\\\\d{6}|0\\\\d{10}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0\"]]]],\"FK\":[\"500\",\"[2-7]\\\\d{4}\"],\"FM\":[\"691\",\"[39]\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\"]]],\"FO\":[\"298\",\"[2-9]\\\\d{5}\",[[\"(\\\\d{6})\",\"$1\"]],null,null,\"(10(?:01|[12]0|88))\"],\"FR\":[\"33\",\"[1-9]\\\\d{8}\",[[\"([1-79])(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"[1-79]\"]],[\"(8\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0 $1\"]],\"0\",\"0$1\"],\"GA\":[\"241\",\"0?\\\\d{7}\",[[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-7]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"0\"]]]],\"GB\":[\"44\",\"\\\\d{7,10}\",[[\"(7\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"7(?:[1-57-9]|62)\",\"7(?:[1-57-9]|624)\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2|5[56]|7[06]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:[02-9]1|1)|3|9[018]\"]],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"1(?:38|5[23]|69|76|94)\",\"1(?:(?:38|69)7|5(?:24|39)|768|946)\",\"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"]],[\"(1\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"1\"]],[\"(800)(\\\\d{4})\",\"$1 $2\",[\"800\",\"8001\",\"80011\",\"800111\",\"8001111\"]],[\"(845)(46)(4\\\\d)\",\"$1 $2 $3\",[\"845\",\"8454\",\"84546\",\"845464\"]],[\"(8\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8(?:4[2-5]|7[0-3])\"]],[\"(80\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"80\"]],[\"(800)(\\\\d{6})\",\"$1 $2\",[\"800\"]]],\"0\",\"0$1\",null,null,null,null,[\"2(?:0[01378]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\\\d{7}|1(?:1(?:3[0-48]|[46][0-4]|5[0-26-9]|[78][0-49])|21[0-7]|31[0-8]|[4-69]1\\\\d)\\\\d{6}|1(?:2(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\\\d)|3(?:0\\\\d|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[28][02-57-9]|[37]\\\\d|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|2[024-9]|3[015689]|4[02-9]|5[03-9]|6\\\\d|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0124578])|7(?:0[0246-9]|2\\\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\\\d|8[02-9]|9[02569])|9(?:0[02-589]|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|8\\\\d|9[2-57]))\\\\d{6}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[345])))|3(?:638[2-5]|647[23]|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[123]))|5(?:24(?:3[2-79]|6\\\\d)|276\\\\d|6(?:26[06-9]|686))|6(?:06(?:4\\\\d|7[4-79])|295[567]|35[34]\\\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|955[0-4])|7(?:26(?:6[13-9]|7[0-7])|442\\\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\\\d|37(?:5[2-5]|8[239])|84(?:3[2-58]))|9(?:0(?:0(?:6[1-8]|85)|52\\\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\\\d{3}|176888[2-46-8]\\\\d{2}|16977[23]\\\\d{3}\",\"7(?:[1-3]\\\\d{3}|4(?:[0-46-9]\\\\d{2}|5(?:[0-689]\\\\d|7[0-57-9]))|5(?:0[0-8]|[13-9]\\\\d|2[0-35-9])\\\\d|7(?:0(?:0[01]|[1-9]\\\\d)|[1-7]\\\\d{2}|8[02-9]\\\\d|9[0-689]\\\\d)|8(?:[014-9]\\\\d|[23][0-8])\\\\d|9(?:[024-9]\\\\d{2}|1(?:[02-9]\\\\d|1[028])|3[0-689]\\\\d))\\\\d{5}\",\"80(?:0(?:1111|\\\\d{6,7})|8\\\\d{7})\",\"(?:87[123]|9(?:[01]\\\\d|8[2349]))\\\\d{7}\",\"70\\\\d{8}\",null,\"(?:3[0347]|55)\\\\d{8}\",\"76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}\",\"56\\\\d{8}\",\"8(?:4(?:5464\\\\d|[2-5]\\\\d{7})|70\\\\d{7})\"]],\"GD\":[\"1\",\"[4589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"473\"],\"GE\":[\"995\",\"[34578]\\\\d{8}\",[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[348]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5\"]]],\"0\"],\"GF\":[\"594\",\"[56]\\\\d{8}\",[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\"]],\"0\",\"0$1\"],\"GG\":[\"44\",\"[135789]\\\\d{6,9}\",[[\"(7\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"7(?:[1-57-9]|62)\",\"7(?:[1-57-9]|624)\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2|5[56]|7[06]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:[02-9]1|1)|3|9[018]\"]],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"1(?:38|5[23]|69|76|94)\",\"1(?:(?:38|69)7|5(?:24|39)|768|946)\",\"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"]],[\"(1\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"1\"]],[\"(800)(\\\\d{4})\",\"$1 $2\",[\"800\",\"8001\",\"80011\",\"800111\",\"8001111\"]],[\"(845)(46)(4\\\\d)\",\"$1 $2 $3\",[\"845\",\"8454\",\"84546\",\"845464\"]],[\"(8\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8(?:4[2-5]|7[0-3])\"]],[\"(80\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"80\"]],[\"(800)(\\\\d{6})\",\"$1 $2\",[\"800\"]]],\"0\",null,null,null,null,null,[\"1481[25-9]\\\\d{5}\",\"7(?:781\\\\d|839\\\\d|911[17])\\\\d{5}\",\"80(?:0(?:1111|\\\\d{6,7})|8\\\\d{7})\",\"(?:87[123]|9(?:[01]\\\\d|8[0-3]))\\\\d{7}\",\"70\\\\d{8}\",null,\"(?:3[0347]|55)\\\\d{8}\",\"76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}\",\"56\\\\d{8}\",\"8(?:4(?:5464\\\\d|[2-5]\\\\d{7})|70\\\\d{7})\"]],\"GH\":[\"233\",\"[235]\\\\d{8}|8\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[235]\"]],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"8\"]]],\"0\",\"0$1\"],\"GI\":[\"350\",\"[256]\\\\d{7}\",[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"2\"]]]],\"GL\":[\"299\",\"[1-689]\\\\d{5}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\"]]],\"GM\":[\"220\",\"[2-9]\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\"]]],\"GN\":[\"224\",\"[367]\\\\d{7,8}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"3\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[67]\"]]]],\"GP\":[\"590\",\"[56]\\\\d{8}\",[[\"([56]90)(\\\\d{2})(\\\\d{4})\",\"$1 $2-$3\",[\"[56]90\"]]],\"0\",\"0$1\",null,null,null,null,[\"590(?:0[13468]|1[012]|2[0-68]|3[28]|4[0-8]|5[579]|6[0189]|70|8[0-689]|9\\\\d)\\\\d{4}\",\"690(?:0[05-9]|[1-9]\\\\d)\\\\d{4}\"]],\"GQ\":[\"240\",\"[23589]\\\\d{8}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[235]\"]],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[89]\"]]]],\"GR\":[\"30\",\"[26-9]\\\\d{9}\",[[\"([27]\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"21|7\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2[2-9]1|[689]\"]],[\"(2\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"2[2-9][02-9]\"]]]],\"GT\":[\"502\",\"[2-7]\\\\d{7}|1[89]\\\\d{9}\",[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]]]],\"GU\":[\"1\",\"[5689]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"671\"],\"GW\":[\"245\",\"(?:4(?:0\\\\d{5}|4\\\\d{7})|9\\\\d{8})\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"44|9[5-7]\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"40\"]]]],\"GY\":[\"592\",\"[2-46-9]\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\"]]],\"HK\":[\"852\",\"[2-7]\\\\d{7}|8[0-3]\\\\d{6,7}|9\\\\d{4,10}\",[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]|[89](?:0[1-9]|[1-9])\"]],[\"(800)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"800\"]],[\"(900)(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"900\"]],[\"(900)(\\\\d{2,5})\",\"$1 $2\",[\"900\"]]]],\"HN\":[\"504\",\"[237-9]\\\\d{7}\",[[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\"]]],\"HR\":[\"385\",\"[1-7]\\\\d{5,8}|[89]\\\\d{6,8}\",[[\"(1)(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]],[\"([2-5]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-5]\"]],[\"(9\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"9\"]],[\"(6[01])(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"6[01]\"]],[\"([67]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[67]\"]],[\"(80[01])(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"80[01]\"]],[\"(80[01])(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"80[01]\"]]],\"0\",\"0$1\"],\"HT\":[\"509\",\"[2-489]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\"]]],\"HU\":[\"36\",\"[1-9]\\\\d{7,8}\",[[\"(1)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-9]\"]]],\"06\",\"($1)\"],\"ID\":[\"62\",\"(?:[1-79]\\\\d{6,10}|8\\\\d{7,11})\",[[\"(\\\\d{2})(\\\\d{5,8})\",\"$1 $2\",[\"2[124]|[36]1\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5,8})\",\"$1 $2\",[\"2[035-9]|[36][02-9]|[4579]\"],\"(0$1)\"],[\"(8\\\\d{2})(\\\\d{3,4})(\\\\d{3})\",\"$1-$2-$3\",[\"8[1-35-9]\"]],[\"(8\\\\d{2})(\\\\d{4})(\\\\d{4,5})\",\"$1-$2-$3\",[\"8[1-35-9]\"]],[\"(1)(500)(\\\\d{3})\",\"$1 $2 $3\",[\"150\",\"1500\"],\"$1\"],[\"(177)(\\\\d{6,8})\",\"$1 $2\",[\"177\"]],[\"(800)(\\\\d{5,7})\",\"$1 $2\",[\"800\"]],[\"(804)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"804\"]],[\"(80\\\\d)(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"80[79]\"]]],\"0\",\"0$1\"],\"IE\":[\"353\",\"[124-9]\\\\d{6,9}\",[[\"(1)(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"2[24-9]|47|58|6[237-9]|9[35-9]\"]],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"40[24]|50[45]\"]],[\"(48)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"48\"]],[\"(818)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"818\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[24-69]|7[14]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"76|8[35-9]\"],\"0$1\"],[\"(8\\\\d)(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"8[35-9]5\"],\"0$1\"],[\"(700)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"700\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1(?:5|8[059])\",\"1(?:5|8[059]0)\"],\"$1\"]],\"0\",\"(0$1)\"],\"IL\":[\"972\",\"1\\\\d{6,11}|[2-589]\\\\d{3}(?:\\\\d{3,6})?|6\\\\d{3}|7\\\\d{6,9}\",[[\"([2-489])(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[2-489]\"],\"0$1\"],[\"([57]\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[57]\"],\"0$1\"],[\"(153)(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"153\"]],[\"(1)([7-9]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3-$4\",[\"1[7-9]\"]],[\"(1255)(\\\\d{3})\",\"$1-$2\",[\"125\",\"1255\"]],[\"(1200)(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3\",[\"120\",\"1200\"]],[\"(1212)(\\\\d{2})(\\\\d{2})\",\"$1-$2-$3\",[\"121\",\"1212\"]],[\"(1599)(\\\\d{6})\",\"$1-$2\",[\"159\",\"1599\"]],[\"(151)(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3-$4\",[\"151\"]],[\"(\\\\d{4})\",\"*$1\",[\"[2-689]\"]]],\"0\"],\"IM\":[\"44\",\"[135789]\\\\d{6,9}\",[[\"(7\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"7(?:[1-57-9]|62)\",\"7(?:[1-57-9]|624)\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2|5[56]|7[06]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:[02-9]1|1)|3|9[018]\"]],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"1(?:38|5[23]|69|76|94)\",\"1(?:(?:38|69)7|5(?:24|39)|768|946)\",\"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"]],[\"(1\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"1\"]],[\"(800)(\\\\d{4})\",\"$1 $2\",[\"800\",\"8001\",\"80011\",\"800111\",\"8001111\"]],[\"(845)(46)(4\\\\d)\",\"$1 $2 $3\",[\"845\",\"8454\",\"84546\",\"845464\"]],[\"(8\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8(?:4[2-5]|7[0-3])\"]],[\"(80\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"80\"]],[\"(800)(\\\\d{6})\",\"$1 $2\",[\"800\"]]],\"0\",null,null,null,null,null,[\"1624[5-8]\\\\d{5}\",\"7(?:4576|[59]24\\\\d|624[0-4689])\\\\d{5}\",\"808162\\\\d{4}\",\"(?:872299|90[0167]624)\\\\d{4}\",\"70\\\\d{8}\",null,\"3(?:08162\\\\d|3\\\\d{5}|4(?:40[49]06|5624\\\\d)|7(?:0624\\\\d|2299\\\\d))\\\\d{3}|55\\\\d{8}\",null,\"56\\\\d{8}\",\"8(?:4(?:40[49]06|5624\\\\d)|70624\\\\d)\\\\d{3}\"]],\"IN\":[\"91\",\"008\\\\d{9}|1\\\\d{7,12}|[2-9]\\\\d{9,10}\",[[\"(\\\\d{8})\",\"$1\",[\"561\",\"5616\",\"56161\"],\"$1\"],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"6(?:[09]0|28|3[589])|7(?:[02-8]|19|9[037-9])|8(?:0[015-9]|[1-9])|9\",\"6(?:[09]0|28[0-2]|3(?:5[01]|[89]0))|7(?:[07]|19[0-5]|2(?:[0235-9]|[14][017-9])|3(?:[025-9]|[134][017-9])|4(?:[0-35689]|[47][017-9])|5(?:[02-46-9]|[15][017-9])|6(?:[02-9]|1[0-257-9])|8(?:[0-79]|8[0189])|9(?:[089]|31|7[02-9]))|8(?:0(?:[01589]|6[67]|7[02-9])|1(?:[0-57-9]|6[07-9])|2(?:[014][07-9]|[235-9])|3(?:[03-57-9]|[126][07-9])|[45]|6(?:[02457-9]|[136][07-9])|7(?:[078][07-9]|[1-69])|8(?:[0-25-9]|3[07-9]|4[047-9])|9(?:[02-9]|1[027-9]))|9\",\"6(?:[09]0|28[0-2]|3(?:5(?:0[0-6]|1)|[89]0))|7(?:0|19[0-5]|2(?:[0235-79]|[14][017-9]|8(?:[0-69]|[78][089]))|3(?:[05-8]|1(?:[0189]|7[5-9])|2(?:[0-49][089]|[5-8])|3[017-9]|4(?:[07-9]|11)|9(?:[01689]|[2-5][089]|7[0189]))|4(?:[056]|1(?:[0135-9]|[24][089])|[29](?:[0-7][089]|[89])|3(?:[0-8][089]|9)|[47](?:[089]|11|7[02-8])|8(?:[0-24-7][089]|[389]))|5(?:[0346-9]|[15][017-9]|2(?:[03-9]|[12][089]))|6(?:[0346-9]|1[0-257-9]|2(?:[0-4]|[5-9][089])|5(?:[0-367][089]|[4589]))|7(?:0(?:[02-9]|1[089])|[1-9])|8(?:[0-79]|8(?:0[0189]|11|8[013-9]|9))|9(?:[089]|313|7(?:[02-8]|9[07-9])))|8(?:0(?:[01589]|6[67]|7(?:[02-8]|9[05-9]))|1(?:[02-57-9]|1(?:[0-35-9]|4[0-46-9])|6(?:[089]|7[02-8]))|2(?:0(?:[089]|7[02])|[14](?:[089]|7[02-8])|[235-9])|3(?:[03-57-9]|1(?:[089]|7[02-6])|2(?:[09]|77|8[0-689])|6(?:[089]|7[02-7]))|[45]|6(?:[02457-9]|[136](?:[089]|7[02-8]))|7(?:0[07-9]|[1-69]|[78](?:[089]|7[02-8]))|8(?:[0-25-9]|3(?:[089]|7[02-8])|4(?:[0489]|7[02-68]))|9(?:[02-9]|1(?:[0289]|7[2-6])))|9\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"11|2[02]|33|4[04]|79[1-9]|80[2-46]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:2[0-249]|3[0-25]|4[145]|[59][14]|[68][1-9]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1|9[15])|6(?:12|[2-4]1|5[17]|6[13]|7[14]|80)|7(?:12|2[14]|3[134]|4[47]|5[15]|[67]1|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1(?:[23579]|[468][1-9])|[2-8]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"008\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"140\"],\"$1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"160\",\"1600\"],\"$1\"],[\"(\\\\d{4})(\\\\d{4,5})\",\"$1 $2\",[\"180\",\"1800\"],\"$1\"],[\"(\\\\d{4})(\\\\d{2,4})(\\\\d{4})\",\"$1 $2 $3\",[\"180\",\"1800\"],\"$1\"],[\"(\\\\d{4})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"186\",\"1860\"],\"$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"18[06]\"],\"$1\"]],\"0\",\"0$1\",null,null,true],\"IO\":[\"246\",\"3\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\"]]],\"IQ\":[\"964\",\"[1-7]\\\\d{7,9}\",[[\"(1)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"([2-6]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-6]\"]],[\"(7\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"]]],\"0\",\"0$1\"],\"IR\":[\"98\",\"[1-8]\\\\d{5,9}|9(?:[0-4]\\\\d{8}|9\\\\d{8})\",[[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-8]\"]],[\"(\\\\d{2})(\\\\d{4,5})\",\"$1 $2\",[\"[1-8]\"]],[\"(\\\\d{4,5})\",\"$1\",[\"96\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"9\"]]],\"0\",\"0$1\"],\"IS\":[\"354\",\"[4-9]\\\\d{6}|38\\\\d{7}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[4-9]\"]],[\"(3\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"3\"]]]],\"IT\":[\"39\",\"[01589]\\\\d{5,10}|3(?:[12457-9]\\\\d{8}|[36]\\\\d{7,9})\",[[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[26]|55\"]],[\"(0[26])(\\\\d{4})(\\\\d{5})\",\"$1 $2 $3\",[\"0[26]\"]],[\"(0[26])(\\\\d{4,6})\",\"$1 $2\",[\"0[26]\"]],[\"(0\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[13-57-9][0159]\"]],[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"0[13-57-9][0159]|8(?:03|4[17]|9[245])\",\"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|[45][0-4]))\"]],[\"(0\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0[13-57-9][2-46-8]\"]],[\"(0\\\\d{3})(\\\\d{2,6})\",\"$1 $2\",[\"0[13-57-9][2-46-8]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[13]|8(?:00|4[08]|9[59])\",\"[13]|8(?:00|4[08]|9(?:5[5-9]|9))\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"894\",\"894[5-9]\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"3\"]]],null,null,null,null,null,null,[\"0(?:[26]\\\\d{4,9}|(?:1(?:[0159]\\\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|3(?:[0159]\\\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|7(?:[0159]\\\\d|2[12]|3[1-7]|4[2346]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\\\d|2[34578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\\\d{2,7})\",\"3(?:[12457-9]\\\\d{8}|6\\\\d{7,8}|3\\\\d{7,9})\",\"80(?:0\\\\d{6}|3\\\\d{3})\",\"0878\\\\d{5}|1(?:44|6[346])\\\\d{6}|89(?:2\\\\d{3}|4(?:[0-4]\\\\d{2}|[5-9]\\\\d{4})|5(?:[0-4]\\\\d{2}|[5-9]\\\\d{6})|9\\\\d{6})\",\"1(?:78\\\\d|99)\\\\d{6}\",null,null,null,\"55\\\\d{8}\",\"84(?:[08]\\\\d{6}|[17]\\\\d{3})\"]],\"JE\":[\"44\",\"[135789]\\\\d{6,9}\",[[\"(7\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"7(?:[1-57-9]|62)\",\"7(?:[1-57-9]|624)\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2|5[56]|7[06]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:[02-9]1|1)|3|9[018]\"]],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"1(?:38|5[23]|69|76|94)\",\"1(?:(?:38|69)7|5(?:24|39)|768|946)\",\"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"]],[\"(1\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"1\"]],[\"(800)(\\\\d{4})\",\"$1 $2\",[\"800\",\"8001\",\"80011\",\"800111\",\"8001111\"]],[\"(845)(46)(4\\\\d)\",\"$1 $2 $3\",[\"845\",\"8454\",\"84546\",\"845464\"]],[\"(8\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8(?:4[2-5]|7[0-3])\"]],[\"(80\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"80\"]],[\"(800)(\\\\d{6})\",\"$1 $2\",[\"800\"]]],\"0\",null,null,null,null,null,[\"1534[0-24-8]\\\\d{5}\",\"7(?:509\\\\d|7(?:00[378]|97[7-9])|829\\\\d|937\\\\d)\\\\d{5}\",\"80(?:07(?:35|81)|8901)\\\\d{4}\",\"(?:871206|90(?:066[59]|1810|71(?:07|55)))\\\\d{4}\",\"701511\\\\d{4}\",null,\"3(?:0(?:07(?:35|81)|8901)|3\\\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))\\\\d{4}|55\\\\d{8}\",\"76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}\",\"56\\\\d{8}\",\"8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|70002)\\\\d{4}\"]],\"JM\":[\"1\",\"[589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"876\"],\"JO\":[\"962\",\"[235-9]\\\\d{7,8}\",[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2356]|87\"],\"(0$1)\"],[\"(7)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"7[457-9]\"]],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"70\"]],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"8[0158]|9\"]]],\"0\",\"0$1\"],\"JP\":[\"81\",\"[1-9]\\\\d{8,9}|00(?:[36]\\\\d{7,14}|7\\\\d{5,7}|8\\\\d{7})\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3\",[\"(?:12|57|99)0\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"800\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[2579]0|80[1-9]\"]],[\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\"$1-$2-$3\",[\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:49|80|9[16])\",\"1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[78]|96)|477|51[24]|636)|9(?:496|802|9(?:1[23]|69))\",\"1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[78]|96[2457-9])|477|51[24]|636[2-57-9])|9(?:496|802|9(?:1[23]|69))\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3\",[\"1(?:2[3-6]|3[3-9]|4[2-6]|5[2-8]|[68][2-7]|7[2-689]|9[1-578])|2(?:2[03-689]|3[3-58]|4[0-468]|5[04-8]|6[013-8]|7[06-9]|8[02-57-9]|9[13])|4(?:2[28]|3[689]|6[035-7]|7[05689]|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9[4-9])|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9[014-9])|8(?:2[49]|3[3-8]|4[5-8]|5[2-9]|6[35-9]|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9[3-7])\",\"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:[0468][2-9]|5[78]|7[2-4])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[4-7]|[89][2-8]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9[2-8])|3(?:[3-6][2-9]|7[2-6]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5[4-7]|6[2-9]|8[2-8]|9[236-9])|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3[34]|4[2-69]|[5-7]))\",\"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:[0468][2-9]|5[78]|7[2-4])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[4-7]|[89][2-8]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:20|[3578]|4[04-9]|6[56]))|3(?:[3-6][2-9]|7(?:[2-5]|6[0-59])|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))\",\"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:[0468][2-9]|5[78]|7[2-4])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[4-7]|[89][2-8]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:20|[3578]|4[04-9]|6(?:5[25]|60)))|3(?:[3-6][2-9]|7(?:[2-5]|6[0-59])|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"1|2(?:2[37]|5[5-9]|64|78|8[39]|91)|4(?:2[2689]|64|7[347])|5[2-589]|60|8(?:2[124589]|3[279]|[46-9])|9(?:[235-8]|93)\",\"1|2(?:2[37]|5(?:[57]|[68]0|9[19])|64|78|8[39]|917)|4(?:2(?:20|[68]|9[178])|64|7[347])|5[2-589]|60|8(?:2[124589]|3[279]|[46-9])|9(?:[235-8]|93[34])\",\"1|2(?:2[37]|5(?:[57]|[68]0|9(?:17|99))|64|78|8[39]|917)|4(?:2(?:20|[68]|9[178])|64|7[347])|5[2-589]|60|8(?:2[124589]|3[279]|[46-9])|9(?:[235-8]|93(?:31|4))\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3\",[\"2(?:[34]7|[56]9|74|9[14-79])|82|993\"]],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"3|4(?:2[09]|7[01])|6[1-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[2479][1-9]\"]]],\"0\",\"0$1\"],\"KE\":[\"254\",\"20\\\\d{6,7}|[4-9]\\\\d{6,9}\",[[\"(\\\\d{2})(\\\\d{5,7})\",\"$1 $2\",[\"[24-6]\"]],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"7\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[89]\"]]],\"0\",\"0$1\",\"005|0\"],\"KG\":[\"996\",\"[235-8]\\\\d{8,9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[25-7]|31[25]\"]],[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"3(?:1[36]|[2-9])\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d)(\\\\d{3})\",\"$1 $2 $3 $4\",[\"8\"]]],\"0\",\"0$1\"],\"KH\":[\"855\",\"[1-9]\\\\d{7,9}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"1\\\\d[1-9]|[2-9]\"],\"0$1\"],[\"(1[89]00)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[89]0\",\"1[89]00\"]]],\"0\"],\"KI\":[\"686\",\"[2458]\\\\d{4}|3\\\\d{4,7}|[67]\\\\d{7}\",[],null,null,\"0\"],\"KM\":[\"269\",\"[3478]\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\"]]],\"KN\":[\"1\",\"[589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"869\"],\"KP\":[\"850\",\"1\\\\d{9}|[28]\\\\d{7}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]],\"0\",\"0$1\"],\"KR\":[\"82\",\"00(?:3\\\\d{8,9}|7\\\\d{9,11})|[1-7]\\\\d{4,9}|8\\\\d{8}\",[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1-$2\",[\"(?:3[1-3]|[46][1-4]|5[1-5])1\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"1(?:5[246-9]|6[046-8]|8[03579])\",\"1(?:5(?:22|44|66|77|88|99)|6(?:[07]0|44|6[16]|88)|8(?:00|33|55|77|99))\"],\"$1\"],[\"(\\\\d{5})\",\"$1\",[\"1[016-9]1\",\"1[016-9]11\",\"1[016-9]114\"]],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1-$2-$3\",[\"2[1-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"60[2-9]|80\"]],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1-$2-$3\",[\"1[0-25-9]|(?:3[1-3]|[46][1-4]|5[1-5])[1-9]\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[57]0\"]]],\"0\",\"0$1\",\"0(8[1-46-8]|85\\\\d{2})?\"],\"KW\":[\"965\",\"[12569]\\\\d{6,7}\",[[\"(\\\\d{4})(\\\\d{3,4})\",\"$1 $2\",[\"[16]|2(?:[0-35-9]|4[0-35-9])|52[25]|9[024-9]\"]],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"244|5(?:[015]|6[56])\"]]]],\"KY\":[\"1\",\"[3589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"345\"],\"KZ\":[\"7\",\"(?:33\\\\d|7\\\\d{2}|80[089])\\\\d{7}\",[[\"([3489]\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[3489]\"]],[\"(7\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"]]],\"8\",null,null,null,null,null,[\"33622\\\\d{5}|7(?:1(?:0(?:[23]\\\\d|4[0-3]|59|63)|1(?:[23]\\\\d|4[0-79]|59)|2(?:[23]\\\\d|59)|3(?:2\\\\d|3[0-79]|4[0-35-9]|59)|4(?:[24]\\\\d|3[013-9]|5[1-9])|5(?:2\\\\d|3[1-9]|4[0-7]|59)|6(?:[234]\\\\d|5[19]|61)|72\\\\d|8(?:[27]\\\\d|3[1-46-9]|4[0-5]))|2(?:1(?:[23]\\\\d|4[46-9]|5[3469])|2(?:2\\\\d|3[0679]|46|5[12679])|3(?:[234]\\\\d|5[139])|4(?:2\\\\d|3[1235-9]|59)|5(?:[23]\\\\d|4[01246-8]|59|61)|6(?:2\\\\d|3[1-9]|4[0-4]|59)|7(?:[2379]\\\\d|40|5[279])|8(?:[23]\\\\d|4[0-3]|59)|9(?:2\\\\d|3[124578]|59)))\\\\d{5}\",\"7(?:0[012578]|47|6[02-4]|7[15-8]|85)\\\\d{7}\",\"800\\\\d{7}\",\"809\\\\d{7}\",\"808\\\\d{7}\",null,null,null,\"751\\\\d{7}\"]],\"LA\":[\"856\",\"[2-8]\\\\d{7,9}\",[[\"(20)(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"20\"]],[\"([2-8]\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2[13]|3[14]|[4-8]\"]],[\"(30)(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"30\"]]],\"0\",\"0$1\"],\"LB\":[\"961\",\"[13-9]\\\\d{6,7}\",[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]\"],\"0$1\"],[\"([7-9]\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"7(?:[01]|6[013-9]|8[89]|9[1-3])|[89][01]\"]]],\"0\"],\"LC\":[\"1\",\"[5789]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"758\"],\"LI\":[\"423\",\"6\\\\d{8}|[23789]\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[237-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6[56]\"]],[\"(69)(7\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"697\"]]],\"0\",null,\"0|10(?:01|20|66)\"],\"LK\":[\"94\",\"[1-9]\\\\d{8}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[1-689]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"]]],\"0\",\"0$1\"],\"LR\":[\"231\",\"2\\\\d{7,8}|[378]\\\\d{8}|4\\\\d{6}|5\\\\d{6,8}\",[[\"(2\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"]],[\"([4-5])(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[45]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[23578]\"]]],\"0\",\"0$1\"],\"LS\":[\"266\",\"[2568]\\\\d{7}\",[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\"]]],\"LT\":[\"370\",\"[3-9]\\\\d{7}\",[[\"([34]\\\\d)(\\\\d{6})\",\"$1 $2\",[\"37|4(?:1|5[45]|6[2-4])\"]],[\"([3-6]\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"3[148]|4(?:[24]|6[09])|528|6\"]],[\"([7-9]\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[7-9]\"],\"8 $1\"],[\"(5)(2\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"52[0-79]\"]]],\"8\",\"(8-$1)\",\"[08]\",null,true],\"LU\":[\"352\",\"[24-9]\\\\d{3,10}|3(?:[0-46-9]\\\\d{2,9}|5[013-9]\\\\d{1,8})\",[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"[2-5]|7[1-9]|[89](?:0[2-9]|[1-9])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[2-5]|7[1-9]|[89](?:0[2-9]|[1-9])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"20\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\"$1 $2 $3 $4\",[\"2(?:[0367]|4[3-8])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"20\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\"$1 $2 $3 $4 $5\",[\"2(?:[0367]|4[3-8])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,4})\",\"$1 $2 $3 $4\",[\"2(?:[12589]|4[12])|[3-5]|7[1-9]|8(?:0[2-9]|[1-9])|9(?:0[2-46-9]|[1-9])\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"70|80[01]|90[015]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]]],null,null,\"(15(?:0[06]|1[12]|35|4[04]|55|6[26]|77|88|99)\\\\d)\"],\"LV\":[\"371\",\"[2689]\\\\d{7}\",[[\"([2689]\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2689]\"]]]],\"LY\":[\"218\",\"[25679]\\\\d{8}\",[[\"([25-79]\\\\d)(\\\\d{7})\",\"$1-$2\",[\"[25-79]\"]]],\"0\",\"0$1\"],\"MA\":[\"212\",\"[5-9]\\\\d{8}\",[[\"([5-7]\\\\d{2})(\\\\d{6})\",\"$1-$2\",[\"5(?:2[015-7]|3[0-4])|[67]\"]],[\"([58]\\\\d{3})(\\\\d{5})\",\"$1-$2\",[\"5(?:2[2-489]|3[5-9]|92)|892\",\"5(?:2(?:[2-48]|9[0-7])|3(?:[5-79]|8[0-7])|924)|892\"]],[\"(5\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"5(?:29|38)\",\"5(?:29|38)[89]\"]],[\"([5]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5(?:4[067]|5[03])\"]],[\"(8[09])(\\\\d{7})\",\"$1-$2\",[\"8(?:0|9[013-9])\"]]],\"0\",\"0$1\",null,null,null,null,[\"5(?:2(?:[015-79]\\\\d|2[02-9]|3[2-57]|4[2-8]|8[235-7])\\\\d|3(?:[0-48]\\\\d|[57][2-9]|6[2-8]|9[3-9])\\\\d|4[067]\\\\d{2}|5[03]\\\\d{2})\\\\d{4}\",\"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:0[067]|6[1267]|7[07]))\\\\d{6}\",\"80\\\\d{7}\",\"89\\\\d{7}\",null,null,null,null,\"5924[01]\\\\d{4}\"]],\"MC\":[\"377\",\"[34689]\\\\d{7,8}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[39]\"],\"$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"4\"]],[\"(6)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"6\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3\",[\"8\"],\"$1\"]],\"0\",\"0$1\"],\"MD\":[\"373\",\"[235-9]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"22|3\"]],[\"([25-7]\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"2[13-9]|[5-7]\"]],[\"([89]\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[89]\"]]],\"0\",\"0$1\"],\"ME\":[\"382\",\"[2-9]\\\\d{7,8}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-57-9]|6[036-9]\"]]],\"0\",\"0$1\"],\"MF\":[\"590\",\"[56]\\\\d{8}\",[[\"([56]90)(\\\\d{2})(\\\\d{4})\",\"$1 $2-$3\",[\"[56]90\"]]],\"0\",null,null,null,null,null,[\"590(?:[02][79]|13|5[0-268]|[78]7)\\\\d{4}\",\"690(?:0[05-9]|[1-9]\\\\d)\\\\d{4}\"]],\"MG\":[\"261\",\"[23]\\\\d{8}\",[[\"([23]\\\\d)(\\\\d{2})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[23]\"]]],\"0\",\"0$1\"],\"MH\":[\"692\",\"[2-6]\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\"]],\"1\"],\"MK\":[\"389\",\"[2-578]\\\\d{7}\",[[\"(2)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"]],[\"([347]\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[347]\"]],[\"([58]\\\\d{2})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[58]\"]]],\"0\",\"0$1\"],\"ML\":[\"223\",\"[246-9]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[246-9]\"]]]],\"MM\":[\"95\",\"[178]\\\\d{5,7}|[24-6]\\\\d{5,8}|9(?:[279]\\\\d{0,2}|5|[34]\\\\d{1,2}|6(?:\\\\d{1,2})?|8(?:\\\\d{2})?)\\\\d{6}\",[[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"1|2[245]\"]],[\"(2)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"251\"]],[\"(\\\\d)(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"16|2\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"432|67|81\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[4-8]\"]],[\"(9)(\\\\d{3})(\\\\d{4,6})\",\"$1 $2 $3\",[\"9(?:2[0-4]|[35-9]|4[137-9])\"]],[\"(9)([34]\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"9(?:3[0-36]|4[0-57-9])\"]],[\"(9)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"92[56]\"]],[\"(9)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"93\"]]],\"0\",\"0$1\"],\"MN\":[\"976\",\"[12]\\\\d{7,9}|[57-9]\\\\d{7}\",[[\"([12]\\\\d)(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[12]1\"]],[\"([12]2\\\\d)(\\\\d{5,6})\",\"$1 $2\",[\"[12]2[1-3]\"]],[\"([12]\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[12](?:27|[3-5])\",\"[12](?:27|[3-5]\\\\d)2\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[57-9]\"],\"$1\"],[\"([12]\\\\d{4})(\\\\d{4,5})\",\"$1 $2\",[\"[12](?:27|[3-5])\",\"[12](?:27|[3-5]\\\\d)[4-9]\"]]],\"0\",\"0$1\"],\"MO\":[\"853\",\"[268]\\\\d{7}\",[[\"([268]\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[268]\"]]]],\"MP\":[\"1\",\"[5689]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"670\"],\"MQ\":[\"596\",\"[56]\\\\d{8}\",[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\"]],\"0\",\"0$1\"],\"MR\":[\"222\",\"[2-48]\\\\d{7}\",[[\"([2-48]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-48]\"]]]],\"MS\":[\"1\",\"[5689]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"664\"],\"MT\":[\"356\",\"[2357-9]\\\\d{7}\",[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\"]]],\"MU\":[\"230\",\"[2-9]\\\\d{6,7}\",[[\"([2-46-9]\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"[2-46-9]\"]],[\"(5\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"5\"]]]],\"MV\":[\"960\",\"[346-8]\\\\d{6,9}|9(?:00\\\\d{7}|\\\\d{6})\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[3467]|9(?:0[1-9]|[1-9])\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]00\"]]]],\"MW\":[\"265\",\"(?:1(?:\\\\d{2})?|[2789]\\\\d{2})\\\\d{6}\",[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]],[\"(2\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[17-9]\"]]],\"0\",\"0$1\"],\"MX\":[\"52\",\"[1-9]\\\\d{9,10}\",[[\"([358]\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"33|55|81\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2467]|3[0-2457-9]|5[089]|8[02-9]|9[0-35-9]\"]],[\"(1)([358]\\\\d)(\\\\d{4})(\\\\d{4})\",\"044 $2 $3 $4\",[\"1(?:33|55|81)\"],\"$1\",null,\"$1 $2 $3 $4\"],[\"(1)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"044 $2 $3 $4\",[\"1(?:[2467]|3[0-2457-9]|5[089]|8[2-9]|9[1-35-9])\"],\"$1\",null,\"$1 $2 $3 $4\"]],\"01\",\"01 $1\",\"0[12]|04[45](\\\\d{10})\",\"1$1\",true],\"MY\":[\"60\",\"[13-9]\\\\d{7,9}\",[[\"([4-79])(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"[4-79]\"],\"0$1\"],[\"(3)(\\\\d{4})(\\\\d{4})\",\"$1-$2 $3\",[\"3\"],\"0$1\"],[\"([18]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1-$2 $3\",[\"1[02-46-9][1-9]|8\"],\"0$1\"],[\"(1)([36-8]00)(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3-$4\",[\"1[36-8]0\",\"1[36-8]00\"]],[\"(11)(\\\\d{4})(\\\\d{4})\",\"$1-$2 $3\",[\"11\"],\"0$1\"],[\"(15[49])(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"15[49]\"],\"0$1\"]],\"0\"],\"MZ\":[\"258\",\"[28]\\\\d{7,8}\",[[\"([28]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2|8[2-7]\"]],[\"(80\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"80\"]]]],\"NA\":[\"264\",\"[68]\\\\d{7,8}\",[[\"(8\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8[1-35]\"]],[\"(6\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"6\"]],[\"(88)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"88\"]],[\"(870)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"870\"]]],\"0\",\"0$1\"],\"NC\":[\"687\",\"[2-57-9]\\\\d{5}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1.$2.$3\",[\"[2-46-9]|5[0-4]\"]]]],\"NE\":[\"227\",\"[0289]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"09|[289]\"]],[\"(08)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"08\"]]]],\"NF\":[\"672\",\"[13]\\\\d{5}\",[[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"1\"]],[\"(\\\\d)(\\\\d{5})\",\"$1 $2\",[\"3\"]]]],\"NG\":[\"234\",\"[1-6]\\\\d{5,8}|9\\\\d{5,9}|[78]\\\\d{5,13}\",[[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[12]|9(?:0[3-9]|[1-9])\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[3-6]|7(?:0[1-9]|[1-79])|8[2-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"70|8[01]|90[235-9]\"]],[\"([78]00)(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"[78]00\"]],[\"([78]00)(\\\\d{5})(\\\\d{5,6})\",\"$1 $2 $3\",[\"[78]00\"]],[\"(78)(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"78\"]]],\"0\",\"0$1\"],\"NI\":[\"505\",\"[125-8]\\\\d{7}\",[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\"]]],\"NL\":[\"31\",\"1\\\\d{4,8}|[2-7]\\\\d{8}|[89]\\\\d{6,9}\",[[\"([1-578]\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1[035]|2[0346]|3[03568]|4[0356]|5[0358]|7|8[4578]\"]],[\"([1-5]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"]],[\"(6)(\\\\d{8})\",\"$1 $2\",[\"6[0-57-9]\"]],[\"(66)(\\\\d{7})\",\"$1 $2\",[\"66\"]],[\"(14)(\\\\d{3,4})\",\"$1 $2\",[\"14\"],\"$1\"],[\"([89]0\\\\d)(\\\\d{4,7})\",\"$1 $2\",[\"[89]0\"]]],\"0\",\"0$1\"],\"NO\":[\"47\",\"0\\\\d{4}|[2-9]\\\\d{7}\",[[\"([489]\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[489]\"]],[\"([235-7]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[235-7]\"]]],null,null,null,null,null,null,[\"(?:2[1-4]|3[1-3578]|5[1-35-7]|6[1-4679]|7[0-8])\\\\d{6}\",\"(?:4[015-8]|5[89]|87|9\\\\d)\\\\d{6}\",\"80[01]\\\\d{5}\",\"82[09]\\\\d{5}\",\"880\\\\d{5}\",\"81[23]\\\\d{5}\",\"0\\\\d{4}|81(?:0(?:0[7-9]|1\\\\d)|5\\\\d{2})\\\\d{3}\",null,\"85[0-5]\\\\d{5}\",\"810(?:0[0-6]|[2-8]\\\\d)\\\\d{3}\"]],\"NP\":[\"977\",\"[1-8]\\\\d{7}|9(?:[1-69]\\\\d{6,8}|7[2-6]\\\\d{5,7}|8\\\\d{8})\",[[\"(1)(\\\\d{7})\",\"$1-$2\",[\"1[2-6]\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1-$2\",[\"1[01]|[2-8]|9(?:[1-69]|7[15-9])\"]],[\"(9\\\\d{2})(\\\\d{7})\",\"$1-$2\",[\"9(?:6[013]|7[245]|8)\"],\"$1\"]],\"0\",\"0$1\"],\"NR\":[\"674\",\"[458]\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\"]]],\"NU\":[\"683\",\"[1-5]\\\\d{3}\"],\"NZ\":[\"64\",\"6[235-9]\\\\d{6}|[2-57-9]\\\\d{7,9}\",[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"240|[346]|7[2-57-9]|9[1-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"21\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,5})\",\"$1 $2 $3\",[\"2(?:1[1-9]|[69]|7[0-35-9])|70|86\"]],[\"(2\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[028]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"90\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2(?:10|74)|5|[89]0\"]]],\"0\",\"0$1\"],\"OM\":[\"968\",\"(?:5|[279]\\\\d)\\\\d{6}|800\\\\d{5,6}\",[[\"(2\\\\d)(\\\\d{6})\",\"$1 $2\",[\"2\"]],[\"([79]\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[79]\"]],[\"([58]00)(\\\\d{4,6})\",\"$1 $2\",[\"[58]00\"]]]],\"PA\":[\"507\",\"[1-9]\\\\d{6,7}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[1-57-9]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"6\"]]]],\"PE\":[\"51\",\"[14-9]\\\\d{7,8}\",[[\"(1)(\\\\d{7})\",\"$1 $2\",[\"1\"]],[\"([4-8]\\\\d)(\\\\d{6})\",\"$1 $2\",[\"[4-7]|8[2-4]\"]],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"80\"]],[\"(9\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"$1\"]],\"0\",\"(0$1)\"],\"PF\":[\"689\",\"4\\\\d{5,7}|8\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"4[09]|8[79]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"44\"]]]],\"PG\":[\"675\",\"[1-9]\\\\d{6,7}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[13-689]|27\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"20|7\"]]]],\"PH\":[\"63\",\"1\\\\d{10,12}|2\\\\d{5,7}|[3-7]\\\\d{8}|8\\\\d{7,9}|9\\\\d{9}\",[[\"(2)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"(0$1)\"],[\"(2)(\\\\d{5})\",\"$1 $2\",[\"2\"],\"(0$1)\"],[\"(\\\\d{4})(\\\\d{4,6})\",\"$1 $2\",[\"3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|5(?:22|44)|642|8(?:62|8[245])\",\"3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))\"],\"(0$1)\"],[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"346|4(?:27|9[35])|883\",\"3469|4(?:279|9(?:30|56))|8834\"],\"(0$1)\"],[\"([3-8]\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-8]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"81|9\"],\"0$1\"],[\"(1800)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"180\",\"1800\"]],[\"(1800)(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"180\",\"1800\"]]],\"0\"],\"PK\":[\"92\",\"1\\\\d{8}|[2-8]\\\\d{5,11}|9(?:[013-9]\\\\d{4,10}|2\\\\d(?:111\\\\d{6}|\\\\d{3,7}))\",[[\"([89]00)(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3\",[\"[89]00\"],\"0$1\"],[\"(1\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"1\"],\"$1\"],[\"(\\\\d{2})(\\\\d{7,8})\",\"$1 $2\",[\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\"]],[\"(\\\\d{3})(\\\\d{6,7})\",\"$1 $2\",[\"2[349]|45|54|60|72|8[2-5]|9[2-469]\",\"(?:2[349]|45|54|60|72|8[2-5]|9[2-469])\\\\d[2-9]\"]],[\"(58\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"58[126]\"]],[\"(3\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"3\"],\"0$1\"],[\"(\\\\d{2})(111)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)1\",\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)11\",\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)111\"]],[\"(\\\\d{3})(111)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"2[349]|45|54|60|72|8[2-5]|9[2-9]\",\"(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\\\d1\",\"(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\\\d11\",\"(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\\\d111\"]]],\"0\",\"(0$1)\"],\"PL\":[\"48\",\"[1-57-9]\\\\d{6,8}|6\\\\d{5,8}\",[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"11[68]|64\"]],[\"(\\\\d{5})\",\"$1\",[\"19\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"64\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"26|39|45|5[0137]|6[0469]|7[02389]|8[08]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[14]|2[0-57-9]|3[2-4]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145]\"]]]],\"PM\":[\"508\",\"[45]\\\\d{5}\",[[\"([45]\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[45]\"]]],\"0\",\"0$1\"],\"PR\":[\"1\",\"[5789]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"787|939\"],\"PS\":[\"970\",\"1\\\\d{9}|[24589]\\\\d{7,8}\",[[\"([2489])(2\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[2489]2\"]],[\"(5[69]\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"5[69]\"]],[\"(1[78]00)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[78]0\",\"1[78]00\"],\"$1\"]],\"0\",\"0$1\"],\"PT\":[\"351\",\"[2-46-9]\\\\d{8}\",[[\"(2\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2[12]\"]],[\"([2-46-9]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2[3-9]|[346-9]\"]]]],\"PW\":[\"680\",\"[2-8]\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\"]]],\"PY\":[\"595\",\"5[0-5]\\\\d{4,7}|[2-46-9]\\\\d{5,8}\",[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"[2-9]0\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"9[1-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"870\",\"8700\"]],[\"(\\\\d{3})(\\\\d{4,5})\",\"$1 $2\",[\"[2-8][1-9]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-8][1-9]\"],\"0$1\"]],\"0\"],\"QA\":[\"974\",\"[2-8]\\\\d{6,7}\",[[\"([28]\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"[28]\"]],[\"([3-7]\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[3-7]\"]]]],\"RE\":[\"262\",\"[268]\\\\d{8}\",[[\"([268]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[268]\"]]],\"0\",\"0$1\",null,null,null,\"262|69|8\"],\"RO\":[\"40\",\"[23]\\\\d{5,8}|[7-9]\\\\d{8}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[23]1\"]],[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"[23]1\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[23][3-7]|[7-9]\"]],[\"(2\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"2[3-6]\"]]],\"0\",\"0$1\"],\"RS\":[\"381\",\"[126-9]\\\\d{4,11}|3(?:[0-79]\\\\d{3,10}|8[2-9]\\\\d{2,9})\",[[\"([23]\\\\d{2})(\\\\d{4,9})\",\"$1 $2\",[\"(?:2[389]|39)0\"]],[\"([1-3]\\\\d)(\\\\d{5,10})\",\"$1 $2\",[\"1|2(?:[0-24-7]|[389][1-9])|3(?:[0-8]|9[1-9])\"]],[\"(6\\\\d)(\\\\d{6,8})\",\"$1 $2\",[\"6\"]],[\"([89]\\\\d{2})(\\\\d{3,9})\",\"$1 $2\",[\"[89]\"]],[\"(7[26])(\\\\d{4,9})\",\"$1 $2\",[\"7[26]\"]],[\"(7[08]\\\\d)(\\\\d{4,9})\",\"$1 $2\",[\"7[08]\"]]],\"0\",\"0$1\"],\"RU\":[\"7\",\"[347-9]\\\\d{9}\",[[\"([3489]\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[3489]\"]],[\"(7\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"]]],\"8\",\"8 ($1)\",null,null,true,null,[\"(?:3(?:0[12]|4[1-35-79]|5[1-3]|65|8[1-58]|9[0145])|4(?:01|1[1356]|2[13467]|7[1-5]|8[1-7]|9[1-689])|8(?:1[1-8]|2[01]|3[13-6]|4[0-8]|5[15]|6[1-35-79]|7[1-37-9]))\\\\d{7}\",\"9\\\\d{9}\",\"80[04]\\\\d{7}\",\"80[39]\\\\d{7}\",\"808\\\\d{7}\"]],\"RW\":[\"250\",\"[027-9]\\\\d{7,8}\",[[\"(2\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"]],[\"([7-9]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[7-9]\"],\"0$1\"],[\"(0\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"0\"]]],\"0\"],\"SA\":[\"966\",\"1\\\\d{7,8}|(?:[2-467]|92)\\\\d{7}|5\\\\d{8}|8\\\\d{9}\",[[\"([1-467])(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-467]\"]],[\"(1\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1[1-467]\"]],[\"(5\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"5\"]],[\"(92\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"92\"],\"$1\"],[\"(800)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"800\"],\"$1\"],[\"(811)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"811\"]]],\"0\",\"0$1\"],\"SB\":[\"677\",\"[1-9]\\\\d{4,6}\",[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[7-9]\"]]]],\"SC\":[\"248\",\"[24689]\\\\d{5,6}\",[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[246]\"]]]],\"SD\":[\"249\",\"[19]\\\\d{8}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\"]],\"0\",\"0$1\"],\"SE\":[\"46\",\"[1-35-9]\\\\d{5,11}|4\\\\d{6,8}\",[[\"(8)(\\\\d{2,3})(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"8\"],null,null,\"$1 $2 $3 $4\"],[\"([1-69]\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"1[013689]|2[0136]|3[1356]|4[0246]|54|6[03]|90\"],null,null,\"$1 $2 $3 $4\"],[\"([1-469]\\\\d)(\\\\d{3})(\\\\d{2})\",\"$1-$2 $3\",[\"[12][136]|3[356]|4[0246]|6[03]|90\"],null,null,\"$1 $2 $3\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[0-5]|4[0-3])\"],null,null,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3\",[\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[0-5]|4[0-3])\"],null,null,\"$1 $2 $3\"],[\"(7\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"7\"],null,null,\"$1 $2 $3 $4\"],[\"(77)(\\\\d{2})(\\\\d{2})\",\"$1-$2$3\",[\"77\"],null,null,\"$1 $2 $3\"],[\"(20)(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3\",[\"20\"],null,null,\"$1 $2 $3\"],[\"(9[034]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1-$2 $3 $4\",[\"9[034]\"],null,null,\"$1 $2 $3 $4\"],[\"(9[034]\\\\d)(\\\\d{4})\",\"$1-$2\",[\"9[034]\"],null,null,\"$1 $2\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4 $5\",[\"25[245]|67[3-6]\"],null,null,\"$1 $2 $3 $4 $5\"]],\"0\",\"0$1\"],\"SG\":[\"65\",\"[36]\\\\d{7}|[17-9]\\\\d{7,10}\",[[\"([3689]\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[369]|8[1-9]\"]],[\"(1[89]00)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1[89]0\",\"1[89]00\"]],[\"(7000)(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"700\",\"7000\"]],[\"(800)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"800\"]]]],\"SH\":[\"290\",\"[256]\\\\d{4}|8\\\\d{3}\",[],null,null,null,null,null,null,[\"2(?:[0-57-9]\\\\d|6[4-9])\\\\d{2}\",\"[56]\\\\d{4}\",null,null,null,null,null,null,\"262\\\\d{2}\"]],\"SI\":[\"386\",\"[1-7]\\\\d{6,7}|[89]\\\\d{4,7}\",[[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[12]|[34][24-8]|5[2-8]|7[3-8]\"],\"(0$1)\"],[\"([3-7]\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[37][01]|4[0139]|51|6\"]],[\"([89][09])(\\\\d{3,6})\",\"$1 $2\",[\"[89][09]\"]],[\"([58]\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"59|8[1-3]\"]]],\"0\",\"0$1\"],\"SJ\":[\"47\",\"0\\\\d{4}|[45789]\\\\d{7}\",[[\"([489]\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[489]\"]],[\"([235-7]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[235-7]\"]]],null,null,null,null,null,null,[\"79\\\\d{6}\",\"(?:4[015-8]|5[89]|9\\\\d)\\\\d{6}\",\"80[01]\\\\d{5}\",\"82[09]\\\\d{5}\",\"880\\\\d{5}\",\"81[23]\\\\d{5}\",\"0\\\\d{4}|81(?:0(?:0[7-9]|1\\\\d)|5\\\\d{2})\\\\d{3}\",null,\"85[0-5]\\\\d{5}\",\"810(?:0[0-6]|[2-8]\\\\d)\\\\d{3}\"]],\"SK\":[\"421\",\"(?:[2-68]\\\\d{5,8}|9\\\\d{6,8})\",[[\"(2)(1[67])(\\\\d{3,4})\",\"$1 $2 $3\",[\"21[67]\"]],[\"([3-5]\\\\d)(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[3-5]\"]],[\"(2)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1/$2 $3 $4\",[\"2\"]],[\"([3-5]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1/$2 $3 $4\",[\"[3-5]\"]],[\"([689]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[689]\"]],[\"(9090)(\\\\d{3})\",\"$1 $2\",[\"909\",\"9090\"]]],\"0\",\"0$1\"],\"SL\":[\"232\",\"[2-9]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\"]],\"0\",\"(0$1)\"],\"SM\":[\"378\",\"[05-7]\\\\d{7,9}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-7]\"]],[\"(0549)(\\\\d{6})\",\"$1 $2\",[\"054\",\"0549\"],null,null,\"($1) $2\"],[\"(\\\\d{6})\",\"0549 $1\",[\"[89]\"],null,null,\"(0549) $1\"]],null,null,\"([89]\\\\d{5})\",\"0549$1\"],\"SN\":[\"221\",\"[3789]\\\\d{8}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[379]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]]]],\"SO\":[\"252\",\"[1-9]\\\\d{5,8}\",[[\"(\\\\d{6})\",\"$1\",[\"[134]\"]],[\"(\\\\d)(\\\\d{6})\",\"$1 $2\",[\"[13-5]|2[0-79]\"]],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"24|[67]\"]],[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"8[125]\"]],[\"(\\\\d{2})(\\\\d{5,7})\",\"$1 $2\",[\"15|28|6[1-35-9]|799|9[2-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"3[59]|4[89]|6[24-6]|79|8[08]|90\"]]],\"0\"],\"SR\":[\"597\",\"[2-8]\\\\d{5,6}\",[[\"(\\\\d{3})(\\\\d{3})\",\"$1-$2\",[\"[2-4]|5[2-58]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1-$2-$3\",[\"56\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[6-8]\"]]]],\"SS\":[\"211\",\"[19]\\\\d{8}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",null,\"0$1\"]],\"0\"],\"ST\":[\"239\",\"[29]\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\"]]],\"SV\":[\"503\",\"[267]\\\\d{7}|[89]\\\\d{6}(?:\\\\d{4})?\",[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[267]\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[89]\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"]]]],\"SX\":[\"1\",\"[5789]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"721\"],\"SY\":[\"963\",\"[1-59]\\\\d{7,8}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-5]\"]],[\"(9\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"]]],\"0\",\"0$1\",null,null,true],\"SZ\":[\"268\",\"[027]\\\\d{7}\",[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[027]\"]]]],\"TA\":[\"290\",\"8\\\\d{3}\",[],null,null,null,null,null,null,[\"8\\\\d{3}\"]],\"TC\":[\"1\",\"[5689]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"649\"],\"TD\":[\"235\",\"[2679]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\"]]],\"TG\":[\"228\",\"[29]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[29]\"]]]],\"TH\":[\"66\",\"1\\\\d{8,9}|[2-9]\\\\d{7,8}\",[[\"(2)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"]],[\"([13-9]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"14|[3-9]\"]],[\"(1[89]00)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[89]0\",\"1[89]00\"],\"$1\"]],\"0\",\"0$1\"],\"TJ\":[\"992\",\"[3-57-9]\\\\d{8}\",[[\"([349]\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[34]7|91[78]\"]],[\"([457-9]\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"4[148]|[578]|9(?:[0235-9]|1[59])\"]],[\"(331700)(\\\\d)(\\\\d{2})\",\"$1 $2 $3\",[\"331\",\"3317\",\"33170\",\"331700\"]],[\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\"$1 $2 $3\",[\"3[1-5]\",\"3(?:[1245]|3(?:[02-9]|1[0-589]))\"]]],\"8\",null,null,null,true],\"TK\":[\"690\",\"[2-47]\\\\d{3,6}\"],\"TL\":[\"670\",\"[2-489]\\\\d{6}|7\\\\d{6,7}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-489]|70\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"7[3-8]\"]]]],\"TM\":[\"993\",\"[1-6]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"12\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"6\"],\"8 $1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"13|[2-5]\"]]],\"8\",\"(8 $1)\"],\"TN\":[\"216\",\"[2-57-9]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\"]]],\"TO\":[\"676\",\"[02-8]\\\\d{4,6}\",[[\"(\\\\d{2})(\\\\d{3})\",\"$1-$2\",[\"[1-6]|7[0-4]|8[05]\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"7[5-9]|8[47-9]\"]],[\"(\\\\d{4})(\\\\d{3})\",\"$1 $2\",[\"0\"]]]],\"TR\":[\"90\",\"[2-589]\\\\d{9}|444\\\\d{4}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[23]|4(?:[0-35-9]|4[0-35-9])\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5[02-69]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"51|[89]\"],\"0$1\"],[\"(444)(\\\\d{1})(\\\\d{3})\",\"$1 $2 $3\",[\"444\"]]],\"0\",null,null,null,true],\"TT\":[\"1\",\"[589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"868\"],\"TV\":[\"688\",\"[279]\\\\d{4,6}\"],\"TW\":[\"886\",\"2\\\\d{6,8}|[3-689]\\\\d{7,8}|7\\\\d{7,9}\",[[\"(20)(\\\\d)(\\\\d{4})\",\"$1 $2 $3\",[\"202\"]],[\"([258]0)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"20[013-9]|50[0-46-9]|80[0-79]\"]],[\"([2-8])(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"[25][2-8]|[346]|[78][1-9]\"]],[\"(9\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"]],[\"(70)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"70\"]]],\"0\",\"0$1\"],\"TZ\":[\"255\",\"\\\\d{9}\",[[\"([24]\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[24]\"]],[\"([67]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[67]\"]],[\"([89]\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"]]],\"0\",\"0$1\"],\"UA\":[\"380\",\"[3-9]\\\\d{8}\",[[\"([3-9]\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[38]9|4(?:[45][0-5]|87)|5(?:0|[67][37])|6[36-8]|7|9[1-9]\",\"[38]9|4(?:[45][0-5]|87)|5(?:0|6(?:3[14-7]|7)|7[37])|6[36-8]|7|9[1-9]\"]],[\"([3-689]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:3[1-8]|4[136-8])2|5(?:[12457]2|6[24])|6(?:[12][29]|[49]2|5[24])|8[0-8]|90\",\"3(?:[1-46-8]2[013-9]|52)|4(?:[1378]2|62[013-9])|5(?:[12457]2|6[24])|6(?:[12][29]|[49]2|5[24])|8[0-8]|90\"]],[\"([3-6]\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"3(?:[1-46-8]|5[013-9])|4(?:[137][013-9]|[45][6-9]|6|8[4-6])|5(?:[1245][013-9]|3|6[0135689]|7[4-6])|6(?:[12][13-8]|[49][013-9]|5[0135-9])\",\"3(?:[1-46-8](?:[013-9]|22)|5[013-9])|4(?:[137][013-9]|[45][6-9]|6(?:[013-9]|22)|8[4-6])|5(?:[1245][013-9]|3|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][13-8]|[49][013-9]|5[0135-9])\"]]],\"0\",\"0$1\"],\"UG\":[\"256\",\"\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"20[0-8]|4(?:6[45]|[7-9])|[7-9]\",\"20(?:[013-8]|2[5-9])|4(?:6[45]|[7-9])|[7-9]\"]],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"3|4(?:[1-5]|6[0-36-9])\"]],[\"(2024)(\\\\d{5})\",\"$1 $2\",[\"202\",\"2024\"]]],\"0\",\"0$1\"],\"US\":[\"1\",\"[2-9]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,true,null,[\"(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[026]|8[13])|3(?:0[1-57-9]|1[02-9]|2[0135]|3[0-24679]|4[67]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|6[39]|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|3[016]|4[16]|5[017]|6[0-279]|78|8[012])|7(?:0[1-46-8]|1[02-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|28|3[0-258]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[014678]|4[0179]|5[12469]|7[0-3589]|8[04-69]))[2-9]\\\\d{6}\",null,\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",\"900[2-9]\\\\d{6}\",\"5(?:00|22|33|44|66|77|88)[2-9]\\\\d{6}\"]],\"UY\":[\"598\",\"[2489]\\\\d{6,7}\",[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[24]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[89]0\"],\"0$1\"]],\"0\"],\"UZ\":[\"998\",\"[679]\\\\d{8}\",[[\"([679]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[679]\"]]],\"8\",\"8 $1\"],\"VA\":[\"39\",\"(?:0(?:878\\\\d{5}|6698\\\\d{5})|[1589]\\\\d{5,10}|3(?:[12457-9]\\\\d{8}|[36]\\\\d{7,9}))\",[[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[26]|55\"]],[\"(0[26])(\\\\d{4})(\\\\d{5})\",\"$1 $2 $3\",[\"0[26]\"]],[\"(0[26])(\\\\d{4,6})\",\"$1 $2\",[\"0[26]\"]],[\"(0\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[13-57-9][0159]\"]],[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"0[13-57-9][0159]|8(?:03|4[17]|9[245])\",\"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|[45][0-4]))\"]],[\"(0\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0[13-57-9][2-46-8]\"]],[\"(0\\\\d{3})(\\\\d{2,6})\",\"$1 $2\",[\"0[13-57-9][2-46-8]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[13]|8(?:00|4[08]|9[59])\",\"[13]|8(?:00|4[08]|9(?:5[5-9]|9))\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"894\",\"894[5-9]\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"3\"]]],null,null,null,null,null,null,[\"06698\\\\d{5}\",\"3(?:[12457-9]\\\\d{8}|6\\\\d{7,8}|3\\\\d{7,9})\",\"80(?:0\\\\d{6}|3\\\\d{3})\",\"0878\\\\d{5}|1(?:44|6[346])\\\\d{6}|89(?:2\\\\d{3}|4(?:[0-4]\\\\d{2}|[5-9]\\\\d{4})|5(?:[0-4]\\\\d{2}|[5-9]\\\\d{6})|9\\\\d{6})\",\"1(?:78\\\\d|99)\\\\d{6}\",null,null,null,\"55\\\\d{8}\",\"84(?:[08]\\\\d{6}|[17]\\\\d{3})\"]],\"VC\":[\"1\",\"[5789]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"784\"],\"VE\":[\"58\",\"[24589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{7})\",\"$1-$2\"]],\"0\",\"0$1\"],\"VG\":[\"1\",\"[2589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"284\"],\"VI\":[\"1\",\"[3589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"340\"],\"VN\":[\"84\",\"1\\\\d{6,9}|2\\\\d{9}|6\\\\d{6,7}|7\\\\d{6}|8\\\\d{6,8}|9\\\\d{8}\",[[\"([17]99)(\\\\d{4})\",\"$1 $2\",[\"[17]99\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[48]\"]],[\"(80)(\\\\d{5})\",\"$1 $2\",[\"80\"]],[\"(69\\\\d)(\\\\d{4,5})\",\"$1 $2\",[\"69\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"2[0-35-79]\"]],[\"([89]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8(?:8|9[89])|9\"]],[\"(1[2689]\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:[26]|8[68]|99)\"]],[\"(86[89])(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"86[89]\"]],[\"(1[89]00)(\\\\d{4,6})\",\"$1 $2\",[\"1[89]0\",\"1[89]00\"],\"$1\"]],\"0\",\"0$1\",null,null,true],\"VU\":[\"678\",\"[2-57-9]\\\\d{4,6}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[579]\"]]]],\"WF\":[\"681\",\"[4-8]\\\\d{5}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\"]]],\"WS\":[\"685\",\"[2-8]\\\\d{4,6}\",[[\"(8\\\\d{2})(\\\\d{3,4})\",\"$1 $2\",[\"8\"]],[\"(7\\\\d)(\\\\d{5})\",\"$1 $2\",[\"7\"]],[\"(\\\\d{5})\",\"$1\",[\"[2-6]\"]]]],\"YE\":[\"967\",\"[1-7]\\\\d{6,8}\",[[\"([1-7])(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-6]|7[24-68]\"]],[\"(7\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"7[0137]\"]]],\"0\",\"0$1\"],\"YT\":[\"262\",\"[268]\\\\d{8}\",[[\"([268]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[268]\"]]],\"0\",null,null,null,null,\"269|63\"],\"ZA\":[\"27\",\"[1-79]\\\\d{8}|8\\\\d{4,8}\",[[\"(860)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"860\"]],[\"(\\\\d{2})(\\\\d{3,4})\",\"$1 $2\",[\"8[1-4]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"8[1-4]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-79]|8(?:[0-57]|6[1-9])\"]]],\"0\",\"0$1\"],\"ZM\":[\"260\",\"[289]\\\\d{8}\",[[\"([29]\\\\d)(\\\\d{7})\",\"$1 $2\",[\"[29]\"]],[\"(800)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"800\"]]],\"0\",\"0$1\"],\"ZW\":[\"263\",\"2(?:[0-57-9]\\\\d{3,8}|6(?:[14]\\\\d{7}|\\\\d{4}))|[13-79]\\\\d{4,9}|8[06]\\\\d{5,8}\",[[\"([49])(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"4|9[2-9]\"]],[\"(7\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"7\"]],[\"(86\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"86[24]\"]],[\"([2356]\\\\d{2})(\\\\d{3,5})\",\"$1 $2\",[\"2(?:0[45]|2[278]|[49]8|[78])|3(?:[09]8|17|3[78]|7[1569]|8[37])|5[15][78]|6(?:[29]8|37|[68][78]|75)\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2(?:1[39]|2[0157]|31|[56][14]|7[35]|84)|329\"]],[\"([1-356]\\\\d)(\\\\d{3,5})\",\"$1 $2\",[\"1[3-9]|2[02569]|3[0-69]|5[05689]|6\"]],[\"([235]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[23]9|54\"]],[\"([25]\\\\d{3})(\\\\d{3,5})\",\"$1 $2\",[\"(?:25|54)8\",\"258[23]|5483\"]],[\"(8\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"86\"]],[\"(80\\\\d)(\\\\d{4})\",\"$1 $2\",[\"80\"]]],\"0\",\"0$1\"],\"001\":[\"979\",\"\\\\d{9}\",[[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\"]]]}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/libphonenumber-js/metadata.min.json\n// module id = 42\n// module chunks = 0","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/get-iterator.js\n// module id = 43\n// module chunks = 0","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/web.dom.iterable.js\n// module id = 44\n// module chunks = 0","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.array.iterator.js\n// module id = 45\n// module chunks = 0","module.exports = function () { /* empty */ };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_add-to-unscopables.js\n// module id = 46\n// module chunks = 0","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-step.js\n// module id = 47\n// module chunks = 0","module.exports = true;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_library.js\n// module id = 48\n// module chunks = 0","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_ctx.js\n// module id = 49\n// module chunks = 0","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_a-function.js\n// module id = 50\n// module chunks = 0","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_ie8-dom-define.js\n// module id = 51\n// module chunks = 0","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-primitive.js\n// module id = 52\n// module chunks = 0","module.exports = require('./_hide');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_redefine.js\n// module id = 53\n// module chunks = 0","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-create.js\n// module id = 54\n// module chunks = 0","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-create.js\n// module id = 55\n// module chunks = 0","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-dps.js\n// module id = 56\n// module chunks = 0","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-keys-internal.js\n// module id = 57\n// module chunks = 0","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_array-includes.js\n// module id = 58\n// module chunks = 0","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-length.js\n// module id = 59\n// module chunks = 0","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-absolute-index.js\n// module id = 60\n// module chunks = 0","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_html.js\n// module id = 61\n// module chunks = 0","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gpo.js\n// module id = 62\n// module chunks = 0","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.string.iterator.js\n// module id = 63\n// module chunks = 0","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_string-at.js\n// module id = 64\n// module chunks = 0","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/core.get-iterator.js\n// module id = 65\n// module chunks = 0","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/core.get-iterator-method.js\n// module id = 66\n// module chunks = 0","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_classof.js\n// module id = 67\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _assign = require(\"../core-js/object/assign\");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/extends.js\n// module id = 68\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/assign.js\n// module id = 69\n// module chunks = 0","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/assign.js\n// module id = 70\n// module chunks = 0","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.assign.js\n// module id = 71\n// module chunks = 0","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-assign.js\n// module id = 72\n// module chunks = 0","exports.f = Object.getOwnPropertySymbols;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gops.js\n// module id = 73\n// module chunks = 0","exports.f = {}.propertyIsEnumerable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-pie.js\n// module id = 74\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/classCallCheck.js\n// module id = 75\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/createClass.js\n// module id = 76\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/define-property.js\n// module id = 77\n// module chunks = 0","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/define-property.js\n// module id = 78\n// module chunks = 0","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.define-property.js\n// module id = 79\n// module chunks = 0","import {countryCodeLookup, postalCodeRegExp} from '../../utils/address'\n\nconst validatePostalCode = (value, country) => {\n    let response = false\n\n    if (value && value.trim() !== '') {\n        const countryCode = countryCodeLookup(country)\n\n        if (countryCode && countryCode in postalCodeRegExp) {\n            response = postalCodeRegExp[countryCode].test(value)\n        } else {\n            response = Object.keys(postalCodeRegExp).some(key => postalCodeRegExp[key].test(value.trim()))\n        }\n    }\n\n    return response\n}\n\nexport const validateZipCode = value => validatePostalCode(value, 'US')\n\nexport default validatePostalCode\n\n\n// WEBPACK FOOTER //\n// ./src/validation/postalCode/index.js","const validateRequired = (value) => {\n    try {\n        return value.toString() && value.toString().replace(/\\s/g, '').length > 0\n    } catch (error) {\n        return false\n    }\n}\n\nexport default validateRequired\n\n\n\n// WEBPACK FOOTER //\n// ./src/validation/required/index.js","import {territoryOptionsForCountry} from '../../utils/address'\n\nconst validateTerritory = (value, country) => {\n    let response = false\n\n    if (value && value.trim() !== '') {\n        const territories = territoryOptionsForCountry(country)\n        response = !!(territories[value]) || Object.keys(territories).some(key => territories[key] === value.trim())\n    }\n\n    return response\n}\n\nexport const validateState = value => validateTerritory(value, 'US')\n\nexport default validateTerritory\n\n\n// WEBPACK FOOTER //\n// ./src/validation/territory/index.js","const VALID_URL = new RegExp(\n    '^' +\n    // protocol identifier\n    '(?:(?:https?|ftp)://)?' +\n    // user:pass authentication\n    '(?:\\\\S+(?::\\\\S*)?@)?' +\n    '(?:' +\n    // IP address exclusion\n    // private & local networks\n    '(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})' +\n    '(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})' +\n    '(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})' +\n    // IP address dotted notation octets\n    // excludes loopback network 0.0.0.0\n    // excludes reserved space >= 224.0.0.0\n    // excludes network & broacast addresses\n    // (first & last IP address of each class)\n    '(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])' +\n    '(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}' +\n    '(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))' +\n    '|' +\n    // host name\n    '(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)' +\n    // domain name\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*' +\n    // TLD identifier\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))' +\n    // TLD may end with dot\n    '\\\\.?' +\n    ')' +\n    // port number\n    '(?::\\\\d{2,5})?' +\n    // resource path\n    '(?:[/?#]\\\\S*)?' +\n    '$', 'i'\n)\n\nconst validateUrl = value => VALID_URL.test(value)\n\nexport default validateUrl\n\n\n\n// WEBPACK FOOTER //\n// ./src/validation/url/index.js","'use strict'\n\nfunction extend(dest, src) {\n  if (src) {\n    var props = Object.keys(src)\n    for (var i = 0, l = props.length; i < l ; i++) {\n      dest[props[i]] = src[props[i]]\n    }\n  }\n  return dest\n}\n\nfunction copy(obj) {\n  return extend({}, obj)\n}\n\n/**\n * Merge an object defining format characters into the defaults.\n * Passing null/undefined for en existing format character removes it.\n * Passing a definition for an existing format character overrides it.\n * @param {?Object} formatCharacters.\n */\nfunction mergeFormatCharacters(formatCharacters) {\n  var merged = copy(DEFAULT_FORMAT_CHARACTERS)\n  if (formatCharacters) {\n    var chars = Object.keys(formatCharacters)\n    for (var i = 0, l = chars.length; i < l ; i++) {\n      var char = chars[i]\n      if (formatCharacters[char] == null) {\n        delete merged[char]\n      }\n      else {\n        merged[char] = formatCharacters[char]\n      }\n    }\n  }\n  return merged\n}\n\nvar ESCAPE_CHAR = '\\\\'\n\nvar DIGIT_RE = /^\\d$/\nvar LETTER_RE = /^[A-Za-z]$/\nvar ALPHANNUMERIC_RE = /^[\\dA-Za-z]$/\n\nvar DEFAULT_PLACEHOLDER_CHAR = '_'\nvar DEFAULT_FORMAT_CHARACTERS = {\n  '*': {\n    validate: function(char) { return ALPHANNUMERIC_RE.test(char) }\n  },\n  '1': {\n    validate: function(char) { return DIGIT_RE.test(char) }\n  },\n  'a': {\n    validate: function(char) { return LETTER_RE.test(char) }\n  },\n  'A': {\n    validate: function(char) { return LETTER_RE.test(char) },\n    transform: function(char) { return char.toUpperCase() }\n  },\n  '#': {\n    validate: function(char) { return ALPHANNUMERIC_RE.test(char) },\n    transform: function(char) { return char.toUpperCase() }\n  }\n}\n\n/**\n * @param {string} source\n * @patam {?Object} formatCharacters\n */\nfunction Pattern(source, formatCharacters, placeholderChar, isRevealingMask) {\n  if (!(this instanceof Pattern)) {\n    return new Pattern(source, formatCharacters, placeholderChar)\n  }\n\n  /** Placeholder character */\n  this.placeholderChar = placeholderChar || DEFAULT_PLACEHOLDER_CHAR\n  /** Format character definitions. */\n  this.formatCharacters = formatCharacters || DEFAULT_FORMAT_CHARACTERS\n  /** Pattern definition string with escape characters. */\n  this.source = source\n  /** Pattern characters after escape characters have been processed. */\n  this.pattern = []\n  /** Length of the pattern after escape characters have been processed. */\n  this.length = 0\n  /** Index of the first editable character. */\n  this.firstEditableIndex = null\n  /** Index of the last editable character. */\n  this.lastEditableIndex = null\n  /** Lookup for indices of editable characters in the pattern. */\n  this._editableIndices = {}\n  /** If true, only the pattern before the last valid value character shows. */\n  this.isRevealingMask = isRevealingMask || false\n\n  this._parse()\n}\n\nPattern.prototype._parse = function parse() {\n  var sourceChars = this.source.split('')\n  var patternIndex = 0\n  var pattern = []\n\n  for (var i = 0, l = sourceChars.length; i < l; i++) {\n    var char = sourceChars[i]\n    if (char === ESCAPE_CHAR) {\n      if (i === l - 1) {\n        throw new Error('InputMask: pattern ends with a raw ' + ESCAPE_CHAR)\n      }\n      char = sourceChars[++i]\n    }\n    else if (char in this.formatCharacters) {\n      if (this.firstEditableIndex === null) {\n        this.firstEditableIndex = patternIndex\n      }\n      this.lastEditableIndex = patternIndex\n      this._editableIndices[patternIndex] = true\n    }\n\n    pattern.push(char)\n    patternIndex++\n  }\n\n  if (this.firstEditableIndex === null) {\n    throw new Error(\n      'InputMask: pattern \"' + this.source + '\" does not contain any editable characters.'\n    )\n  }\n\n  this.pattern = pattern\n  this.length = pattern.length\n}\n\n/**\n * @param {Array<string>} value\n * @return {Array<string>}\n */\nPattern.prototype.formatValue = function format(value) {\n  var valueBuffer = new Array(this.length)\n  var valueIndex = 0\n\n  for (var i = 0, l = this.length; i < l ; i++) {\n    if (this.isEditableIndex(i)) {\n      if (this.isRevealingMask &&\n          value.length <= valueIndex &&\n          !this.isValidAtIndex(value[valueIndex], i)) {\n        break\n      }\n      valueBuffer[i] = (value.length > valueIndex && this.isValidAtIndex(value[valueIndex], i)\n                        ? this.transform(value[valueIndex], i)\n                        : this.placeholderChar)\n      valueIndex++\n    }\n    else {\n      valueBuffer[i] = this.pattern[i]\n      // Also allow the value to contain static values from the pattern by\n      // advancing its index.\n      if (value.length > valueIndex && value[valueIndex] === this.pattern[i]) {\n        valueIndex++\n      }\n    }\n  }\n\n  return valueBuffer\n}\n\n/**\n * @param {number} index\n * @return {boolean}\n */\nPattern.prototype.isEditableIndex = function isEditableIndex(index) {\n  return !!this._editableIndices[index]\n}\n\n/**\n * @param {string} char\n * @param {number} index\n * @return {boolean}\n */\nPattern.prototype.isValidAtIndex = function isValidAtIndex(char, index) {\n  return this.formatCharacters[this.pattern[index]].validate(char)\n}\n\nPattern.prototype.transform = function transform(char, index) {\n  var format = this.formatCharacters[this.pattern[index]]\n  return typeof format.transform == 'function' ? format.transform(char) : char\n}\n\nfunction InputMask(options) {\n  if (!(this instanceof InputMask)) { return new InputMask(options) }\n  options = extend({\n    formatCharacters: null,\n    pattern: null,\n    isRevealingMask: false,\n    placeholderChar: DEFAULT_PLACEHOLDER_CHAR,\n    selection: {start: 0, end: 0},\n    value: ''\n  }, options)\n\n  if (options.pattern == null) {\n    throw new Error('InputMask: you must provide a pattern.')\n  }\n\n  if (typeof options.placeholderChar !== 'string' || options.placeholderChar.length > 1) {\n    throw new Error('InputMask: placeholderChar should be a single character or an empty string.')\n  }\n\n  this.placeholderChar = options.placeholderChar\n  this.formatCharacters = mergeFormatCharacters(options.formatCharacters)\n  this.setPattern(options.pattern, {\n    value: options.value,\n    selection: options.selection,\n    isRevealingMask: options.isRevealingMask\n  })\n}\n\n// Editing\n\n/**\n * Applies a single character of input based on the current selection.\n * @param {string} char\n * @return {boolean} true if a change has been made to value or selection as a\n *   result of the input, false otherwise.\n */\nInputMask.prototype.input = function input(char) {\n  // Ignore additional input if the cursor's at the end of the pattern\n  if (this.selection.start === this.selection.end &&\n      this.selection.start === this.pattern.length) {\n    return false\n  }\n\n  var selectionBefore = copy(this.selection)\n  var valueBefore = this.getValue()\n\n  var inputIndex = this.selection.start\n\n  // If the cursor or selection is prior to the first editable character, make\n  // sure any input given is applied to it.\n  if (inputIndex < this.pattern.firstEditableIndex) {\n    inputIndex = this.pattern.firstEditableIndex\n  }\n\n  // Bail out or add the character to input\n  if (this.pattern.isEditableIndex(inputIndex)) {\n    if (!this.pattern.isValidAtIndex(char, inputIndex)) {\n      return false\n    }\n    this.value[inputIndex] = this.pattern.transform(char, inputIndex)\n  }\n\n  // If multiple characters were selected, blank the remainder out based on the\n  // pattern.\n  var end = this.selection.end - 1\n  while (end > inputIndex) {\n    if (this.pattern.isEditableIndex(end)) {\n      this.value[end] = this.placeholderChar\n    }\n    end--\n  }\n\n  // Advance the cursor to the next character\n  this.selection.start = this.selection.end = inputIndex + 1\n\n  // Skip over any subsequent static characters\n  while (this.pattern.length > this.selection.start &&\n         !this.pattern.isEditableIndex(this.selection.start)) {\n    this.selection.start++\n    this.selection.end++\n  }\n\n  // History\n  if (this._historyIndex != null) {\n    // Took more input after undoing, so blow any subsequent history away\n    this._history.splice(this._historyIndex, this._history.length - this._historyIndex)\n    this._historyIndex = null\n  }\n  if (this._lastOp !== 'input' ||\n      selectionBefore.start !== selectionBefore.end ||\n      this._lastSelection !== null && selectionBefore.start !== this._lastSelection.start) {\n    this._history.push({value: valueBefore, selection: selectionBefore, lastOp: this._lastOp})\n  }\n  this._lastOp = 'input'\n  this._lastSelection = copy(this.selection)\n\n  return true\n}\n\n/**\n * Attempts to delete from the value based on the current cursor position or\n * selection.\n * @return {boolean} true if the value or selection changed as the result of\n *   backspacing, false otherwise.\n */\nInputMask.prototype.backspace = function backspace() {\n  // If the cursor is at the start there's nothing to do\n  if (this.selection.start === 0 && this.selection.end === 0) {\n    return false\n  }\n\n  var selectionBefore = copy(this.selection)\n  var valueBefore = this.getValue()\n\n  // No range selected - work on the character preceding the cursor\n  if (this.selection.start === this.selection.end) {\n    if (this.pattern.isEditableIndex(this.selection.start - 1)) {\n      this.value[this.selection.start - 1] = this.placeholderChar\n    }\n    this.selection.start--\n    this.selection.end--\n  }\n  // Range selected - delete characters and leave the cursor at the start of the selection\n  else {\n    var end = this.selection.end - 1\n    while (end >= this.selection.start) {\n      if (this.pattern.isEditableIndex(end)) {\n        this.value[end] = this.placeholderChar\n      }\n      end--\n    }\n    this.selection.end = this.selection.start\n  }\n\n  // History\n  if (this._historyIndex != null) {\n    // Took more input after undoing, so blow any subsequent history away\n    this._history.splice(this._historyIndex, this._history.length - this._historyIndex)\n  }\n  if (this._lastOp !== 'backspace' ||\n      selectionBefore.start !== selectionBefore.end ||\n      this._lastSelection !== null && selectionBefore.start !== this._lastSelection.start) {\n    this._history.push({value: valueBefore, selection: selectionBefore, lastOp: this._lastOp})\n  }\n  this._lastOp = 'backspace'\n  this._lastSelection = copy(this.selection)\n\n  return true\n}\n\n/**\n * Attempts to paste a string of input at the current cursor position or over\n * the top of the current selection.\n * Invalid content at any position will cause the paste to be rejected, and it\n * may contain static parts of the mask's pattern.\n * @param {string} input\n * @return {boolean} true if the paste was successful, false otherwise.\n */\nInputMask.prototype.paste = function paste(input) {\n  // This is necessary because we're just calling input() with each character\n  // and rolling back if any were invalid, rather than checking up-front.\n  var initialState = {\n    value: this.value.slice(),\n    selection: copy(this.selection),\n    _lastOp: this._lastOp,\n    _history: this._history.slice(),\n    _historyIndex: this._historyIndex,\n    _lastSelection: copy(this._lastSelection)\n  }\n\n  // If there are static characters at the start of the pattern and the cursor\n  // or selection is within them, the static characters must match for a valid\n  // paste.\n  if (this.selection.start < this.pattern.firstEditableIndex) {\n    for (var i = 0, l = this.pattern.firstEditableIndex - this.selection.start; i < l; i++) {\n      if (input.charAt(i) !== this.pattern.pattern[i]) {\n        return false\n      }\n    }\n\n    // Continue as if the selection and input started from the editable part of\n    // the pattern.\n    input = input.substring(this.pattern.firstEditableIndex - this.selection.start)\n    this.selection.start = this.pattern.firstEditableIndex\n  }\n\n  for (i = 0, l = input.length;\n       i < l && this.selection.start <= this.pattern.lastEditableIndex;\n       i++) {\n    var valid = this.input(input.charAt(i))\n    // Allow static parts of the pattern to appear in pasted input - they will\n    // already have been stepped over by input(), so verify that the value\n    // deemed invalid by input() was the expected static character.\n    if (!valid) {\n      if (this.selection.start > 0) {\n        // XXX This only allows for one static character to be skipped\n        var patternIndex = this.selection.start - 1\n        if (!this.pattern.isEditableIndex(patternIndex) &&\n            input.charAt(i) === this.pattern.pattern[patternIndex]) {\n          continue\n        }\n      }\n      extend(this, initialState)\n      return false\n    }\n  }\n\n  return true\n}\n\n// History\n\nInputMask.prototype.undo = function undo() {\n  // If there is no history, or nothing more on the history stack, we can't undo\n  if (this._history.length === 0 || this._historyIndex === 0) {\n    return false\n  }\n\n  var historyItem\n  if (this._historyIndex == null) {\n    // Not currently undoing, set up the initial history index\n    this._historyIndex = this._history.length - 1\n    historyItem = this._history[this._historyIndex]\n    // Add a new history entry if anything has changed since the last one, so we\n    // can redo back to the initial state we started undoing from.\n    var value = this.getValue()\n    if (historyItem.value !== value ||\n        historyItem.selection.start !== this.selection.start ||\n        historyItem.selection.end !== this.selection.end) {\n      this._history.push({value: value, selection: copy(this.selection), lastOp: this._lastOp, startUndo: true})\n    }\n  }\n  else {\n    historyItem = this._history[--this._historyIndex]\n  }\n\n  this.value = historyItem.value.split('')\n  this.selection = historyItem.selection\n  this._lastOp = historyItem.lastOp\n  return true\n}\n\nInputMask.prototype.redo = function redo() {\n  if (this._history.length === 0 || this._historyIndex == null) {\n    return false\n  }\n  var historyItem = this._history[++this._historyIndex]\n  // If this is the last history item, we're done redoing\n  if (this._historyIndex === this._history.length - 1) {\n    this._historyIndex = null\n    // If the last history item was only added to start undoing, remove it\n    if (historyItem.startUndo) {\n      this._history.pop()\n    }\n  }\n  this.value = historyItem.value.split('')\n  this.selection = historyItem.selection\n  this._lastOp = historyItem.lastOp\n  return true\n}\n\n// Getters & setters\n\nInputMask.prototype.setPattern = function setPattern(pattern, options) {\n  options = extend({\n    selection: {start: 0, end: 0},\n    value: ''\n  }, options)\n  this.pattern = new Pattern(pattern, this.formatCharacters, this.placeholderChar, options.isRevealingMask)\n  this.setValue(options.value)\n  this.emptyValue = this.pattern.formatValue([]).join('')\n  this.selection = options.selection\n  this._resetHistory()\n}\n\nInputMask.prototype.setSelection = function setSelection(selection) {\n  this.selection = copy(selection)\n  if (this.selection.start === this.selection.end) {\n    if (this.selection.start < this.pattern.firstEditableIndex) {\n      this.selection.start = this.selection.end = this.pattern.firstEditableIndex\n      return true\n    }\n    // Set selection to the first editable, non-placeholder character before the selection\n    // OR to the beginning of the pattern\n    var index = this.selection.start\n    while (index >= this.pattern.firstEditableIndex) {\n      if (this.pattern.isEditableIndex(index - 1) &&\n          this.value[index - 1] !== this.placeholderChar ||\n          index === this.pattern.firstEditableIndex) {\n        this.selection.start = this.selection.end = index\n        break\n      }\n      index--\n    }\n    return true\n  }\n  return false\n}\n\nInputMask.prototype.setValue = function setValue(value) {\n  if (value == null) {\n    value = ''\n  }\n  this.value = this.pattern.formatValue(value.split(''))\n}\n\nInputMask.prototype.getValue = function getValue() {\n  return this.value.join('')\n}\n\nInputMask.prototype.getRawValue = function getRawValue() {\n  var rawValue = []\n  for (var i = 0; i < this.value.length; i++) {\n    if (this.pattern._editableIndices[i] === true) {\n      rawValue.push(this.value[i])\n    }\n  }\n  return rawValue.join('')\n}\n\nInputMask.prototype._resetHistory = function _resetHistory() {\n  this._history = []\n  this._historyIndex = null\n  this._lastOp = null\n  this._lastSelection = copy(this.selection)\n}\n\nInputMask.Pattern = Pattern\n\nmodule.exports = InputMask\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inputmask-core/lib/index.js\n// module id = 84\n// module chunks = 0","const KEYCODE_V = 86\nconst KEYCODE_X = 88\nconst KEYCODE_Y = 89\nconst KEYCODE_Z = 90\n\nexport default {\n    isCut: event => (event.ctrlKey || event.metaKey) && event.keyCode === KEYCODE_X,\n    isPaste: event => (event.ctrlKey || event.metaKey) && event.keyCode === KEYCODE_V,\n    isUndo: event => (\n        (event.ctrlKey || event.metaKey) &&\n        event.keyCode === (event.shiftKey ? KEYCODE_Y : KEYCODE_Z)\n    ),\n    isRedo: event => (\n        (event.ctrlKey || event.metaKey) &&\n        event.keyCode === (event.shiftKey ? KEYCODE_Z : KEYCODE_Y)\n    ),\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/keyboard/index.js","import MaskedInput from '../input'\nimport {countryCodeLookup} from '../../utils/address'\nimport castArray from 'lodash/castArray'\n\n/* TODO: Handle multiple patterns in the array */\nconst countryPhoneMasks = {\n    AD: '+376-111-111',\n    AE: ['+97\\\\1-1-111-1111', '+97\\\\1-51-111-1111'],\n    AF: '+93-11-111-1111',\n    AG: '+\\\\1(268)111-1111',\n    AI: '+\\\\1(264)111-1111',\n    AL: '+355(111)111-111',\n    AM: '+374-11-111-111',\n    CW: ['+599-111-1111', '+599-9111-1111'],\n    AO: '+244(111)111-111',\n    AQ: '+672-\\\\111-111',\n    AR: '+54(111)111-1111',\n    AS: '+\\\\1(684)111-1111',\n    AT: '+43(111)111-1111',\n    AU: '+6\\\\1-1-1111-1111',\n    AW: '+297-111-1111',\n    AZ: '+994-11-111-11-11',\n    BA: ['+387-11-1111', '+387-11-11111'],\n    BB: '+\\\\1(246)111-1111',\n    BD: '+880-11-111-111',\n    BE: '+32(111)111-111',\n    BF: '+226-11-11-1111',\n    BG: '+359(111)111-111',\n    BH: '+973-1111-1111',\n    BI: '+257-11-11-1111',\n    BJ: '+229-11-11-1111',\n    BM: '+\\\\1(44\\\\1)111-1111',\n    BN: '+673-111-1111',\n    BO: '+59\\\\1-1-111-1111',\n    BR: ['+55(11)1111-1111', '+55(11)91111-1111'],\n    BS: '+\\\\1(242)111-1111',\n    BT: ['+975-1-111-111', '+975-\\\\17-111-111'],\n    BW: '+267-11-111-111',\n    BY: '+375(11)111-11-11',\n    BZ: '+50\\\\1-111-1111',\n    CA: '+\\\\1(111)111-1111',\n    CD: '+243(111)111-111',\n    CF: '+236-11-11-1111',\n    CG: '+242-11-111-1111',\n    CH: '+4\\\\1-11-111-1111',\n    CI: '+225-11-111-111',\n    CK: '+682-11-111',\n    CL: '+56-1-1111-1111',\n    CM: '+237-1111-1111',\n    CN: ['+86(111)1111-111', '+86(111)1111-1111', '+86-11-11111-11111'],\n    CO: '+57(111)111-1111',\n    CR: '+506-1111-1111',\n    CU: '+53-1-111-1111',\n    CV: '+238(111)11-11',\n    CY: '+357-11-111-111',\n    CZ: '+420(111)111-111',\n    DE: ['+49-111-111', '+49(111)11-11', '+49(111)11-111', '+49(111)11-1111', '+49(111)111-1111', '+49(1111)111-1111'],\n    DJ: '+253-11-11-11-11',\n    DK: '+45-11-11-11-11',\n    DM: '+\\\\1(767)111-1111',\n    DO: ['+\\\\1(809)111-1111', '+\\\\1(829)111-1111', '+\\\\1(849)111-1111'],\n    DZ: '+2\\\\13-11-111-1111',\n    EC: ['+593-1-111-1111', '+593-11-111-1111'],\n    EE: ['+372-111-1111', '+372-1111-1111'],\n    EG: '+20(111)111-1111',\n    ER: '+29\\\\1-1-111-111',\n    ES: '+34(111)111-111',\n    ET: '+25\\\\1-11-111-1111',\n    FI: '+358(111)111-11-11',\n    FJ: '+679-11-11111',\n    FK: '+500-11111',\n    FM: '+69\\\\1-111-1111',\n    FO: '+298-111-111',\n    FR: ['+262-11111-1111', '+33(111)111-111', '+508-11-1111', '+590(111)111-111'],\n    GA: '+24\\\\1-1-11-11-11',\n    GB: '+44-11-1111-1111',\n    GD: '+\\\\1(473)111-1111',\n    GE: '+995(111)111-111',\n    GF: '+594-11111-1111',\n    GH: '+233(111)111-111',\n    GI: '+350-111-11111',\n    GL: '+299-11-11-11',\n    GM: '+220(111)11-11',\n    GN: '+224-11-111-111',\n    GQ: '+240-11-111-1111',\n    GR: '+30(111)111-1111',\n    GT: '+502-1-111-1111',\n    GU: '+\\\\1(67\\\\1)111-1111',\n    GW: '+245-1-111111',\n    GY: '+592-111-1111',\n    HK: '+852-1111-1111',\n    HN: '+504-1111-1111',\n    HR: '+385-11-111-111',\n    HT: '+509-11-11-1111',\n    HU: '+36(111)111-111',\n    ID: ['+62-11-111-11', '+62-11-111-111', '+62-11-111-1111', '+62(811)111-111', '+62(811)111-1111', '+62(811)111-11-111'],\n    IE: '+353(111)111-111',\n    IL: ['+972-1-111-1111', '+972-51-111-1111'],\n    IN: '+9\\\\1(1111)111-111',\n    IO: '+246-111-1111',\n    IQ: '+964(111)111-1111',\n    IR: '+98(111)111-1111',\n    IS: '+354-111-1111',\n    IT: '+39(111)1111-111',\n    JM: '+\\\\1(876)111-1111',\n    JO: '+962-1-1111-1111',\n    JP: ['+8\\\\1(111)111-111', '+8\\\\1-11-1111-1111'],\n    KE: '+254-111-111111',\n    KG: '+996(111)111-111',\n    KH: '+855-11-111-111',\n    KI: '+686-11-111',\n    KM: '+269-11-11111',\n    KN: '+\\\\1(869)111-1111',\n    KP: ['+850-111-111', '+850-11-111-111', '+850-1111-1111', '+850-\\\\19\\\\1-111-1111', '+850-111-1111-111', '+850-1111-1111111111111'],\n    KR: '+82-11-111-1111',\n    KW: '+965-1111-1111',\n    KY: '+\\\\1(345)111-1111',\n    KZ: ['+7(611)111-11-11', '+7(711)111-11-11'],\n    LA: ['+856-11-111-111', '+856(2011)111-111'],\n    LB: ['+96\\\\1-1-111-111', '+96\\\\1-11-111-111'],\n    LC: '+\\\\1(758)111-1111',\n    LI: '+423(111)111-1111',\n    LK: '+94-11-111-1111',\n    LR: '+23\\\\1-11-111-111',\n    LS: '+266-1-111-1111',\n    LT: '+370(111)11-111',\n    LU: '+352(111)111-111',\n    LV: '+37\\\\1-11-111-111',\n    LY: ['+2\\\\18-11-111-111', '+2\\\\18-2\\\\1-111-1111'],\n    MA: '+2\\\\12-11-1111-111',\n    MC: ['+377-11-111-111', '+377(111)111-111'],\n    MD: '+373-1111-1111',\n    ME: '+382-11-111-111',\n    MG: '+26\\\\1-11-11-11111',\n    MH: '+692-111-1111',\n    MK: '+389-11-111-111',\n    ML: '+223-11-11-1111',\n    MM: ['+95-111-111', '+95-1-111-111', '+95-11-111-111'],\n    MN: '+976-11-11-1111',\n    MO: '+853-1111-1111',\n    MP: '+\\\\1(670)111-1111',\n    MQ: '+596(111)11-11-11',\n    MR: '+222-11-11-1111',\n    MS: '+\\\\1(664)111-1111',\n    MT: '+356-1111-1111',\n    MU: '+230-111-1111',\n    MV: '+960-111-1111',\n    MW: ['+265-\\\\1-111-111', '+265-1-1111-1111'],\n    MX: ['+52-11-11-1111', '+52(111)111-1111'],\n    MY: ['+60-1-111-111', '+60-11-111-111', '+60-11-111-1111', '+60(111)111-111'],\n    MZ: '+258-11-111-111',\n    NA: '+264-11-111-1111',\n    NC: '+687-11-1111',\n    NE: '+227-11-11-1111',\n    NF: '+672-311-111',\n    NG: ['+234-11-111-11', '+234-11-111-111', '+234(111)111-1111'],\n    NI: '+505-1111-1111',\n    NL: '+3\\\\1-11-111-1111',\n    NO: '+47(111)11-111',\n    NP: '+977-11-111-111',\n    NR: '+674-111-1111',\n    NU: '+683-1111',\n    NZ: ['+64-11-111-111', '+64(111)111-111', '+64(111)111-1111'],\n    OM: '+968-11-111-111',\n    PA: '+507-111-1111',\n    PE: '+5\\\\1(111)111-111',\n    PF: '+689-11-11-11',\n    PG: '+675(111)11-111',\n    PH: '+63(111)111-1111',\n    PK: '+92(111)111-1111',\n    PL: '+48(111)111-111',\n    PS: '+970-11-111-1111',\n    PT: '+35\\\\1-11-111-1111',\n    PW: '+680-111-1111',\n    PY: '+595(111)111-111',\n    QA: '+974-1111-1111',\n    RE: '+262-11111-1111',\n    RO: '+40-11-111-1111',\n    RS: '+38\\\\1-11-111-1111',\n    RU: '+7(111)111-11-11',\n    RW: '+250(111)111-111',\n    SA: ['+966-1-111-1111', '+966-5-1111-1111'],\n    SB: ['+677-11111', '+677-111-1111'],\n    SC: '+248-1-111-111',\n    SD: '+249-11-111-1111',\n    SE: '+46-11-111-1111',\n    SG: '+65-1111-1111',\n    SH: ['+290-1111', '+247-1111'],\n    SI: '+386-11-111-111',\n    SK: '+42\\\\1(111)111-111',\n    SL: '+232-11-111111',\n    SM: '+378-1111-111111',\n    SN: '+22\\\\1-11-111-1111',\n    SO: ['+252-1-111-111', '+252-11-111-111'],\n    SR: ['+597-111-111', '+597-111-1111'],\n    SS: '+2\\\\1\\\\1-11-111-1111',\n    ST: '+239-11-11111',\n    SV: '+503-11-11-1111',\n    SX: '+\\\\1(72\\\\1)111-1111',\n    SY: '+963-11-1111-111',\n    SZ: '+268-11-11-1111',\n    TC: '+\\\\1(649)111-1111',\n    TD: '+235-11-11-11-11',\n    TG: '+228-11-111-111',\n    TH: ['+66-11-111-111', '+66-11-111-1111'],\n    TJ: '+992-11-111-1111',\n    TK: '+690-1111',\n    TL: ['+670-111-1111', '+670-771-11111', '+670-781-11111'],\n    TM: '+993-1-111-1111',\n    TN: '+2\\\\16-11-111-111',\n    TO: '+676-11111',\n    TR: '+90(111)111-1111',\n    TT: '+\\\\1(868)111-1111',\n    TV: ['+688-21111', '+688-901111'],\n    TW: ['+886-1111-1111', '+886-1-1111-1111'],\n    TZ: '+255-11-111-1111',\n    UA: '+380(11)111-11-11',\n    UG: '+256(111)111-111',\n    US: '+\\\\1(111)111-1111',\n    UY: '+598-1-111-11-11',\n    UZ: '+998-11-111-1111',\n    VA: '+39-6-698-11111',\n    VC: '+\\\\1(784)111-1111',\n    VE: '+58(111)111-1111',\n    VG: '+\\\\1(284)111-1111',\n    VI: '+\\\\1(340)111-1111',\n    VN: ['+84-11-1111-111', '+84(111)1111-111'],\n    VU: ['+678-11111', '+678-11-11111'],\n    WF: '+68\\\\1-11-1111',\n    WS: '+685-11-1111',\n    YE: ['+967-1-111-111', '+967-11-111-111', '+967-111-111-111'],\n    ZA: '+27-11-111-1111',\n    ZM: '+260-11-111-1111',\n    ZW: '+263-1-111111',\n}\n\nconst phoneCountry = new WeakMap()\n\nclass MaskedPhoneInput extends MaskedInput {\n    constructor(country) {\n        super({\n            pattern: '1111111111',\n        })\n        this.country = country || 'US'\n    }\n\n    set country(value) {\n        const newCountry = countryCodeLookup(value)\n        phoneCountry.set(this, newCountry)\n        const masks = castArray(newCountry && countryPhoneMasks[newCountry])\n        const oldValue = this.value\n        this.mask.setPattern(masks[0] || '1111111111')\n        this.value = oldValue\n    }\n\n    get country() {\n        return phoneCountry.get(this)\n    }\n}\n\nexport default MaskedPhoneInput\n\n\n\n// WEBPACK FOOTER //\n// ./src/mask/phone/index.js","var isArray = require('./isArray');\n\n/**\n * Casts `value` as an array if it's not one.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Lang\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast array.\n * @example\n *\n * _.castArray(1);\n * // => [1]\n *\n * _.castArray({ 'a': 1 });\n * // => [{ 'a': 1 }]\n *\n * _.castArray('abc');\n * // => ['abc']\n *\n * _.castArray(null);\n * // => [null]\n *\n * _.castArray(undefined);\n * // => [undefined]\n *\n * _.castArray();\n * // => []\n *\n * var array = [1, 2, 3];\n * console.log(_.castArray(array) === array);\n * // => true\n */\nfunction castArray() {\n  if (!arguments.length) {\n    return [];\n  }\n  var value = arguments[0];\n  return isArray(value) ? value : [value];\n}\n\nmodule.exports = castArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/castArray.js\n// module id = 87\n// module chunks = 0","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isArray.js\n// module id = 88\n// module chunks = 0"],"sourceRoot":""}