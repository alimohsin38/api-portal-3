import PropTypes from 'prop-types'

export default function (breakPoints, noDefault = false) {
    const classes = []
    const colOpts = ['col', 'push', 'pull', 'offset', 'alignItems', 'alignSelf', 'justifyContent', 'noGutters', 'hasGutters']

    for (const breakPoint in breakPoints) {
        const props = breakPoints[breakPoint]

        if (props) {
            const extraSmall = (breakPoint === 'xs')
            const breakPointClassExtension = !extraSmall ? `-${breakPoint}` : ''
            const colClassBase = `col${breakPointClassExtension}`

            if (typeof props === 'boolean') {
                classes.push(colClassBase)
            } else if (typeof props === 'number' || (props === 'auto' && !extraSmall)) {
                classes.push(`${colClassBase}-${props}`)
            } else {
                for (const prop in props) {
                    if (colOpts.includes(prop)) {
                        const propHyphened = prop.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()
                        classes.push(`${propHyphened}${breakPointClassExtension}-${props[prop]}`)
                    }
                }
            }
        }
    }

    if (classes.length === 0 && !noDefault) {
        classes.push('col-md')
    }

    return classes
}

const gridPropTypes = PropTypes.oneOfType([
    PropTypes.bool,
    PropTypes.object,
    PropTypes.number,
    PropTypes.string,
])

export {gridPropTypes}