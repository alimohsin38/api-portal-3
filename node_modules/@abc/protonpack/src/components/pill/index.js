import React, {Component} from 'react'
import PropTypes from 'prop-types'
import makeClassnames from '../../utils/bem'
import classnames from 'classnames'

export default class Pill extends Component {
    get elementName() {
        return 'pill'
    }

    render() {
        const {block, className, display, outline, size, styleType, children, ...remain} = this.props
        const classes = {
            ...makeClassnames({
                block,
                element: this.elementName,
                modifiers: {
                    element: {
                        button: !display,
                        size,
                        outline,
                        style: styleType,
                    },
                },
            }),
        }

        let type
        if (display) {
            type = 'div'
        } else {
            type = 'button'
            remain.type = 'button'
        }

        return React.createElement(type, {className: classnames(classes, className), ...remain}, children)
    }
}

Pill.propTypes = {
    block: PropTypes.string,
    children: PropTypes.node.isRequired,
    className: PropTypes.string,
    size: PropTypes.oneOf(['lg', 'sm', 'xl']),
    styleType: PropTypes.oneOf([
        'default',
        'primary',
        'secondary',
        'success',
        'danger',
        'info',
    ]),
    outline: PropTypes.bool,
    display: PropTypes.bool,
}

Pill.defaultProps = {
    size: 'lg',
    styleType: 'default',
}