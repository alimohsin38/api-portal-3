import React from 'react'
import {shallow} from 'enzyme'
import Pill from './'

describe('<Pill />', () => {
    describe('Test basic render', () => {
        const pill = shallow(
            <Pill>xyz</Pill>
        )

        it('Should display children "xyz"', () => {
            expect(pill.text()).toEqual('xyz')
        })
        it('Should have default classes', () => {
            expect(pill.hasClass('pill')).toBe(true)
            expect(pill.hasClass('pill--size_lg')).toBe(true)
            expect(pill.hasClass('pill--style_default')).toBe(true)
        })
        it('Should render a div', () => {
            expect(pill.type()).toEqual('button')
        })
    })

    describe('Test class name prop', () => {
        const pill = shallow(
            <Pill className="test-class">xyz</Pill>
        )

        it('Should have default classes', () => {
            expect(pill.hasClass('pill')).toBe(true)
            expect(pill.hasClass('pill--size_lg')).toBe(true)
            expect(pill.hasClass('pill--style_default')).toBe(true)
        })
        it('Should have passed in class', () => {
            expect(pill.hasClass('test-class')).toBe(true)
        })
    })

    describe('Test styleType prop', () => {
        const styles = [
            'default',
            'primary',
            'secondary',
            'info',
            'danger',
            'success',
        ]

        styles.forEach((style) => {
            const wrapper = shallow(<Pill styleType={style}>xyz</Pill>)
            it(`should have style type '${style}' class`, () => {
                expect(wrapper.hasClass(`pill--style_${style}`)).toBe(true)
            })
        })
    })

    describe('Test size prop', () => {
        const styles = [
            'sm',
            'lg',
            'xl',
        ]

        styles.forEach((style) => {
            const wrapper = shallow(<Pill size={style}>xyz</Pill>)
            it(`should have size '${style}' class`, () => {
                expect(wrapper.hasClass(`pill--size_${style}`)).toBe(true)
            })
        })
    })

    describe('Test outline prop', () => {
        const outlinePill = shallow(
            <Pill outline>xyz</Pill>
        )

        it('Should have the outline class', () => {
            expect(outlinePill.hasClass('pill--outline')).toBe(true)
        })
    })

    describe('Test display prop', () => {
        const displayPill = shallow(
            <Pill display>xyz</Pill>
        )

        it('Should render a div', () => {
            expect(displayPill.type()).toEqual('div')
        })
    })
})