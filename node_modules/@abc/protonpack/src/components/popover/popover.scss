:root {
    --popoverWidth: 276px;
    /* max-width used by the popover component */
    --popoverCaratSize: 6px;
}

.popover {
    background: none;
    border: none;
    box-shadow: 0 5px 12px 0 var(--popoverShadow);
    list-style: none;
    max-width: calc(100% - 10px);
    width: calc(100% - 10px);

    &.show {
        opacity: 1;
        padding: 0;
    }

    @media screen and (min-width: map-get($grid-breakpoints, 'sm')) {
        max-width: var(--popoverWidth);
        width: auto;
    }

    .popover-divider {
        border-color: var(--popoverDivider);
    }

    .popover-inner {
        background-color: var(--popoverBackground);
        border-radius: var(--popoverBorderRadius);
        border: 1px solid var(--popoverBorder);
        box-shadow: none;
        color: var(--popoverText);
        min-width: 80px;
        position: relative;
    }

    .arrow {
        height: calc(var(--popoverCaratSize) * 2);
        margin: 0;
        width: calc(var(--popoverCaratSize) * 2);

        &::after,
        &::before {
            background: none;
            border: none;
            content: "";
            height: calc(var(--popoverCaratSize) * 2);
            position: absolute;
            transform: rotate(45deg);
            width: calc(var(--popoverCaratSize) * 2);
            z-index: -1;
        }

        &::before {
            border: 1px solid var(--popoverBorder);
            box-shadow: 0 5px 12px 0 var(--popoverShadow);
        }

        &::after {
            background: var(--popoverBackground);
            bottom: 0;
            height: calc((var(--popoverCaratSize) - 1px) * 2);
            left: 0;
            margin: 1px;
            right: 0;
            top: 0;
            width: calc((var(--popoverCaratSize) - 1px) * 2);
            z-index: 1;
        }
    }

    &.bs-popover {

        &-bottom,
        &-auto[data-placement^="bottom"] {
            .arrow {
                top: calc((var(--popoverCaratSize) - 1px) * -1);
            }

            @media screen and (min-width: map-get($grid-breakpoints, 'sm')) {
                &[data-placement$="-start"] {
                    margin-left: calc((var(--popoverBorderRadius) + 16px) * -1);

                    .arrow {
                        left: calc(var(--popoverBorderRadius) + 16px);
                    }
                }

                &[data-placement$="-end"] {
                    margin-right: calc((var(--popoverBorderRadius) + 16px) * -1);

                    .arrow {
                        right: calc(var(--popoverBorderRadius) + 16px);
                    }
                }
            }
        }

        &-top,
        &-auto[data-placement^="top"] {
            .arrow {
                bottom: calc((var(--popoverCaratSize) - 1px) * -1);
            }

            @media screen and (min-width: map-get($grid-breakpoints, 'sm')) {
                &[data-placement$="-start"] {
                    margin-left: calc((var(--popoverBorderRadius) + 16px) * -1);

                    .arrow {
                        left: calc(var(--popoverBorderRadius) + 16px);
                    }
                }

                &[data-placement$="-end"] {
                    margin-right: calc((var(--popoverBorderRadius) + 16px) * -1);

                    .arrow {
                        right: calc(var(--popoverBorderRadius) + 16px);
                    }
                }
            }
        }

        &-left,
        &-auto[data-placement^="left"] {
            left: 0;

            @media screen and (min-width: map-get($grid-breakpoints, 'sm')) {
                left: auto;

                .arrow {
                    right: calc((var(--popoverCaratSize) - 1px) * -1);
                }

                &[data-placement$="-start"] {
                    margin-top: calc((var(--popoverBorderRadius) + var(--popoverCaratSize)) * -1);

                    .arrow {
                        top: calc(var(--popoverBorderRadius) + var(--popoverCaratSize));
                    }
                }

                &[data-placement$="-end"] {
                    margin-bottom: calc((var(--popoverBorderRadius) + var(--popoverCaratSize)) * -1);

                    .arrow {
                        bottom: calc((var(--popoverBorderRadius) + var(--popoverCaratSize)) * -1);
                    }
                }
            }
        }

        &-right,
        &-auto[data-placement^="right"] {
            right: 0;

            @media screen and (min-width: map-get($grid-breakpoints, 'sm')) {
                right: auto;

                .arrow {
                    left: calc((var(--popoverCaratSize) - 1px) * -1);
                }

                &[data-placement$="-start"] {
                    margin-top: calc((var(--popoverBorderRadius) + var(--popoverCaratSize)) * -1);

                    .arrow {
                        top: calc(var(--popoverBorderRadius) + var(--popoverCaratSize));
                    }
                }

                &[data-placement$="-end"] {
                    margin-bottom: calc((var(--popoverBorderRadius) + var(--popoverCaratSize)) * -1);

                    .arrow {
                        bottom: calc((var(--popoverBorderRadius) + var(--popoverCaratSize)) * -1);
                    }
                }
            }
        }
    }

    &[data-placement^="top-start"],
    &[data-placement^="bottom-start"] {
        right: var(--popoverCaratSize);

        .arrow {
            right: calc((var(--popoverCaratSize) - 1px) * -1);
        }

        @media screen and (min-width: map-get($grid-breakpoints, 'sm')) {
            right: auto;

            .arrow {
                right: auto;
            }
        }
    }

    &[data-placement^="top-end"],
    &[data-placement^="bottom-end"] {
        left: var(--popoverCaratSize);

        .arrow {
            left: calc((var(--popoverCaratSize) - 1px) * -1);
        }

        @media screen and (min-width: map-get($grid-breakpoints, 'sm')) {
            left: auto;

            .arrow {
                left: auto;
            }
        }
    }

}