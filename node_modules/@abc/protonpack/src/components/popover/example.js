import React from 'react'
import {Row, Col, Popover, PopoverBody, Divider} from '../../export'
import Icon from '@abc/quarkicons'

const placementOptions = [
    'auto',
    'auto-start',
    'auto-end',
    'top',
    'top-start',
    'top-end',
    'right',
    'right-start',
    'right-end',
    'bottom',
    'bottom-start',
    'bottom-end',
    'left',
    'left-start',
    'left-end',
]

export default class PopoverExample extends React.Component {
    constructor(props) {
        super(props)

        const initialState = {}

        placementOptions.forEach((placement) => {
            initialState[placement] = false
        })

        this.state = initialState

        this.togglePopover = this.togglePopover.bind(this)
    }

    togglePopover(target) {
        this.setState({
            [target]: !this.state[target],
        })
    }

    render() {
        return (
            <div className="exampleSection">
                <a name="popovers"/>
                <h2 className="mb-2">Popover</h2>
                <p>
                    These are the main <code>placement</code> options available, but more detailed control can be enforced through additional options
                    available in <a target="_blank" href="https://reactstrap.github.io/components/popovers/">Reacstrap</a>.
                </p>

                <Row className="mb-3 exampleSubsection">
                    {
                        placementOptions.map(placement => (
                            <Col key={`popover_${placement}`} sm={4}>
                                <Icon
                                    type='gear'
                                    onClick={() => this.togglePopover(placement)}
                                    style={{fontSize: '2rem', color: '#C6C6C6'}}
                                />
                                <Icon
                                    type='arrow-down'
                                    id={`popover_${placement}`}
                                    onClick={() => this.togglePopover(placement)}
                                    style={{fontSize: '1rem', color: '#C6C6C6'}}
                                />
                                <Popover
                                    isOpen={this.state[placement]}
                                    target={`popover_${placement}`}
                                    toggle={() => this.togglePopover(placement)}
                                    placement={placement}
                                >
                                    <PopoverBody onClick={() => this.togglePopover(placement)}>Profile</PopoverBody>
                                    <Divider fullWidth />
                                    <PopoverBody onClick={() => this.togglePopover(placement)}>Settings</PopoverBody>
                                    <PopoverBody onClick={() => this.togglePopover(placement)}>Logout</PopoverBody>
                                </Popover>
                                <p>Popover<br/><code>placement: '{placement}'</code></p>
                            </Col>
                        ))
                    }
                </Row>
            </div>
        )
    }
}