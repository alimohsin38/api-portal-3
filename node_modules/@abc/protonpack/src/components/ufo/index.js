import React, {Component} from 'react'
import PropTypes from 'prop-types'
import NotificationSystem from 'react-notification-system'
import Indicator from '../indicator'
import requiredIf from '../../utils/requiredIf'

export default class Ufo extends Component {
    constructor(props) {
        super(props)

        this.state = {
            level: '',
            message: '',
        }
    }

    addNotification(notificationSystem) {
        const {autoDismiss, level, message, position, onRemove} = this.props

        const children = this.renderMessage(level, message)
        const notification = {
            autoDismiss,
            level,
            message: '',
            position,
            onRemove,
            children,
        }

        if (level && (level !== this.state.level && message !== this.state.message)) {
            this.setState({level, message}, () => {
                notificationSystem.clearNotifications() // only allow 1 notification at a time
                notificationSystem.addNotification(notification)
            })
        }
    }

    getCustomStyles() {
        return {
            Containers: {
                DefaultStyle: {
                    width: 'inherit',
                },
                tc: {
                    left: '0',
                    right: '0',
                    marginLeft: '0',
                },
            },
            NotificationItem: {
                DefaultStyle: {
                    textAlign: 'center',
                    fontSize: '0.875rem',
                    fontWeight: 'normal',
                    fontFamily: 'Helvetica Neue',
                    padding: 0,
                    backgroundColor: 'transparent',
                    boxShadow: 'none',
                    border: 'none',
                },
                success: {
                    backgroundColor: 'var(--ufoSuccess)',
                    borderTop: '0',
                },
                warning: {
                    backgroundColor: 'var(--ufoWarning)',
                    borderTop: '0',
                },
                error: {
                    backgroundColor: 'var(--ufoDanger)',
                    borderTop: '0',
                },
                info: {
                    borderTop: '0',
                    backgroundColor: 'var(--ufoInfo)',
                },
            },
            Dismiss: {
                DefaultStyle: {
                    display: 'none',
                },
            },
        }
    }

    renderMessage(level, message) {
        return (
            <div className="ufo" data-abc-id="ufo">
                <div className="ufo-message" data-abc-id="message">
                    <span className="ufo-message-text">{message}</span>
                </div>
                <div className="ufo-close" data-abc-id="close">
                    <Indicator type="remove" />
                </div>
            </div>
        )
    }

    render() {
        // eslint-disable-next-line no-unused-vars
        const {autoDismiss, level, message, position, onRemove, ...remain} = this.props

        const style = this.getCustomStyles()

        return <NotificationSystem
            ref={notificationSystem => notificationSystem && this.addNotification(notificationSystem)}
            style={style}
            {...remain}
        />
    }
}

Ufo.propTypes = {
    autoDismiss: PropTypes.number,
    level: requiredIf(PropTypes.oneOf(['success', 'error', 'warning']), props => props.message),
    message: requiredIf(PropTypes.string, props => props.level),
    onRemove: PropTypes.func,
    position: PropTypes.string,
}

Ufo.defaultProps = {
    autoDismiss: 5,
    position: 'tc',
}