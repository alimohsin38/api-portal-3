import React, {Component} from 'react'
import {Col, Row, Button, Ufo} from '../../export'

export default class UfoExample extends Component {
    constructor(props) {
        super(props)

        this.state = {
            count: 0,
            currentNotification: {},
        }

        this.sendNewNotify = this.sendNewNotify.bind(this)
        this.handleCustomDismiss = this.handleCustomDismiss.bind(this)
        this.handleNewSuccess = this.handleNewSuccess.bind(this)
        this.handleNewWarning = this.handleNewWarning.bind(this)
        this.handleNewDanger = this.handleNewDanger.bind(this)
    }

    sendNewNotify(payload) {
        this.setState(payload)
    }

    handleCustomDismiss() {
        const count = ++this.state.count
        this.sendNewNotify({
            count,
            currentNotification: {
                autoDismiss: 0,
                message: `Success - ${count}, this UFO will never closed automatically`,
                level: 'success',
            },
        })
    }

    handleNewSuccess() {
        const count = ++this.state.count
        this.sendNewNotify({
            count,
            currentNotification: {
                message: `Success - ${count} abca09234093240938555555555555555430@gmail.com`,
                level: 'success',
            },
        })
    }

    handleNewWarning() {
        const count = ++this.state.count
        this.sendNewNotify({
            count,
            currentNotification: {
                message: `Warning this message is super long and probably way longer than any message we'll ever have, but it's cool it's for testing to see what happens when you have a message that's super long ...and stuff ...and junk- ${count}.`,
                level: 'warning',
            },
        })
    }

    handleNewDanger() {
        const count = ++this.state.count
        this.sendNewNotify({
            count,
            currentNotification: {
                message: <span>Dangerzone - {count}. <a href="#">Click here to figure out why you've failed</a></span>,
                level: 'error',
            },
        })
    }

    handleRemove(notification) {
        // eslint-disable-next-line no-console
        console.log(`removed ${notification.uid}`)
    }

    render() {
        const curNotify = this.state.currentNotification

        return (
            <div>
                <h2 className="mb-2">Notifications</h2>
                <Ufo
                    autoDismiss={curNotify.autoDismiss}
                    level={curNotify.level}
                    message={curNotify.message}
                    onRemove={this.handleRemove}
                />

                <Row>
                    <Col>
                        <Button block onClick={this.handleNewSuccess}>Test Success UFO</Button>
                    </Col>
                    <Col>
                        <Button btnStyle="primary" block onClick={this.handleNewWarning}>Test Warning UFO</Button>
                    </Col>
                    <Col>
                        <Button btnStyle="secondary" block onClick={this.handleNewDanger}>Test Danger UFO</Button>
                    </Col>
                </Row>
                <Row>
                    <Col>
                        <Button block onClick={this.handleCustomDismiss}>Test UFO without autoDismiss</Button>
                    </Col>
                </Row>
            </div>
        )
    }
}