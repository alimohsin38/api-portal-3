import React from 'react'
import {shallow} from 'enzyme'
import Container from './'

describe('Test render a Container', () => {
    const container = shallow(
        <Container>xyz</Container>
    )

    it('Will be a <div>', () => {
        expect(container.containsMatchingElement(<div>xyz</div>)).toBe(true)
    })

    it('Will have the container class', () => {
        expect(container.is('.container')).toBe(true)
    })
})

describe('Test render of Container with passed in html attributes', () => {
    const container = shallow(
        <Container role='delivery' data-robot='bender' aria-labelledby='planet express'>xyz</Container>
    )

    it('Will render to a basic default and pass along attributes', () => {
        expect(container.html()).toBe('<div role="delivery" data-robot="bender" aria-labelledby="planet express" class="container">xyz</div>')
    })
})

describe('Test render a Container Fluid', () => {
    const containerFluid = shallow(
        <Container fluid>xyz</Container>
    )

    it('Will be a <div>', () => {
        expect(containerFluid.containsMatchingElement(<div>xyz</div>)).toBe(true)
    })

    it('container: Will have the container-fluid class', () => {
        expect(containerFluid.is('.container-fluid')).toBe(true)
    })
})

describe('Test className', () => {
    const container = shallow(
        <Container className="zoidberg">xyz</Container>
    )

    it('Will it support extra class names passed in', () => {
        expect(container.containsMatchingElement(<div>xyz</div>)).toBe(true)
        expect(container.is('.container')).toBe(true)
        expect(container.is('.zoidberg')).toBe(true)
    })
})

describe('Test render a Container fluid height', () => {
    const containerVH = shallow(
        <Container fluidHeight>xyz</Container>
    )

    it('container: Will have the fluid-height class', () => {
        expect(containerVH.is('.fluid-height')).toBe(true)
    })
})