import React, {Component} from 'react'
import PropTypes from 'prop-types'
import makeClassnames from '../../utils/bem'
import classnames from 'classnames'
import Icon from '@abc/quarkicons'

export const iconMap = {
    add: 'plus-circle',
    alert: 'warning-circle',
    cancel: 'x-circle',
    close: 'x-heavy',
    confirm: 'check-circle',
    error: 'x-circle',
    filter: 'filter-solid',
    next: 'chevron-right-heavy',
    'select-date': 'calendar-solid',
    remove: 'x-heavy',
    timer: 'clock',
    edit: 'pencil',
    notes: 'file-text-solid',
}

export default class Indicator extends Component {
    get elementName() {
        return 'indicator'
    }

    buildClasses() {
        const {
            className,
            disabled,
            onClick,
            size,
            styleType,
            type,
        } = this.props
        const clickable = onClick !== undefined

        const classes = {
            indicator: {
                ...makeClassnames({
                    element: this.elementName,
                    modifiers: {
                        element: {
                            type,
                            style: styleType,
                            disabled,
                            clickable,
                        },
                    },
                }),
            },
            icon: {
                ...makeClassnames({
                    block: this.elementName,
                    element: 'icon',
                    modifiers: {
                        element: {
                            size,
                        },
                    },
                }),
            },
        }

        if (className) {
            classes.indicator[className] = true
        }

        return classes
    }

    getIconType(type) {
        return iconMap[type] || ''
    }

    render() {
        // eslint-disable-next-line no-unused-vars
        const {type, disabled, ['data-abc-id']: dataAbcId, className, size, styleType, ...remain} = this.props
        const abcId = dataAbcId || 'indicator'
        const iconType = this.getIconType(type)
        const classes = this.buildClasses()

        return (
            <div data-abc-id={abcId} className={classnames(classes.indicator)} {...remain}>
                <Icon type={iconType} className={classnames(classes.icon)} />
            </div>
        )
    }
}

Indicator.propTypes = {
    type: PropTypes.oneOf(Object.keys(iconMap)).isRequired,
    disabled: PropTypes.bool,
    onClick: PropTypes.func,
    styleType: PropTypes.oneOf([
        'danger',
        'info',
        'primary',
        'success',
        'warning',
        'next',
    ]),
    className: PropTypes.string,
    size: PropTypes.string,
}
