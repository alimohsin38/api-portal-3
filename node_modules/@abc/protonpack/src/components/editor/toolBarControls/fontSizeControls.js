import React from 'react'
import PropTypes from 'prop-types'
import classnames from 'classnames'
import makeClassnames from '../../../utils/bem'
import Icon from '@abc/quarkicons'
import {Popover, PopoverBody, Divider, BaseText} from '../../../export'

const BLOCK_TYPES = [
    {label: 'Normal', style: 'default'},
    {label: 'H1', style: 'header-one'},
    {label: 'H2', style: 'header-two'},
    {label: 'H3', style: 'header-three'},
    {label: 'H4', style: 'header-four'},
    {label: 'H5', style: 'header-five'},
    {label: 'H6', style: 'header-six'},
]

const FontSizeControls = (props) => {
    const {
        togglePopover,
        onSelect,
        isOpen,
        abcId,
    } = props

    const classNames = classnames(makeClassnames({
        block: 'RichEditor',
        element: 'controls',
        modifiers: {
            element: {
                button: true,
                hasBorder: true,
            },
        },
    }))

    return (
        <span className={classNames}>
            <div>
                <Icon
                    type='text-size-solid'
                    id={abcId}
                    onClick={() => togglePopover(isOpen)}
                />
                <Icon
                    type='caret-down-solid'
                    size='xs'
                    onClick={() => togglePopover(isOpen)}
                />
            </div>
            <BaseText size='xl' weight='medium'>
                <Popover
                    isOpen={isOpen}
                    target={abcId}
                    toggle={() => togglePopover(isOpen)}
                    placement='bottom-start'
                    className='RichEditor__controls--popOver'
                >
                    {BLOCK_TYPES.map(type =>
                        <div key={type.label}>
                            <PopoverBody
                                onClick={() => onSelect(type.style)}
                            >
                                {type.label}
                            </PopoverBody>
                            <Divider fullWidth />
                        </div>
                    )}
                </Popover>
            </BaseText>
        </span>
    )
}

FontSizeControls.propTypes = {
    editorState: PropTypes.object,
    isOpen: PropTypes.bool,
    togglePopover: PropTypes.func,
    onSelect: PropTypes.func,
    abcId: PropTypes.string,
}

export default FontSizeControls
