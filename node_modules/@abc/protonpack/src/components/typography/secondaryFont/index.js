import React, {Component} from 'react'
import PropTypes from 'prop-types'
import makeClassnames from '../../../utils/bem'
import classnames from 'classnames'

export default class SecondaryFont extends Component {
    get elementName() {
        return 'secondary-font'
    }

    buildClasses() {
        const {color, size, weight, isStatic, mixedCase, children} = this.props
        const className = children.props.className
        const classes = makeClassnames({
            block: 'font-style',
            element: this.elementName,
            modifiers: {
                block: {
                    color,
                    weight,
                },
                element: {
                    isStatic,
                    size,
                    mixedCase,
                },
            },
        })

        if (className && className !== '') {
            classes[className] = true
        }

        return classes
    }

    render() {
        const {children, alpha} = this.props

        const classes = this.buildClasses()
        const style = children.props.style || {}
        style.opacity = alpha

        return React.cloneElement(children, {className: classnames(classes), style})
    }
}

SecondaryFont.propTypes = {
    children: PropTypes.node.isRequired,
    color: PropTypes.oneOf(['primary', 'secondary', 'tertiary', 'gray-light', 'gray-dark', 'success', 'danger', 'warning', 'white']),
    size: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', 'xxl']),
    weight: PropTypes.oneOf(['light', 'normal', 'medium', 'bold']),
    isStatic: PropTypes.bool,
    alpha: PropTypes.number,
    mixedCase: PropTypes.bool,
}