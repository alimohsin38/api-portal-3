import React, {Component} from 'react'
import PropTypes from 'prop-types'

export default class Button extends Component {
    buildClasses(props) {
        const classes = ['btn']

        if (props.outline) {
            classes.push('btn--outline')
            classes.push(`btn--style_${props.btnStyle}`)
        } else {
            classes.push(`btn-${props.btnStyle}`)
        }

        if (props.size) {
            classes.push(`btn-${props.size}`)
        }

        if (props.block) {
            classes.push('btn-block')
        }

        if (props.active) {
            classes.push('active')
        }

        if (props.weight) {
            classes.push(`btn-font-weight-${props.weight}`)
        }

        if (props.className) {
            classes.push(props.className)
        }

        return classes.join(' ').trim()
    }

    render() {
        const {type, btnStyle, outline, size, block, active, className, disabled, weight, ...remain} = this.props
        const props = {btnStyle, outline, size, block, active, className, weight}

        return (
            <button disabled={disabled} type={type} className={this.buildClasses(props)} {...remain} >
                {this.props.children}
            </button>
        )
    }
}

Button.propTypes = {
    children: PropTypes.node.isRequired,
    className: PropTypes.string,
    type: PropTypes.oneOf(['button', 'submit', 'reset']),
    btnStyle: PropTypes.oneOf(['default', 'primary', 'secondary', 'link', 'info']),
    outline: PropTypes.bool,
    size: PropTypes.string,
    weight: PropTypes.oneOf(['light', 'normal', 'medium', 'bold']),
    block: PropTypes.bool,
    active: PropTypes.bool,
    disabled: PropTypes.bool,
}

Button.defaultProps = {
    btnStyle: 'default',
    type: 'button',
}
