import React from 'react'
import {shallow} from 'enzyme'
import Swiper from './'
import range from 'lodash/range'

describe('Swiper', () => {
    const testChildrenCount = 6
    const testChildren = range(testChildrenCount)
        .map(index => <div key={index}><h3>{index}</h3></div>)

    describe('defaults', () => {
        const swiper = shallow(
            <Swiper>
                {testChildren}
            </Swiper>
        )

        it('should have default "swiper" class', () => {
            expect(swiper.hasClass('swiper')).toBe(true)
        })

        it('should render children it receives', () => {
            range(testChildrenCount)
                .forEach((index) => {
                    expect(swiper.contains(<div><h3>{index}</h3></div>)).toBe(true)
                })
        })

        it('should have the prop data-abc-id equal to "swiper"', () => {
            expect(swiper.prop('data-abc-id')).toEqual('swiper')
        })
    })

    describe('options', () => {
        const swiper = shallow(
            <Swiper
                data-abc-id="fake-swiper-abc-id"
                ratio="4:1"
                className="fake-swiper-class-name"
            >
                {testChildren}
            </Swiper>
        )

        const swiper3by1 = shallow(
            <Swiper
                ratio="3:1"
            >
                {testChildren}
            </Swiper>
        )

        const swiper2by1 = shallow(
            <Swiper
                ratio="2:1"
            >
                {testChildren}
            </Swiper>
        )

        const swiper16by9 = shallow(
            <Swiper
                ratio="16:9"
            >
                {testChildren}
            </Swiper>
        )

        const swiper3by2 = shallow(
            <Swiper
                ratio="3:2"
            >
                {testChildren}
            </Swiper>
        )

        const swiper4by3 = shallow(
            <Swiper
                ratio="4:3"
            >
                {testChildren}
            </Swiper>
        )

        it('should have the prop data-abc-id equal to "fake-swiper-abc-id"', () => {
            expect(swiper.prop('data-abc-id')).toEqual('fake-swiper-abc-id')
        })

        it('should have a class named "fake-swiper-class-name"', () => {
            expect(swiper.hasClass('fake-swiper-class-name')).toBe(true)
        })

        it('should have a class named "swiper--ratio_4-1"', () => {
            expect(swiper.hasClass('swiper--ratio_4-1')).toBe(true)
        })

        it('should have a class named "swiper--ratio_3-1"', () => {
            expect(swiper3by1.hasClass('swiper--ratio_3-1')).toBe(true)
        })

        it('should have a class named "swiper--ratio_2-1"', () => {
            expect(swiper2by1.hasClass('swiper--ratio_2-1')).toBe(true)
        })

        it('should have a class named "swiper--ratio_16-9"', () => {
            expect(swiper16by9.hasClass('swiper--ratio_16-9')).toBe(true)
        })

        it('should have a class named "swiper--ratio_3-2"', () => {
            expect(swiper3by2.hasClass('swiper--ratio_3-2')).toBe(true)
        })

        it('should have a class named "swiper--ratio_4-3"', () => {
            expect(swiper4by3.hasClass('swiper--ratio_4-3')).toBe(true)
        })
    })
})