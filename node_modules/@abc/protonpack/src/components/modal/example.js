import React, {Component} from 'react'
import {Col, Row, Button, Modal, ModalHeader, BannerModal, ModalBody, ModalFooter, FormGroup, LabelGroup, Input} from '../../export'
import Icon from '@abc/quarkicons'

export default class ModalExample extends Component {
    constructor(props) {
        super(props)

        this.state = {
            autoFocus: false,
            basic: false,
            basicIndicator: false,
            scrollable: false,
            scrollableBtns: false,
            staticBackdrop: false,
            backdrop: false,
            error: false,
            passedHeader: false,
            passedBody: false,
            passedFooter: false,
            passedBanner: false,
            overlayHeader: false,
        }
    }

    toggleOpen(key) {
        if (key) {
            this.setState({
                [key]: !this.state[key],
            })
        } else {
            this.setState({
                autoFocus: false,
                basic: false,
                basicIndicator: false,
                scrollable: false,
                scrollableBtns: false,
                staticBackdrop: false,
                backdrop: false,
                error: false,
                passedHeader: false,
                passedBody: false,
                passedFooter: false,
                passedBanner: false,
                overlayHeader: false,
            })
        }
    }

    render() {
        const basicBanner = {
            title: 'Modal Title',
            children: <span>Modal Child</span>,
        }

        const basicButtons = [
            {
                text: 'Cancel',
                props: {
                    btnStyle: 'primary',
                    onClick: () => this.toggleOpen(),
                },
            },
            {
                text: 'Ok',
                props: {
                    onClick: () => this.toggleOpen(),
                },
            },
        ]

        const basicBannerIndicator = {
            title: 'WOAH!',
            children: 'ADD IT!!!!',
            indicator: 'add',
        }

        const basicButtonsIndicator = [
            {
                text: 'Ok',
                props: {
                    onClick: () => this.toggleOpen('basicIndicator'),
                },
            },
        ]

        const scrollableBanner = {
            title: 'Scrollable Content',
        }

        const scrollableButtons = [
            {
                text: 'Ok',
                props: {
                    onClick: () => this.toggleOpen('scrollableBtns'),
                },
            },
        ]

        const errorExample = {
            message: 'Sorry there was an error.',
            type: 'danger',
        }

        return (
            <div>
                <Row className="mt-2">
                    <Col>
                        <h2>Modals</h2>
                    </Col>
                </Row>
                <Row className="mt-4">
                    <Col>
                        <Button btnStyle="primary" block onClick={() => this.toggleOpen('basic')}>Basic Modal Template with Buttons</Button>
                        <Modal
                            isOpen={this.state.basic}
                            toggle={() => this.toggleOpen('basic')}
                            banner={basicBanner}
                            buttons={basicButtons}
                        >
                            Testing a basic modal with buttons
                        </Modal>
                    </Col>
                </Row>
                <Row className="mt-2">
                    <Col>
                        <Button btnStyle="primary" block onClick={() => this.toggleOpen('autoFocus')}>Basic Modal Template with AutoFocus Input</Button>
                        <Modal
                            isOpen={this.state.autoFocus}
                            toggle={() => this.toggleOpen('autoFocus')}
                            banner={basicBanner}
                            buttons={basicButtons}
                            autoFocus=".input-target-query"
                        >
                            Testing a basic modal with autoFocus input
                            <FormGroup>
                                <LabelGroup label="Give Me Focus">
                                    <Input className="input-target-query" type="text" noBorder/>
                                </LabelGroup>
                            </FormGroup>
                        </Modal>
                    </Col>
                </Row>
                <Row className="mt-2">
                    <Col>
                        <Button
                            btnStyle="primary"
                            block
                            onClick={() => this.toggleOpen('basicIndicator')}
                        >
                            Basic Modal Template with Buttons & Indicator
                        </Button>
                        <Modal
                            isOpen={this.state.basicIndicator}
                            toggle={() => this.toggleOpen('basicIndicator')}
                            banner={basicBannerIndicator}
                            buttons={basicButtonsIndicator}
                        >
                            Click The OK Button
                        </Modal>
                    </Col>
                </Row>
                <Row className="mt-2">
                    <Col>
                        <Button btnStyle="primary" block onClick={() => this.toggleOpen('scrollable')}>Modal with Scrollable Content</Button>
                        <Modal
                            isOpen={this.state.scrollable}
                            toggle={() => this.toggleOpen('scrollable')}
                            banner={scrollableBanner}
                            scrollable
                        >
                            <div style={{paddingLeft: '2rem'}}>
                                {"We're no strangers to love. You know the rules and so do I. A full commitment's what I'm thinking of. You wouldn't get this from any other guy. I just wanna tell you how I'm feeling. Gotta make you understand. Never gonna give you up. Never gonna let you down. Never gonna run around and desert you. Never gonna make you cry. Never gonna say goodbye. Never gonna tell a lie and hurt you."
                                    .split('').map((char, index) => <div key={index}>{char}</div>)
                                }
                            </div>
                        </Modal>
                    </Col>
                </Row>
                <Row className="mt-2">
                    <Col>
                        <Button btnStyle="primary" block onClick={() => this.toggleOpen('scrollableBtns')}>Modal with Scrollable Content & Button Bar</Button>
                        <Modal
                            isOpen={this.state.scrollableBtns}
                            toggle={() => this.toggleOpen('scrollableBtns')}
                            banner={scrollableBanner}
                            buttons={scrollableButtons}
                            scrollable
                        >
                            <div>
                                {"We're no strangers to love. You know the rules and so do I. A full commitment's what I'm thinking of. You wouldn't get this from any other guy. I just wanna tell you how I'm feeling. Gotta make you understand. Never gonna give you up. Never gonna let you down. Never gonna run around and desert you. Never gonna make you cry. Never gonna say goodbye. Never gonna tell a lie and hurt you."
                                    .split('').map((char, index) => <div key={index}>{char}</div>)
                                }
                            </div>
                        </Modal>
                    </Col>
                </Row>
                <Row className="mt-2">
                    <Col>
                        <Button btnStyle="primary" block onClick={() => this.toggleOpen('staticBackdrop')}>Modal w/ UnClickable Background</Button>
                        <Modal
                            toggle={() => this.toggleOpen('staticBackdrop')}
                            isOpen={this.state.staticBackdrop}
                            banner={basicBanner}
                            buttons={basicButtons}
                            staticBackdrop
                        >
                            Modal w/ UnClickable Background
                        </Modal>
                    </Col>
                </Row>
                <Row className="mt-2">
                    <Col>
                        <Button btnStyle="primary" block onClick={() => this.toggleOpen('backdrop')}>Modal without backdrop</Button>
                        <Modal
                            isOpen={this.state.backdrop}
                            toggle={() => this.toggleOpen('backdrop')}
                            backdrop={false}
                        >
                            This modal has no backdrop
                        </Modal>
                    </Col>
                </Row>
                <Row className="mt-2">
                    <Col>
                        <Button btnStyle="primary" block onClick={() => this.toggleOpen('error')}>Modal with error</Button>
                        <Modal
                            isOpen={this.state.error}
                            toggle={() => this.toggleOpen('error')}
                            error={errorExample}
                        >
                            This modal has an error
                        </Modal>
                    </Col>
                </Row>
                <Row className="mt-2">
                    <Col>
                        <Button btnStyle="primary" block onClick={() => this.toggleOpen('passedHeader')}>Basic Modal Template with Custom Header</Button>
                        <Modal
                            isOpen={this.state.passedHeader}
                            toggle={() => this.toggleOpen('passedHeader')}
                            banner={basicBanner}
                        >
                            <ModalHeader>
                                <Icon type="x-circle" onClick={() => this.toggleOpen('passedHeader')} aria-label="Close" />
                            </ModalHeader>
                            Testing a basic modal with custom ModalHeader
                        </Modal>
                    </Col>
                </Row>
                <Row className="mt-2">
                    <Col>
                        <Button btnStyle="primary" block onClick={() => this.toggleOpen('passedBody')}>Basic Modal Template with Custom Body</Button>
                        <Modal
                            isOpen={this.state.passedBody}
                            toggle={() => this.toggleOpen('passedBody')}
                            banner={basicBanner}
                            error={{type:'danger', message: 'With an error'}}
                        >
                            <ModalBody>
                                Testing a basic modal with custom ModalBody
                            </ModalBody>
                            Sadly, this child will never appear because we only care what's in the body
                        </Modal>
                    </Col>
                </Row>
                <Row className="mt-2">
                    <Col>
                        <Button btnStyle="primary" block onClick={() => this.toggleOpen('passedFooter')}>Basic Modal Template with Custom Footer</Button>
                        <Modal
                            isOpen={this.state.passedFooter}
                            toggle={() => this.toggleOpen('passedFooter')}
                            banner={basicBanner}
                            buttons={basicButtons}
                        >
                            <ModalFooter>
                                <div style={{flexBasis: '100%', textAlign: 'center'}}>Testing a basic modal with custom ModalFooter.</div>
                                <div style={{flexBasis: '100%', textAlign: 'center'}}>Notice that any buttons will render before this content.</div>
                            </ModalFooter>
                        </Modal>
                    </Col>
                </Row>
                <Row className="mt-2">
                    <Col>
                        <Button btnStyle="primary" block onClick={() => this.toggleOpen('passedBanner')}>Basic Modal Template with Custom Banner</Button>
                        <Modal
                            isOpen={this.state.passedBanner}
                            toggle={() => this.toggleOpen('passedBanner')}
                            banner={basicBanner}
                            buttons={basicButtons}
                        >
                            <BannerModal title="Custom Banner">
                                <p>Banner prop will be ignored</p>
                            </BannerModal>
                        </Modal>
                    </Col>
                </Row>
                <Row className="mt-2">
                    <Col>
                        <Button btnStyle="primary" block onClick={() => this.toggleOpen('overlayHeader')}>Basic Modal Template with Overlay Header</Button>
                        <Modal
                            isOpen={this.state.overlayHeader}
                            toggle={() => this.toggleOpen('overlayHeader')}
                            banner={basicBanner}
                            buttons={basicButtons}
                            overlayHeader
                        >
                        </Modal>
                    </Col>
                </Row>
            </div>
        )
    }
}
