.form-group {
    .Select.form-control {
        border: none;
        border-bottom: 2px solid var(--inputBorder);
        border-radius: var(--inputBorderRadius);
        background-color: var(--inputBackground);
        padding: 0;

        .Select-control {
            color: var(--inputText);
            background-color: var(--inputBackground);
            border: none;
            border-radius: var(--inputBorderRadius);
        }

        &.is-disabled {
            .Select-control {
                background-color: var(--inputDisabledBackground);
                border-color: var(--inputDisabledBorder);
            }
        }

        &.is-focused {
            background-color: var(--inputFocusBackground);

            &:not(.is-open) > .Select-control {
                border: 0;
                box-shadow: none;
            }

            &:not(.is-open) {
                border-color: var(--inputFocusBorder);
            }

            &.is-open {
                border-bottom-left-radius: 0;
                border-bottom-right-radius: 0;

                .Select-control {
                    border-bottom-left-radius: 0;
                    border-bottom-right-radius: 0;
                }
            }

            .Select-control {
                background-color: var(--inputFocusBackground);

                .Select-clear-zone {
                    color: var(--inputFocusBorder);
                }

                .Select-arrow-zone .Select-arrow {
                    border-color: var(--inputFocusBorder) transparent transparent;
                }
            }
        }
    }

    &.has-danger {
        .Select.form-control {
            border-bottom-color: var(--inputDanger);
        }
    }
}

.Select-control {
    height: 48px;

    .Select-clear-zone {
        color: var(--inputBorder);
    }

    .Select-arrow-zone .Select-arrow {
        border-color: var(--inputBorder) transparent transparent;
    }
}

.Select--sm {
    &.Select--single > .Select-control .Select-value,
    .Select-placeholder {
        padding: $input-padding-sm;
    }

    .Select-input {
        padding-left: $input-padding-x-sm;
        padding-top: $input-padding-y-sm;
        height: 31px;
    }

    .Select-control {
        height: 31px;
    }
}

.Select--multi .Select-multi-value-wrapper {
    padding: calc(#{$input-padding-y-top} - 5px) $input-padding-x $input-padding-y calc(#{$input-padding-x} - 5px);
    line-height: 1;

    .Select-value {
        font-size: .75rem;
        line-height: 1.25;
        color: var(--selectPillText);
        background-color: var(--selectPillBackground);
        border-color: var(--selectPillBorder);

        .Select-value-icon {
            border-color: var(--selectPillBorder);
            padding: 0 4px;
        }

        .Select-value-label {
            padding: 0 4px;
        }
    }

    .Select-input {
        margin-top: 5px;
        margin-left: 5px;
        height: inherit;
    }
}

.Select--single > .Select-control .Select-value,
.Select-placeholder {
    padding: $input-padding;
    line-height: 1.25;
    color: var(--inputPlaceholder);
}

.Select.has-value.Select--single {
    .Select-control .Select-value .Select-value-label {
        color: var(--inputText);

        .noBorder-input {
            padding: 0;
            border: none;
        }
    }

    &.is-disabled > .Select-control .Select-value .Select-value-label {
        color: var(--inputDisabledText);
    }
}

.Select-input {
    padding-left: $input-padding-x;
    padding-top: $input-padding-y-top;

    input {
        padding: 0;
    }
}

.Select-menu-outer {
    border-color: var(--inputFocusBorder);
    margin-top: 0;
    z-index: 50;

    .Select-menu .Select-option {
        &:not(.is-focused):not(.is-selected) {
            background-color: var(--inputFocusBackground);
            color: var(--inputText);
        }

        &.is-focused {
            background-color: var(--selectListItemHoverBackground);
        }

        &.is-selected {
            background-color: var(--selectListItemSelectedBackground);
        }
    }
}
