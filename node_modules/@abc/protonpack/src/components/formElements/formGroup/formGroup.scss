.form-group.has-feedback {
    margin-bottom: .5rem;
}

.form-group-sm,
select.form-group-sm {
    margin-bottom: .3125rem;
}

.form-control-feedback {
    font-size: .75rem;
    font-weight: bold;
}

%input {
    border: none;
    border-bottom: 2px solid var(--inputBorder);
    border-radius: var(--inputBorderRadius);
    color: var(--inputText);
    background-color: var(--inputBackground);
}

%inputFocus {
    border: none;
    border-bottom: 2px solid var(--inputFocusBorder);
    color: var(--inputText);
    background: var(--inputFocusBackground);
}

%inputDisabled {
    background-color: var(--inputDisabledBackground);
    border-color: var(--inputDisabledBorder);
    color: var(--inputDisabledText); // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
    opacity: 1;
}

.form-group {
    .label-group .form-control,
    .fauxInput,
    textarea.form-control {
        @extend %input;

        padding: $input-padding;

        &:focus,
        &.fauxInput--focus {
            @extend %inputFocus;
        }

        &::-webkit-input-placeholder {
            color: var(--inputPlaceholder);
            opacity: 1;
        }

        &::-moz-placeholder {
            color: var(--inputPlaceholder);
            opacity: 1;
        }

        &:-ms-input-placeholder {
            color: var(--inputPlaceholder);
            opacity: 1;
        }

        &::placeholder {
            color: var(--inputPlaceholder);
            opacity: 1;
        }

        &[readonly]:focus,
        &:disabled,
        &[readonly] {
            @extend %inputDisabled;

            &::-webkit-input-placeholder {
                color: var(--inputDisabledPlaceholder);
                opacity: 1;
            }

            &::-moz-placeholder {
                color: var(--inputDisabledPlaceholder);
                opacity: 1;
            }

            &:-ms-input-placeholder {
                color: var(--inputDisabledPlaceholder);
                opacity: 1;
            }

            &::placeholder {
                color: var(--inputDisabledPlaceholder);
                opacity: 1;
            }
        }

        &.form-control-success {
            border-bottom-color: var(--inputSuccess);
        }

        &.form-control-warning {
            border-bottom-color: var(--inputWarning);
        }

        &.form-control-danger {
            border-bottom-color: var(--inputDanger);
        }

        &.form-control-sm {
            padding: $input-padding-sm;
        }

        &.form-control-success,
        &.form-control-warning,
        &.form-control-danger,
        *[class^="form-control"] {
            background-image: none;
        }
    }

    .label-group.label-textarea > .label-raised {
        margin: 0;
        width: calc(100% - var(--scrollbarWidth));
    }

    .input-group {
        @extend %input;

        input,
        .input-group-icon {
            border: none;
        }

        &.input-group-focus {
            @extend %inputFocus;

            .form-control {
                color: var(--inputText);
            }
        }

        &.input-group-disabled {
            @extend %inputDisabled;
        }

        .form-control {
            padding: $input-padding;

            &.form-control-sm {
                padding: $input-padding-sm;
            }

            .form-control-success,
            .form-control-warning,
            .form-control-danger,
            *[class^="form-control"] {
                background-image: none;
            }
        }

        .form-control,
        .input-group-icon {
            background: transparent;
        }
    }

    .fauxInput.fauxInput--noPadding {
        padding: 0;
    }

    &.has-danger {
        .input-group {
            border-bottom-color: var(--inputDanger);

            .form-control-feedback {
                color: var(--inputDanger);
            }
        }

        .form-control-feedback {
            color: var(--inputDanger);
        }
    }

    &.has-success {
        .input-group {
            border-bottom-color: var(--inputSuccess);

            .form-control-feedback {
                color: var(--inputSuccess);
            }
        }

        .form-control-feedback {
            color: var(--inputSuccess);
        }
    }

    &.has-warning {
        .input-group {
            border-bottom-color: var(--inputWarning);

            .form-control-feedback {
                color: var(--inputWarning);
            }
        }

        .form-control-feedback {
            color: var(--inputWarning);
        }
    }

    &.has-danger,
    &.has-success,
    &.has-warning {
        .input-group {
            .input-group-focus .input-group-addon {
                color: var(--inputFocusBorder);
            }
        }

        .input-group-addon {
            color: var(--inputPlaceholder);
        }
    }
}