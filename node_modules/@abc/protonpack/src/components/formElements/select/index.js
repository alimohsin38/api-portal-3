import React, {Component} from 'react'
import PropTypes from 'prop-types'

export default class Select extends Component {
    buildClasses(className, size) {
        let classes = size ? `form-control form-control-${size}` : 'form-control'
        if (className) {
            classes += ` ${className}`
        }

        return classes
    }

    renderOpts(opts) {
        if (opts.length > 1) {
            return (
                opts.map((opt, i) => <option key={i} value={opt.props.value} data-abc-id={`option-${i}`}>{opt.props.children}</option>)
            )
        } else if (!opts.props.value) {
            return (
                <option key="1" data-abc-id="option-0">{opts.props.children}</option>
            )
        }

        return (
            <option key="1" value={opts.props.value} data-abc-id="option-0">{opts.props.children}</option>
        )
    } 

    render() {
        const {className, defaultOption, children, statusMessage, size, ...remain} = this.props // eslint-disable-line no-unused-vars

        const classes = this.buildClasses(className, size)

        return (
            <select className={classes} {...remain}>
                {defaultOption && <option data-abc-id="defaultOption" value="">{defaultOption}</option>}
                {this.renderOpts(children)}
            </select>
        )
    }
}

Select.propTypes = {
    children: PropTypes.node.isRequired,
    defaultOption: PropTypes.string,
    className: PropTypes.string,
    id: PropTypes.string,
    name: PropTypes.string,
    size: PropTypes.string,
    statusMessage: PropTypes.object,
}