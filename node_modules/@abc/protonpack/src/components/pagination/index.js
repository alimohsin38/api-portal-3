import React, {Component} from 'react'
import PropTypes from 'prop-types'

export default class Pagination extends Component {
    constructor(props) {
        super(props)

        this.pageText = {
            forward: 'Next',
            back: 'Prev',
        }
    }

    clickEventHandler(e, pageNumber, handleClick) {
        e.preventDefault()
        handleClick(pageNumber)
    }
  
    buildClasses(props) {
        const classes = ['pagination']

        if (props.size) {
            classes.push(`pagination-${props.size}`)
        }

        if (props.justifyContent) {
            classes.push(`justify-content-${props.justifyContent}`)
        }

        if (props.className) {
            classes.push(props.className)
        }

        return classes.join(' ').trim()
    }
 
    buildItemClasses(pageNumberText) {
        const classes = ['page-item']

        if (pageNumberText === this.props.currentPage) {
            classes.push('active')
        } else if (this.props.currentPage === 1 && pageNumberText === this.pageText.back) {
            classes.push('disabled')
        } else if (this.props.currentPage === this.props.totalPages && pageNumberText === this.pageText.forward) {
            classes.push('disabled')
        }

        return classes.join(' ').trim()
    }

    renderPageItem(pageNumber, handleClick, pageNumberText = pageNumber) {
        return (
            <li className={this.buildItemClasses(pageNumberText)} key={pageNumberText}>
                <a className="page-link" href="#" onClick={e => this.clickEventHandler(e, pageNumber, handleClick)}>{pageNumberText}</a>
            </li>
        )
    }

    render() {
        const {currentPage, totalPages, handleClick, size, justifyContent, className, ...remain} = this.props
        const props = {currentPage, totalPages, handleClick, size, justifyContent, className}

        const pages = []
        pages.push(this.renderPageItem(currentPage - 1, handleClick, this.pageText.back))
        for (let i = 1; i <= totalPages; i++) {
            pages.push(this.renderPageItem(i, handleClick))
        }
        pages.push(this.renderPageItem(currentPage + 1, handleClick, this.pageText.forward))

        return (
            <ul className={this.buildClasses(props)} {...remain}>{pages}</ul>
        )
    }
}

Pagination.propTypes = {
    totalPages: PropTypes.number.isRequired,
    currentPage: PropTypes.number.isRequired,
    handleClick: PropTypes.func.isRequired,
    size: PropTypes.string,
    justifyContent: PropTypes.string,
    className: PropTypes.string,
}