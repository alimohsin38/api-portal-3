import React from 'react'
import {shallow} from 'enzyme'
import ProgressBar from './'

const prefix = ''

describe('<ProgressBar />', () => {
    describe('Test basic render', () => {
        const progressBar = shallow(
            <ProgressBar />
        )

        it('Should have default classes', () => {
            expect(progressBar.hasClass(`${prefix}progress-bar`)).toBe(true)
            expect(progressBar.hasClass(`${prefix}progress-bar--size_md`)).toBe(true)
        })
    })

    describe('Test class name prop', () => {
        const progressBar = shallow(
            <ProgressBar className="fake-class" />
        )

        it('Should have default classes', () => {
            expect(progressBar.hasClass(`${prefix}progress-bar`)).toBe(true)
            expect(progressBar.hasClass(`${prefix}progress-bar--size_md`)).toBe(true)
        })
        it('Should have passed in class', () => {
            expect(progressBar.hasClass('fake-class')).toBe(true)
        })
    })

    describe('Test border prop', () => {
        const progressBar = shallow(
            <ProgressBar border />
        )

        it('Should have default classes', () => {
            expect(progressBar.hasClass(`${prefix}progress-bar`)).toBe(true)
            expect(progressBar.hasClass(`${prefix}progress-bar--size_md`)).toBe(true)
        })
        it('Should have passed in class', () => {
            expect(progressBar.hasClass(`${prefix}progress-bar--border`)).toBe(true)
        })
    })

    describe('Test border prop', () => {
        const progressBar = shallow(
            <ProgressBar innerRadius />
        )

        it('Should have innerRadius class', () => {
            const progress = progressBar.find('.progress')
            expect(progress.hasClass(`${prefix}progress--innerRadius`)).toBe(true)
        })
    })

    describe('Test background prop', () => {
        const styles = [
            'none',
            'primary',
            'secondary',
            'warning',
            'info',
            'danger',
            'success',
        ]

        styles.forEach((style) => {
            const progressBar = shallow(<ProgressBar background={style} />)
            it(`Should have background '${style}' class`, () => {
                expect(progressBar.hasClass(`${prefix}progress-bar--background_${style}`)).toBe(true)
            })
        })
    })

    describe('Test barStyle prop', () => {
        const styles = [
            'disabled',
            'primary',
            'secondary',
            'warning',
            'info',
            'danger',
            'danger-light',
            'success',
            'success-light',
        ]

        styles.forEach((style) => {
            const progressBar = shallow(<ProgressBar barStyle={style} />)
            it(`Should have style '${style}' class`, () => {
                expect(progressBar.hasClass(`${prefix}progress-bar--style_${style}`)).toBe(true)
            })
        })
    })

    describe('Test size prop', () => {
        const styles = [
            'xs',
            'sm',
            'md',
            'lg',
            'xl',
        ]

        styles.forEach((style) => {
            const progressBar = shallow(<ProgressBar size={style} />)
            it(`Should have size '${style}' class`, () => {
                expect(progressBar.hasClass(`${prefix}progress-bar--size_${style}`)).toBe(true)
            })
        })
    })
})