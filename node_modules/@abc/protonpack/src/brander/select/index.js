import React, {Component} from 'react'
import PropTypes from 'prop-types'
import {Row, Col} from 'layout/export'
import ColorPicker from '../colorPicker'
import {FormGroup, ReactSelect, Label} from 'formElements/export'
import './selectBrander.scss'

class SelectBrander extends Component {
    constructor(props) {
        super(props)

        this.state = {
            itemType: '',
        }
    }

    render() {
        const {styles} = this.props
        const {itemType} = this.state

        return (
            <Row xs={{justifyContent: 'center'}}>
                <Col sm={12}>
                    <FormGroup size="sm">
                        <Label>Item Type</Label>
                        <ReactSelect
                            size="sm"
                            options={[{value: 'item', label: 'List'}, {value: 'pill', label: 'Pill'}]}
                            onChange={itemType => this.setState({itemType})}
                            value={itemType}
                        />
                    </FormGroup>
                </Col>
                <Col>
                    {(itemType === 'item') &&
                        <Row>
                            <Col sm={6}>
                                <ColorPicker
                                    customProperty="--selectListItemSelectedBackground"
                                    label="Selected"
                                    className="select-brander-list-item-selected-background"
                                    color={String(styles.getPropertyValue('--selectListItemSelectedBackground')).trim()}
                                />
                            </Col>
                            <Col sm={6}>
                                <ColorPicker
                                    customProperty="--selectListItemHoverBackground"
                                    label="Hovered"
                                    className="select-brander-list-item-hover-background"
                                    color={String(styles.getPropertyValue('--selectListItemHoverBackground')).trim()}
                                />
                            </Col>
                        </Row>
                    }
                    {(itemType === 'pill') &&
                        <Row>
                            <Col sm={12}>
                                <ColorPicker
                                    customProperty="--selectPillBackground"
                                    label="Background"
                                    className=""
                                    color={String(styles.getPropertyValue('--selectPillBackground')).trim()}
                                />
                            </Col>
                            <Col sm={6}>
                                <ColorPicker
                                    customProperty="--selectPillText"
                                    label="Text"
                                    className="select-brander-pill-text"
                                    color={String(styles.getPropertyValue('--selectPillText')).trim()}
                                />
                            </Col>
                            <Col sm={6}>
                                <ColorPicker
                                    customProperty="--selectPillBorder"
                                    label="Border"
                                    className="select-brander-pill-border"
                                    color={String(styles.getPropertyValue('--selectPillBorder')).trim()}
                                />
                            </Col>
                        </Row>
                    }
                </Col>
            </Row>
        )
    }
}

SelectBrander.propTypes = {
    styles: PropTypes.object.isRequired,
}

export default SelectBrander