import React, {Component} from 'react'
import PropTypes from 'prop-types'
import {Row, Col} from 'layout/export'
import ColorPicker from '../colorPicker'
import {FormGroup, LabelGroup, ReactSelect, Label} from 'formElements/export'
import {datePickerDayTypes, calendarElements} from '../data'
import BranderRange from '../common/range/BranderRange'
import './datePickerBrander.scss'

class DatePickerBrander extends Component {
    constructor(props) {
        super(props)

        this.state = {
            dayType: '',
            element: '',
        }
    }

    render() {
        const {styles} = this.props
        const {dayType, element} = this.state

        return (
            <Row xs={{justifyContent: 'center'}}>
                <Col sm={12}>
                    <FormGroup size="sm">
                        <Label>Day Type</Label>
                        <ReactSelect
                            size="sm"
                            options={calendarElements}
                            onChange={element => this.setState({element})}
                            value={element}
                        />
                    </FormGroup>
                </Col>
                {element === 'calendar' &&
                    <Col sm={12}>
                        <Row>
                            <Col sm={12}>
                                <ColorPicker
                                    customProperty="--datePickerBackground"
                                    label="Background"
                                    className="date-picker-brander-background"
                                    color={String(styles.getPropertyValue('--datePickerBackground')).trim()}
                                    isCSSProperty
                                />
                            </Col>
                            <Col sm={6}>
                                <FormGroup size="sm" style={{marginBottom: 0}}>
                                    <LabelGroup label="Border Radius" standaloneLabel>
                                        <BranderRange
                                            id="datePickerBorderRadius"
                                            CSSProperty="--datePickerBorderRadius"
                                            styles={styles}
                                            min={0}
                                            max={30}
                                        />
                                    </LabelGroup>
                                </FormGroup>
                            </Col>
                            <Col sm={6}>
                                <ColorPicker
                                    customProperty="--datePickerHeaderText"
                                    label="Header Text"
                                    className="date-picker-brander-header-text"
                                    color={String(styles.getPropertyValue('--datePickerHeaderText')).trim()}
                                />
                            </Col>
                            <Col sm={6}>
                                <ColorPicker
                                    customProperty="--datePickerWeekDayText"
                                    label="Week Day Text"
                                    className="date-picker-brander-week-day-text"
                                    color={String(styles.getPropertyValue('--datePickerWeekDayText')).trim()}
                                />
                            </Col>
                            <Col sm={6}>
                                <ColorPicker
                                    customProperty="--datePickerBorder"
                                    label="Border"
                                    className="date-picker-brander-border"
                                    color={String(styles.getPropertyValue('--datePickerBorder')).trim()}
                                />
                            </Col>
                            <Col sm={6}>
                                <ColorPicker
                                    customProperty="--datePickerShadow"
                                    label="Shadow"
                                    className="date-picker-brander-shadow"
                                    showAlpha
                                    color={String(styles.getPropertyValue('--datePickerShadow')).trim()}
                                />
                            </Col>
                            <Col sm={6}>
                                <ColorPicker
                                    customProperty="--datePickerNavIcon"
                                    label="Nav Icon"
                                    className="date-picker-brander-nav-icon"
                                    color={String(styles.getPropertyValue('--datePickerNavIcon')).trim()}
                                />
                            </Col>
                        </Row>
                    </Col>
                }
                {element === 'day' &&
                    <Col sm={12}>
                        <Row>
                            <Col sm={12}>
                                <FormGroup size="sm">
                                    <Label>Day Type</Label>
                                    <ReactSelect
                                        size="sm"
                                        options={datePickerDayTypes}
                                        onChange={dayType => this.setState({dayType})}
                                        value={dayType}
                                    />
                                </FormGroup>
                            </Col>
                            <Col sm={6}>
                                <ColorPicker
                                    customProperty={`--datePickerDay${dayType}Background`}
                                    label="Background"
                                    className={`date-picker-brander-day-${dayType ? `${dayType.toLowerCase()}-` : ''}background`}
                                    color={String(styles.getPropertyValue(`--datePickerDay${dayType}Background`)).trim()}
                                />
                            </Col>
                            <Col sm={6}>
                                <ColorPicker
                                    customProperty={`--datePickerDay${dayType}Text`}
                                    label="Text"
                                    className={`date-picker-brander-day-${dayType ? `${dayType.toLowerCase()}-` : ''}text`}
                                    color={String(styles.getPropertyValue(`--datePickerDay${dayType}Text`)).trim()}
                                />
                            </Col>
                            <Col sm={6}>
                                <ColorPicker
                                    customProperty={`--datePickerDay${dayType}Border`}
                                    label="Border"
                                    className={`date-picker-brander-day-${dayType ? `${dayType.toLowerCase()}-` : ''}border`}
                                    color={String(styles.getPropertyValue(`--datePickerDay${dayType}Border`)).trim()}
                                />
                            </Col>
                        </Row>
                    </Col>
                }
            </Row>
        )
    }
}

DatePickerBrander.propTypes = {
    styles: PropTypes.object.isRequired,
}

export default DatePickerBrander