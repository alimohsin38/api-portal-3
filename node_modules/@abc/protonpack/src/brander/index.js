import React, {Component} from 'react'
import {Row, Col} from 'layout/export'
import {ReactSelect, FormGroup} from 'formElements/export'
import Icon from '@abc/quarkicons'
import BodyBrander from './body'
import LinkBrander from './link'
import ButtonBrander from './button'
import FormBrander from './form'
import InputBrander from './input'
import SelectBrander from './select'
import CheckboxBrander from './checkbox'
import UfoBrander from './ufo'
import AlertBrander from './alert'
import ModalBrander from './modal'
import PopoverBrander from './popover'
import TooltipBrander from './tooltip'
import DividerBrander from './divider'
import CardBrander from './card'
import InlineHoverBrander from './inlineHover'
import DatePickerBrander from './datePicker'
import {brandingOptions} from './data'
import './brander.scss'

class Brander extends Component {
    constructor(props) {
        super(props)

        this.state = {
            selectedElement: '',
            styles: getComputedStyle(document.documentElement),
            show: false,
        }

        this.handleElementChange = this.handleElementChange.bind(this)
    }

    handleElementChange(element) {
        this.setState({selectedElement: element})
    }

    getBranders() {
        return [
            {body: <BodyBrander styles={this.state.styles} />},
            {link: <LinkBrander styles={this.state.styles} />},
            {button: <ButtonBrander styles={this.state.styles} />},
            {form: <FormBrander styles={this.state.styles} />},
            {input: <InputBrander styles={this.state.styles} />},
            {select: <SelectBrander styles={this.state.styles} />},
            {checkbox: <CheckboxBrander styles={this.state.styles} />},
            {ufo: <UfoBrander styles={this.state.styles} />},
            {alert: <AlertBrander styles={this.state.styles} />},
            {modal: <ModalBrander styles={this.state.styles} />},
            {popover: <PopoverBrander styles={this.state.styles} />},
            {tooltip: <TooltipBrander styles={this.state.styles} />},
            {divider: <DividerBrander styles={this.state.styles} />},
            {card: <CardBrander styles={this.state.styles} />},
            {inlineHover: <InlineHoverBrander styles={this.state.styles} />},
            {datePicker: <DatePickerBrander styles={this.state.styles} />},
        ]
    }

    renderElementBrander() {
        const {selectedElement} = this.state
        const componentBrander = this.getBranders().find(
            brander => Object.keys(brander)[0] === selectedElement
        )

        return componentBrander ? componentBrander[selectedElement] : null
    }

    render() {
        const {show} = this.state
        const classes = this.state.show ? 'brander-container' : 'brander-container brander-hide'
        const iconType = show ? 'arrow-left-sm' : 'arrow-right-sm'

        return (
            <Row xs={{justifyContent: 'center'}} className={classes}>
                <Col sm={12} className='brander-header'>
                    <Row>
                        {show &&
                            <Col sm={{col: 10, alignSelf: 'center'}}>
                                <div style={{display: 'flex'}}>
                                    <h4>Brander</h4>
                                </div>
                            </Col>
                        }
                        <Col sm={2} style={{textAlign: 'right'}}>
                            <Icon type={iconType} onClick={() => this.setState({show: !show})} />
                        </Col>
                    </Row>
                </Col>
                {show &&
                    <Col sm={12}>
                        <Row>
                            <Col sm={12}>
                                <FormGroup size="sm">
                                    <ReactSelect
                                        size="sm"
                                        options={brandingOptions}
                                        onChange={this.handleElementChange}
                                        value={this.state.selectedElement}
                                        placeholder="Select Element..."
                                    />
                                </FormGroup>
                            </Col>
                            <Col sm={12}>
                                {this.renderElementBrander()}
                            </Col>
                        </Row>
                    </Col>
                }
            </Row>
        )
    }
}

export default Brander