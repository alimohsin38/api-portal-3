import React from 'react'
import {Indicator} from '@abc/protonpack'
import {mount} from 'enzyme'
import ModalBanner from './'

describe('ModalBanner', () => {
    describe('render a basic modal banner', () => {
        const wrapper = mount(
            <ModalBanner title="fake-banner-title" />
        )

        const wrapperElement = wrapper.find('.container')
        const titleElement = wrapperElement.childAt(0)

        it('should render a div.container', () => {
            expect(wrapperElement.type()).toBe('div')
        })

        it('should have the data-abc-id of modalBanner', () => {
            expect(wrapperElement.prop('data-abc-id')).toBe('modalBanner')
        })

        it('should have a title element', () => {
            expect(titleElement.type()).toBe('h1')
            expect(titleElement.text()).toBe('fake-banner-title')
            expect(titleElement.hasClass('title')).toBe(true)
        })
    })

    describe('render a modal banner w/props', () => {
        const wrapper = mount(
            <ModalBanner indicator="add" title="fake-banner-title" className="fake-class-name">
                <h6>fake-subtitle</h6>
            </ModalBanner>
        )

        const wrapperElement = wrapper.find('.container')
        const indicatorContainer = wrapperElement.childAt(0)
        const subtitleElement = wrapperElement.childAt(2)

        it('should have a custom className', () => {
            expect(wrapperElement.hasClass('fake-class-name')).toBe(true)
        })

        it('should have an Indicator', () => {
            expect(indicatorContainer.type()).toBe(Indicator)
            expect(indicatorContainer.hasClass('indicator')).toBe(true)
        })

        it('should have a subtitle', () => {
            expect(subtitleElement.contains(<h6>fake-subtitle</h6>)).toBe(true)
            expect(subtitleElement.hasClass('bannerContent')).toBe(true)
        })
    })
})