import React from 'react'
import IconGroupLink from './'
import Icon from '@abc/quarkicons'
import {mount} from 'enzyme'

describe('<IconGroupLink />', () => {
    describe('Test basic render', () => {
        const iconGroupLink = mount(
            <IconGroupLink type="pencil" onClick={() => true} className="fake-icon-group-link-class">
                Edit Something
            </IconGroupLink>
        )

        it('should render a container with classes', () => {
            expect(iconGroupLink.hasClass('fake-icon-group-link-class')).toBe(true)
        })

        it('should render an icon', () => {
            const icon = iconGroupLink.childAt(0)
            expect(icon.type()).toBe(Icon)
        })

        it('should render the label', () => {
            const label = iconGroupLink.childAt(1)
            expect(label.type()).toBe('span')
            expect(label.text()).toEqual('Edit Something')
        })
    })

    describe('Test disable prop', () => {
        let clickCount = 0
        const handleClick = () => clickCount += 1

        const iconGroupLink = mount(
            <IconGroupLink type="pencil" disabled onClick={handleClick}>
                Edit Something
            </IconGroupLink>
        )

        const button = iconGroupLink.find('button')

        it('should render the label', () => {
            expect(button.props().disabled).toBe(true)
        })
        it('should ignore clicks', () => {
            button.simulate('click')
            expect(clickCount).toBe(0)
        })
    })

    describe('Test onClick prop', () => {
        const handleClick = jest.fn()

        const iconGroupLink = mount(
            <IconGroupLink type="pencil" onClick={handleClick}>
                Edit Something
            </IconGroupLink>
        )

        it('should call onClick handler', () => {
            iconGroupLink.simulate('click')
            expect(handleClick).toHaveBeenCalled()
        })
    })
})