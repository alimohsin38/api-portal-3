import React from 'react'
import {mount} from 'enzyme'
import ZipCode from './'

describe('ZipCode', () => {
    const defaultZip = '72015'

    describe('render an zip code in the proper format', () => {
        const zipCode = mount(
            <ZipCode displayData={defaultZip} />
        )

        const zipCodeContainer = zipCode.find('span')

        it('should be a span', () => {
            expect(zipCodeContainer.matchesElement(<span>{defaultZip}</span>)).toBe(true)
        })

        it('should have the data-abc-id of zipCode', () => {
            expect(zipCodeContainer.prop('data-abc-id')).toBe('zipCode')
        })
    })

    describe('render an zip code in the proper format', () => {
        const zipCode = mount(
            <ZipCode displayData={`${defaultZip}1234`} />
        )

        const zipCodeContainer = zipCode.find('span')

        it('should be a span', () => {
            expect(zipCodeContainer.matchesElement(<span>{`${defaultZip}-1234`}</span>)).toBe(true)
        })

        it('should have the data-abc-id of zipCode', () => {
            expect(zipCodeContainer.prop('data-abc-id')).toBe('zipCode')
        })
    })

    describe('render a null when nothing is passed in', () => {
        const zipCode = mount(
            <ZipCode displayData="" />
        )

        const zipCodeContainer = zipCode.find('span')

        it('should be an empty span', () => {
            expect(zipCodeContainer.html()).toBe('<span data-abc-id="zipCode"></span>')
        })
    })

    describe('should allow extra properties', () => {
        const zipCode = mount(
            <ZipCode displayData={defaultZip} role="list" />
        )

        const zipCodeContainer = zipCode.find('span')

        it('should be a span', () => {
            expect(zipCodeContainer.matchesElement(<span>{defaultZip}</span>)).toBe(true)
        })
        
        it('should have the prop role: list', () => {
            expect(zipCodeContainer.prop('role')).toBe('list')
        })

        it('should have the data-abc-id of zipCode', () => {
            expect(zipCodeContainer.prop('data-abc-id')).toBe('zipCode')
        })
    })
})