import React, {Component} from 'react'
import Address from 'components/address'
import {QuickEdit} from '../../export'
import Phone from 'components/phone'
import {Email} from 'components/email/export'
import {Row, Col, Input, Select, Button, FormSection, FormGroup, Label, BaseText} from '@abc/protonpack'
import styles from './quickEdit.styl'

const defaultPhoneNumber = {number: '5018675309', extension: '1234'}
const defaultEmail = 'universityFitnessveryveryLongEmailAddress@abcfinancial.com'
const defaultAddress = {
    address1: '1562 Long Street',
    address2: '',
    city: 'Sherwood',
    state: 'AR',
    zipCode: '12345',
}

export default class QuickEditExample extends Component {
    constructor(props) {
        super(props)

        this.state = {
            isEditingPhone: false,
            isEditingAddress: false,
            isEditingEmail: false,
            phoneNumber: defaultPhoneNumber,
            address: defaultAddress,
            email: defaultEmail,
        }

        this.handlePhoneEditClick = this.handlePhoneEditClick.bind(this)
        this.handleAddressEditClick = this.handleAddressEditClick.bind(this)
        this.handlePhoneChange = this.handlePhoneChange.bind(this)
        this.handleAddressChange = this.handleAddressChange.bind(this)
        this.handleEmailEditClick = this.handleEmailEditClick.bind(this)
        this.handleEmailChange = this.handleEmailChange.bind(this)
    }

    handlePhoneEditClick() {
        this.setState({...this.state, isEditingPhone: !this.state.isEditingPhone})
    }

    handleAddressEditClick() {
        this.setState({...this.state, isEditingAddress: !this.state.isEditingAddress})
    }

    handleEmailEditClick() {
        this.setState({...this.state, isEditingEmail: !this.state.isEditingEmail})
    }

    handlePhoneChange(event) {
        const field = event.target.id
        const {phoneNumber} = this.state
        this.setState({...this.state, phoneNumber: {...phoneNumber, [field]: event.target.value}})
    }

    handleAddressChange(event) {
        const field = event.target.id
        const {address} = this.state
        this.setState({...this.state, address: {...address, [field]: event.target.value}})
    }

    handleEmailChange(event) {
        this.setState({...this.state, email: event.target.value})
    }

    render() {
        const {isEditingPhone, isEditingAddress, isEditingEmail, phoneNumber, address, email} = this.state

        return (
            <div>
                <h2>QuickEdit</h2>
                <Row>
                    <Col sm={12} lg={6} xl={4} className={styles.minHeightContainer}>
                        <QuickEdit
                            isEditing={this.state.isEditingPhone}
                            iconType="phone-thin"
                            title="PHONE"
                            onEditClick={this.handlePhoneEditClick}
                        >
                            {!isEditingPhone ?
                                <BaseText size='lg' weight='bold'>
                                    <Phone displayData={phoneNumber}/>
                                </BaseText>
                                :
                                this.renderPhoneEdit()
                            }
                        </QuickEdit>
                    </Col>
                    <Col sm={12} lg={6} xl={4}>
                        <QuickEdit
                            isEditing={isEditingAddress}
                            iconType="location-thin"
                            title="ADDRESS"
                            onEditClick={this.handleAddressEditClick}
                        >
                            {!isEditingAddress ?
                                <BaseText size='lg' weight='bold'>
                                    <Address displayData={address}/>
                                </BaseText>
                                :
                                this.renderAddressEdit()
                            }
                        </QuickEdit>
                    </Col>
                    <Col sm={12} lg={6} xl={4}>
                        <QuickEdit
                            isEditing={isEditingEmail}
                            iconType="envelope"
                            title="EMAIL"
                            onEditClick={this.handleEmailEditClick}
                            data-abc-id="quickEditEmail">
                            {!isEditingEmail ?
                                <Email displayData={email} showAddress />
                                :
                                this.renderEmailEdit()
                            }
                        </QuickEdit>
                    </Col>
                    <Col sm={12}>
                        <div>Something below</div>
                        <Input type="text" placeholder="Overlay me when edit box expands"/>
                    </Col>
                </Row>
            </div>
        )
    }

    // THIS IS NOT HOW YOU DO THIS IRL, IT IS AN EXAMPLE WITHOUT A STORE FOR YOUR UPDATES
    renderPhoneEdit() {
        return (
            <Row>
                <Col sm={12}>
                    <form>
                        <FormSection size="sm">
                            <Col sm={12}>
                                <FormGroup size="sm">
                                    <Input
                                        id="number"
                                        className="material-input"
                                        type="input"
                                        size="sm"
                                        placeholder="Phone Number"
                                        value={this.state.phoneNumber.number}
                                        onChange={this.handlePhoneChange}
                                    />
                                    <Button
                                        type="submit"
                                        btnStyle="primary"
                                        block
                                        style={{marginTop: '20px'}}
                                        size="sm"
                                        onClick={(event) => {
                                            event.preventDefault()
                                            this.handlePhoneEditClick()
                                        }}
                                    >
                                        SUBMIT
                                    </Button>
                                </FormGroup>
                            </Col>
                        </FormSection>
                    </form>
                </Col>
            </Row>
        )
    }

    renderEmailEdit() {
        return (
            <Row>
                <Col sm={12}>
                    <form>
                        <FormSection size="sm">
                            <Col sm={12}>
                                <FormGroup size="sm">
                                    <Input
                                        autoFocus
                                        type="text"
                                        maxLength="254"
                                        data-abc-id="email"
                                        className="material-input"
                                        size="sm"
                                        placeholder="Email"
                                        value={this.state.email}
                                        onChange={this.handleEmailChange}
                                    />
                                    <Button
                                        type="submit"
                                        btnStyle="primary"
                                        block
                                        style={{marginTop: '20px'}}
                                        size="sm"
                                        onClick={(event) => {
                                            event.preventDefault()
                                            this.handleEmailEditClick()
                                        }}
                                    >
                                        SUBMIT
                                    </Button>
                                </FormGroup>
                            </Col>
                        </FormSection>
                    </form>
                </Col>
            </Row>
        )
    }

    renderAddressEdit() {
        return (
            <Row>
                <Col sm={12}>
                    <form className={styles.form}>
                        <FormSection size="sm">
                            <Col sm={12}>
                                <FormGroup size="sm">
                                    <Label srOnly>Address 1</Label>
                                    <Input
                                        id="address1"
                                        className="material-input"
                                        type="input"
                                        styleType="inline"
                                        size="sm"
                                        placeholder="Address 1"
                                        value={this.state.address.address1}
                                        onChange={this.handleAddressChange}
                                    />
                                </FormGroup>
                            </Col>
                            <Col sm={12}>
                                <FormGroup size="sm">
                                    <Label srOnly>Address 2</Label>
                                    <Input
                                        id="address2"
                                        className="material-input"
                                        type="input"
                                        styleType="inline"
                                        size="sm"
                                        placeholder="Address 2"
                                        value={this.state.address.address2}
                                        onChange={this.handleAddressChange}
                                    />
                                </FormGroup>
                            </Col>
                            <Col sm={12}>
                                <FormGroup size="sm">
                                    <Label srOnly>City</Label>
                                    <Input
                                        id="city"
                                        className="material-input"
                                        type="input"
                                        styleType="inline"
                                        size="sm"
                                        placeholder="City"
                                        value={this.state.address.city}
                                        onChange={this.handleAddressChange}
                                    />
                                </FormGroup>
                            </Col>
                            <Col sm={{col: 5, noGutters: 'right'}} style={{paddingRight: '10px'}}>
                                <FormGroup size="sm">
                                    <Label srOnly>State</Label>
                                    <Select
                                        id="state"
                                        className="material-input"
                                        size="sm"
                                        onChange={this.handleAddressChange}
                                    >
                                        <option>AR</option>
                                        <option>CA</option>
                                        <option>GA</option>
                                        <option>NY</option>
                                        <option>RI</option>
                                        <option>WI</option>
                                    </Select>
                                </FormGroup>
                            </Col>
                            <Col sm={{col: 7, noGutters: 'left'}}>
                                <FormGroup size="sm">
                                    <Label srOnly>Zip Code</Label>
                                    <Input
                                        id="zipCode"
                                        className="material-input"
                                        type="input"
                                        styleType="inline"
                                        size="sm"
                                        placeholder="Zip Code"
                                        value={this.state.address.zipCode}
                                        onChange={this.handleAddressChange}
                                    />
                                </FormGroup>
                            </Col>
                        </FormSection>
                        <Button
                            type="submit"
                            btnStyle="primary"
                            block
                            style={{marginTop: '5px'}}
                            size="sm"
                            onClick={(event) => {
                                event.preventDefault()
                                this.handleAddressEditClick()
                            }}
                        >
                            SUBMIT
                        </Button>
                    </form>
                </Col>
            </Row>
        )
    }
}
