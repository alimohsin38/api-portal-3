import React, {Component} from 'react'
import PropTypes from 'prop-types'
import {BaseText} from '@abc/protonpack'
import Icon from '@abc/quarkicons'
import styles from './accordion.styl'

export default class Accordion extends Component {
    constructor(props) {
        super(props)

        this.state = {
            open: false,
        }
    }

    componentWillReceiveProps(nextProps) {
        if ('isOpen' in nextProps) {
            this.setState({open: nextProps.isOpen})
        }
    }

    componentDidMount() {
        this.setState({open: this.props.isOpen})
    }

    handleToggle(openState) {
        this.setState({open: openState}, () => this.props.onToggle(this.state.open))
    }

    render() {
        // eslint-disable-next-line no-unused-vars
        const {isOpen, children, displayContent, onToggle, ...remain} = this.props
        const open = this.state.open

        const icon = open ? 'minus-heavy' : 'plus-heavy'
        const contentClass = open ? `${styles.content} ${styles.contentActive}` : styles.content
        const maxHeight = open && this.panel ? `${this.panel.scrollHeight}px` : '0'

        return (
            <div data-abc-id="accordion" {...remain}>
                <div
                    className={styles.button}
                    onClick={() => this.handleToggle(!this.state.open)}
                    data-abc-id="accordionButton"
                >
                    <BaseText size="xs" weight="bold">
                        <Icon type={icon} className={styles.icon} />
                    </BaseText>
                    {displayContent}
                </div>
                <div
                    className={contentClass}
                    style={{maxHeight}}
                    ref={panel => this.panel = panel}
                    data-abc-id="accordionContent"
                >
                    {children}
                </div>
            </div>
        )
    }
}

Accordion.propTypes = {
    children: PropTypes.node.isRequired,
    isOpen: PropTypes.bool,
    displayContent: PropTypes.node.isRequired,
    onToggle: PropTypes.func,
}

Accordion.defaultProps = {
    onToggle: open => open,
}