import React from 'react'
import {mount} from 'enzyme'
import PopoverSelectOption from './'

const testOption = {
    group: 'fake-option-group',
    label: 'fake-option-label',
    value: 'fake-option-value',
}

describe('PopoverSelectOption', () => {
    describe('Test Elements/DOM', () => {
        let wrapper
        let fakeClickHandler

        beforeEach(() => {
            fakeClickHandler = jest.fn()
            wrapper = mount(
                <PopoverSelectOption
                    grouped={!!testOption.group}
                    disabled={testOption.disabled}
                    selected={testOption.selected}
                    onClick={fakeClickHandler}
                >
                    <div>xyz</div>
                </PopoverSelectOption>
            )
        })

        afterEach(() => {
            wrapper.unmount()
        })

        it('should be a div', () => {
            const option = wrapper.find('.popoverSelectOption')
            expect(option.matchesElement(<div><div>xyz</div></div>)).toBe(true)
        })

        it('should have the class .popoverSelectOption', () => {
            expect(wrapper.hasClass('popoverSelectOption')).toBe(true)
        })
    })

    describe('Test Events/Callbacks', () => {
        let wrapper
        let fakeClickHandler

        beforeEach(() => {
            fakeClickHandler = jest.fn()
            wrapper = mount(
                <PopoverSelectOption
                    grouped={!!testOption.group}
                    disabled={testOption.disabled}
                    selected={testOption.selected}
                    onClick={fakeClickHandler}
                >
                    <div>xyz</div>
                </PopoverSelectOption>
            )
        })

        afterEach(() => {
            wrapper.unmount()
        })

        it('should trigger "onClick" method on click', () => {
            wrapper.simulate('click')
            expect(fakeClickHandler).toHaveBeenCalled()
        })
    })
})