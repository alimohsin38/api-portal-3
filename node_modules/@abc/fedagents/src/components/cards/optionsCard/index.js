import React from 'react'
import PropTypes from 'prop-types'
import Option from './option'
import {Row, Col, BaseText, LabelGroup, Checkbox, Card} from '@abc/protonpack'
import {labels} from 'utils/staticData'
import styles from './optionsCard.styl'

const OptionsCard = (props) => {
    const {title, disabled, options, colProps, onOptionChange, onSelectAllChange, ...rest} = props
    const selectedOptions = options.filter(option => option.checked)
    const checkSelectAll = selectedOptions.length === options.length

    return (
        <Card removePadding data-abc-id="options-card" {...rest}>
            <div className={styles.headerContainer}>
                <h2 data-abc-id="header-title">{title}</h2>
                <BaseText size="md">
                    <LabelGroup
                        label={labels.selectAll}
                        check
                        inline="reverse"
                        standaloneLabel
                        id="selectAll"
                    >
                        <Checkbox
                            disabled={disabled}
                            data-abc-id="header-select-all"
                            checked={checkSelectAll}
                            onChange={onSelectAllChange}
                        />
                    </LabelGroup>
                </BaseText>
            </div>

            <div className={styles.bodyContainer} data-abc-id="body">
                <Row>
                    {options.map(option => (
                        <Col {...colProps} key={option.id}>
                            <Option {...option} onChange={onOptionChange} />
                        </Col>
                    ))}
                </Row>
            </div>
        </Card> 
    )
}

OptionsCard.propTypes = {
    colProps: PropTypes.object,
    title: PropTypes.string.isRequired,
    disabled: PropTypes.bool,
    onSelectAllChange: PropTypes.func.isRequired,
    onOptionChange: PropTypes.func.isRequired,
    options: PropTypes.arrayOf(
        PropTypes.shape({
            id: PropTypes.string,
            name: PropTypes.string,
            checked: PropTypes.bool,
            disabled: PropTypes.bool,
        })
    ).isRequired,
}

OptionsCard.defaultProps = {
    colProps: {xs: 12, lg:6},
}

export default OptionsCard