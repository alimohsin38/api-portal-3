import React from 'react'
import {shallow} from 'enzyme'
import Phone from './'

describe('Phone', () => {
    describe('render a basic phone number display', () => {
        const wrapper = shallow(
            <Phone displayData={{number: '5015551234', extension: '777'}} />
        )

        const wrapperElement = wrapper.find('div[data-abc-id="phone"]')

        it('should exist', () => {
            expect(wrapperElement.length).toBe(1)
        })

        it('should have the correctly formatted phone number', () => {
            expect(wrapperElement.text()).toBe('(501) 555-1234 Ext 777')
        })
    })

    describe('render a basic phone number display with no extension', () => {
        const wrapper = shallow(
            <Phone displayData={{number: '5015551234'}} />
        )

        const wrapperElement = wrapper.find('div[data-abc-id="phone"]')

        it('should exist', () => {
            expect(wrapperElement.length).toBe(1)
        })

        it('should have the correctly formatted phone number', () => {
            expect(wrapperElement.text()).toBe('(501) 555-1234')
        })
    })

    describe('render a basic phone number display with a blank extension', () => {
        const wrapper = shallow(
            <Phone displayData={{number: '5015551234', extension: ''}} />
        )

        const wrapperElement = wrapper.find('div[data-abc-id="phone"]')

        it('should exist', () => {
            expect(wrapperElement.length).toBe(1)
        })

        it('should have the correctly formatted phone number', () => {
            expect(wrapperElement.text()).toBe('(501) 555-1234')
        })
    })

    describe('render something with no input', () => {
        const wrapper = shallow(
            <Phone />
        )

        const wrapperElement = wrapper.find('div[data-abc-id="phone"]')

        it('should exist', () => {
            expect(wrapperElement.length).toBe(1)
        })

        it('should have the correctly formatted phone number', () => {
            expect(wrapperElement.text()).toBe('none provided')
        })
    })

    describe('render something with no number', () => {
        const wrapper = shallow(
            <Phone displayData={{}} />
        )

        const wrapperElement = wrapper.find('div[data-abc-id="phone"]')

        it('should exist', () => {
            expect(wrapperElement.length).toBe(1)
        }) 

        it('should have the correctly formatted phone number', () => {
            expect(wrapperElement.text()).toBe('none provided')
        })
    })
})