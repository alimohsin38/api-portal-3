import React, {Component} from 'react'
import PropTypes from 'prop-types'
import classnames from 'classnames'
import {Row, Col, Indicator, UserImage, VerticalDivider, BaseText} from '@abc/protonpack'
import {Typeahead, Phone} from '../../export'
import styles from './example.styl'

const dummyData = [
    {
        value: 'Ken Johnson',
        data: {
            userImage: '',
            name: 'Ken Johnson',
            email: 'kjo1212@gmail.com',
            phone: {number: '2015551212'},
        },
    },
    {
        value: 'Johanne Luise',
        data: {
            userImage: '',
            name: 'Johanne Luise',
            email: 'jojo_luise@gmail.com',
            phone: {number: '2015551213'},
            sessionInfo: 'Out of Sessions',
        },
    },
    {
        value: 'John Smith',
        data: {
            userImage: '',
            name: 'John Smith',
            email: 'stilluseshotmail@hotmail.com',
            phone: {number: '2015551234'},
        },
    },
    {
        value: 'John Wiley',
        data: {
            userImage: '',
            name: 'John Wiley',
            email: 'johnwiley@aol.com',
            phone: {number: '2015553214'},
        },
    },
    {
        value: 'John Zoidberg',
        data: {
            userImage: '',
            name: 'John Zoidberg',
            email: 'zoidey@gmail.com',
            phone: {number: '2015554433'},
        },
    },
    {
        value: 'Phillip J. Fry',
        data: {
            userImage: '',
            name: 'Phillip J. Fry',
            email: 'frydaman@gmail.com',
            phone: {number: '2015551122'},
            sessionInfo: 'All sessions reserved',
        },
    },
    {
        value: 'Bender Rodriguez',
        data: {
            userImage: '',
            name: 'Bender Rodriguez',
            email: 'masterbender@aol.com',
            phone: {number: '2015553344'},
            sessionInfo: 'All sessions reserved',
        },
    },
]

export default class TypeaheadExample extends Component {
    constructor(props) {
        super(props)

        this.state = {
            users: [],
        }

        this.searchData = this.searchData.bind(this)
    }

    item(itemProps) {
        const {displayItem, isSelected, isHovered} = itemProps
        const classes = classnames(styles.container, {[styles.selected]: isSelected}, {[styles.hovered]: isHovered})
        const userData = displayItem.data

        return (
            <div className={classes}>
                <div className={styles.userImage}>
                    <UserImage src={userData.userImage} size="2rem" />
                </div>
                <BaseText size="sm">
                    <div className={styles.name}>
                        {userData.name}
                    </div>
                </BaseText>
                <BaseText color="gray-light" weight="normal" size="sm">
                    <div className={styles.info}>
                        <span>{userData.email}</span>
                        <VerticalDivider />
                        <Phone displayData={userData.phone} />
                    </div>
                </BaseText>
                <div className={styles.sessions}>
                    {userData.sessionInfo &&
                        <div>
                            <div>
                                <Indicator type="alert" styleType="danger" className={styles.indicator} />
                            </div>
                            <BaseText color="danger" size="xs">
                                <div className={styles.sessionInfo}>{userData.sessionInfo}</div>
                            </BaseText>
                        </div>
                    }
                </div>
            </div>
        )
    }

    searchData(searchFilter) {
        let users = []
        const searchFilterLower = searchFilter.toLowerCase()

        if (searchFilter) {
            users = dummyData.filter((item) => {
                const itemVal = item.value.toLowerCase()

                return itemVal.includes(searchFilterLower)
            }).sort((a, b) => a.value - b.value)
        }

        this.setState({users})
    }

    onSubmit(value) {
        console.log(value) // eslint-disable-line no-console
    }

    render() {
        return (
            <div className={this.props.className}>
                <h2>Typeahead</h2>
                <Row>
                    <Col sm={7}>
                        <Typeahead
                            item={this.item}
                            onChange={this.searchData}
                            displayData={this.state.users}
                            onSubmit={this.onSubmit}
                            hideLabel
                            label="Empty"
                            placeholder="Empty"
                        />
                    </Col>
                </Row>
                <Row>
                    <Col sm={10}>
                        <Typeahead
                            item={this.item}
                            onChange={this.searchData}
                            displayData={this.state.users}
                            onSubmit={this.onSubmit}
                            icon={{type: 'search', position: 'right'}}
                            label="With Icon"
                        />
                    </Col>
                </Row>
                <Row>
                    <Col sm={10}>
                        <Typeahead
                            item={this.item}
                            onChange={this.searchData}
                            displayData={[]}
                            loading
                            onSubmit={this.onSubmit}
                            label="No Display Data"
                        />
                    </Col>
                </Row>
                <Row>
                    <Col sm={7}>
                        <Typeahead
                            item={this.item}
                            onChange={this.searchData}
                            displayData={this.state.users}
                            onSubmit={this.onSubmit}
                            inputClassName={styles.centeredInput}
                            icon={{type: 'search', position: 'left'}}
                            hideLabel
                            label="With Input Group Styles"
                            placeholder="testme"
                            statusMessage={{text: 'BLOW IT ALL AWAY', status: 'danger'}}
                        />
                    </Col>
                </Row>
            </div>
        )
    }
}

TypeaheadExample.propTypes = {
    className: PropTypes.string,
}
