import React, {Component} from 'react'
import PropTypes from 'prop-types'
import {Button, BaseText, Alert, BannerModal, Modal, ModalBody, ModalFooter} from '@abc/protonpack'
import {SubmitButton} from '../../export'
import texture from '../../images/texture_modal_header.png'
import styles from './confirmModal.styl'

export default class ConfirmModal extends Component {
    constructor(props) {
        super(props)

        this.state = {waiting: false}

        this.handleOk = this.handleOk.bind(this)
        this.endWaiting = this.endWaiting.bind(this)
    }

    handleOk() {
        const promise = this.props.onOk()

        if (promise) {
            this.setState({waiting: true})

            try {
                promise.then(this.endWaiting).catch(this.endWaiting)
            } catch (error) {
                this.endWaiting()
            }
        }
    }

    endWaiting() {
        this.setState({waiting: false})
    }

    render() {
        const {
            isOpen,
            toggle,
            title,
            children,
            okText,
            cancelText,
            onOk, // eslint-disable-line no-unused-vars
            errorMessage,
            className,
            submitting,
            ['data-abc-id']: dataAbcId,
            ...remain
        } = this.props

        const abcId = dataAbcId || 'confirmModal'
        const textClasses = className ? `${className} ${styles.messageContainer}` : styles.messageContainer

        const modalStyle = {
            background: `url('${texture}') no-repeat`,
            backgroundSize: 'cover',
            paddingBottom: '1rem',
            paddingTop: '3rem',
        }

        const isSubmitting = this.state.waiting || submitting

        return (
            <Modal
                isOpen={isOpen}
                toggle={toggle}
                className={styles.container}
                overlayHeader
            >
                <BannerModal
                    style={modalStyle}
                    indicator="error"
                    title={title}
                    styleType="primary"
                />
                <ModalBody>
                    <BaseText size="xl" weight="normal">
                        <div data-abc-id={abcId} className={textClasses} {...remain}>
                            {errorMessage &&
                                <Alert isOpen={Boolean(errorMessage)} type='danger'>
                                    {errorMessage}
                                </Alert>
                            }
                            <div>
                                {children}
                            </div>
                        </div>
                    </BaseText>
                </ModalBody>
                <ModalFooter className={styles.footer}>
                    <div className={styles.buttons}>
                        <Button block onClick={toggle} disabled={isSubmitting}>{cancelText}</Button>
                        <SubmitButton
                            btnStyle="primary"
                            block onClick={this.handleOk}
                            submitting={isSubmitting}
                        >
                            {okText}
                        </SubmitButton>
                    </div>
                </ModalFooter>
            </Modal>
        )
    }
}

ConfirmModal.propTypes = {
    children: PropTypes.node.isRequired,
    toggle: PropTypes.func.isRequired,
    onOk: PropTypes.func.isRequired,
    isOpen: PropTypes.bool,
    title: PropTypes.string,
    okText: PropTypes.string,
    cancelText: PropTypes.string,
    className: PropTypes.string,
    errorMessage: PropTypes.string,
    submitting: PropTypes.bool,
}

ConfirmModal.defaultProps = {
    isOpen: false,
    title: 'Danger',
    okText: 'Confirm',
    cancelText: 'Cancel',
    submitting: false,
}
