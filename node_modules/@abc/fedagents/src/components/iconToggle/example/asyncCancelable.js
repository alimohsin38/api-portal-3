import React, {Component} from 'react'
import {IconToggle} from '../../../export'

export default class AsyncCancelableIconToggleExample extends Component {
    constructor(props) {
        super(props)

        this.state = {
            checked: false,
        }

        this.handleToggle = this.handleToggle.bind(this)
        this.handleCancel = this.handleCancel.bind(this)
    }

    handleToggle(isChecked) {
        if (!this.asyncCall) {
            this.asyncCall = new Promise((resolve, reject) => {
                this.cancelAsync = reject
                this.asyncTimeout = setTimeout(() => resolve(isChecked), 2000)
            })
                .then(() => {
                    clearTimeout(this.asyncTimeout)
                    this.asyncCall = undefined
                    this.setState({checked: isChecked})
                }, () => {
                    clearTimeout(this.asyncTimeout)
                    this.asyncCall = undefined
                })
        }
        return this.asyncCall
    }

    handleCancel(isChecked) {
        this.setState({checked: isChecked})
        return this.cancelAsync ? this.cancelAsync('Cancelled') : (new Promise((resolve,reject) => reject()))
    }

    render() {
        const {checked} = this.state

        return (
            <IconToggle
                onCancel={this.handleCancel}
                checked={checked}
                onChange={this.handleToggle}
            />
        )
    }
}
