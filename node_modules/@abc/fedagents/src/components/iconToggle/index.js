import React, {Component} from 'react'
import PropTypes from 'prop-types'
import Icon from '@abc/quarkicons'
import {ToggleButton} from '@abc/protonpack'
import styles from './iconToggle.styl'
import classnames from 'classnames'

export default class IconToggle extends Component {
    constructor(props) {
        super(props)

        this.state = {
            waiting: false,
        }

        this.onToggle = this.onToggle.bind(this)
        this.endWaiting = this.endWaiting.bind(this)
        this.beginWaiting = this.beginWaiting.bind(this)
    }

    componentWillReceiveProps(nextProps) {
        if (nextProps.checked !== this.props.checked) {
            this.endWaiting()
        }
    }

    onToggle(value) {
        let promise

        if (this.timeout && this.props.onCancel) {
            this.endWaiting()
            promise = this.props.onCancel(!value)
        } else {
            this.timeout = this.timeout || setTimeout(this.beginWaiting, this.props.delay)
            promise = this.props.onChange(value)
            if (promise) {
                try {
                    promise.then(this.endWaiting, this.endWaiting).catch(this.endWaiting)
                } catch (error) {
                    this.endWaiting()
                }
            }
        }

        return promise
    }

    endWaiting() {
        clearTimeout(this.timeout)
        delete this.timeout
        this.setState({waiting:false})
    }

    beginWaiting() {
        this.setState({waiting:true})
    }

    render() {
        const {waiting} = this.state
        const {checked, checkedIcon, className, size, style, uncheckedIcon} = this.props
        const icon = checked && checkedIcon ? checkedIcon : uncheckedIcon

        const containerStyle = {
            [styles.container]: true,
        }

        if (className && className.trim().length > 0) {
            containerStyle[className] = true
        }

        const iconStyle = {
            [styles.icon]: true,
            [styles.waiting]: waiting,
        }

        return (
            <ToggleButton
                className={classnames(containerStyle)}
                onChange={this.onToggle}
                checked={checked}
                size={size}
                btnStyle={style}
            >
                <Icon
                    className={classnames(iconStyle)}
                    type={waiting ? 'spinner' : icon}
                />
            </ToggleButton>
        )
    }
}

IconToggle.propTypes = {
    checked: PropTypes.bool.isRequired,
    checkedIcon: PropTypes.string,
    className: PropTypes.string,
    delay: PropTypes.number,
    onCancel: PropTypes.func,
    onChange: PropTypes.func.isRequired,
    uncheckedIcon: PropTypes.string,
    size:  PropTypes.oneOf([
        'xs',
        'sm',
        'md',
        'lg',
        'xl',
        'xxl',
    ]),
    style: PropTypes.oneOf([
        'danger',
        'disabled',
        'info',
        'primary',
        'secondary',
        'success',
        'warning',
    ]),
}

IconToggle.defaultProps = {
    delay: 250,
    size: 'md',
    style: 'success',
    uncheckedIcon: 'checkmark',
}